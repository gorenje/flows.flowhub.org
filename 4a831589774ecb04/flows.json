[{"id":"4a831589774ecb04","type":"tab","label":"[NodeDev] FlowHub","disabled":false,"info":"::: aim\n\nThis flow maintains the [flowhub](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-flowhub) node package.\n\n:::\n\n::: requirements\n\n- [nodedev](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-nodedev) nodes are used to maintain the codebase.\n- [nodedev backend flow](https://flowhub.org/f/d0506e991d512ace) for GitHub & NPM interaction.\n\n:::\n\n::: background\n\nFlowHub nodes provide access to the flows hosted at [FlowHub](https://flowhub.org).\n\n:::\n\n::: artifacts\n\n- [NPMjs Package](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-flowhub)\n- [Node-RED node package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection)\n- [GitHub Repo](https://github.com/gorenje/node-red-contrib-flowhub)\n- The flow that maintains this [codebase](https://flowhub.org/f/4a831589774ecb04).\n\n:::\n\n### Related Flows\n\n- [Nodedev package development](https://flowhub.org/f/b92be5062203ff69)\n\n","env":[]},{"id":"670fa0a3b6469543","type":"group","z":"4a831589774ecb04","name":"Step 2: install package locally","style":{"fill":"#e3f3d3","fill-opacity":"0.57","label":true},"nodes":["718c45f187c1932d"],"x":659,"y":471,"w":212,"h":82},{"id":"c64d033291bb4d13","type":"group","z":"4a831589774ecb04","name":"Step 1: Install development flow","style":{"label":true},"nodes":["c771c8b6b7d91cb8"],"x":661,"y":333,"w":472,"h":82},{"id":"328f51ddaf7f2798","type":"link out","z":"4a831589774ecb04","name":"link out 116","mode":"link","links":["963dfb765b0d9849"],"x":1994,"y":1231,"wires":[]},{"id":"4544902f3075219a","type":"PkgFile","z":"4a831589774ecb04","name":".gitkeep","filename":"nodes/lib/.gitkeep","format":"text","syntax":"mustache","template":"/* empty */\n","output":"str","x":1470,"y":514,"wires":[["77b94e7d86cd0150"]]},{"id":"77b94e7d86cd0150","type":"PkgFile","z":"4a831589774ecb04","name":"LICENSE","filename":"LICENSE","format":"markdown","syntax":"mustache","template":"## LICENSE\n\nAdapted from JSON.org, http://www.json.org/license.html\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe Software shall be used for Good, not Evil.\n\nRemember the curse of the evil-doer upon whose blood the devil does drink and upon whose flesh the devil does feast. For eternity will the evil-doer bear this Sisyphean burden, only to be relieved of their suffering upon the apocalyptic end of it all including the foundations of the internet, computers, technology and mice. Only after the last AI enters the blue-screen-of-death modus, only then will the evil-doer be freed of their rightful and justified punishment for doing evil.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nTHE CURSE IS PROVIDED \"AS IS\" OR \"WORSE\", NO SOFTENING OF ANY KIND IS HEREBY EXPRESSED, IMPLIED OR OFFERED. MAY ALL EVIL-DOERS SUFFER IN ETERNITY.\n","output":"str","x":1470,"y":562.6666666666666,"wires":[["f4466077a13b5b66"]]},{"id":"1e1a3eaeb9e19c05","type":"PkgFile","z":"4a831589774ecb04","name":"90-flowhub-pull.js","filename":"nodes/90-flowhub-pull.js","format":"javascript","syntax":"mustache","template":"module.exports = function(RED) {\n  function FlowHubPullFunctionality(config) {\n    RED.nodes.createNode(this,config);\n\n    var node = this;\n    var cfg = config;\n\n    node.on('close', function() {\n      node.status({});\n    });\n\n    node.on(\"input\", function(msg, send, done) {\n      if ( cfg.flowid || msg.flowid ) {\n\n        import('got').then( (module) => {\n          module.got.get( \"https://api.flowhub.org/v1/flows/\" + (\n            cfg.flowid || msg.flowid\n          ) + \"?cb=\" + new Date().getTime() + \"&v=\" + (\n            cfg.flowrevision || msg.flowrevision\n          ), \n          {\n            headers: {\n              \"FlowHub-API-Version\": \"brownbear\",\n            },\n            timeout: {\n              request: 25000,\n              response: 25000\n            }\n          }).then( resp => {\n\n            try {\n              var payload = JSON.parse( resp.body )\n\n              if ( cfg.notab ) {\n                payload = payload.filter( (nde) => {\n                  return nde.type != \"tab\";\n                })\n              }\n\n              node.send({\n                ...msg,\n                payload: payload\n              });\n            } catch (err) {\n              node.status({fill:\"red\",shape:\"dot\",text:\"Response Failed\"});\n              setTimeout( () => { node.status({}); }, 2500)\n              node.error({...msg, error: err})\n              return\n            }\n\n          }).catch( err => {\n            node.status({fill:\"red\",shape:\"dot\",text:\"Failed\"});\n            setTimeout( () => { node.status({}); }, 2500)\n            node.error({...msg, error: err})\n          });\n        });\n      } else {\n        node.status({fill:\"yellow\",shape:\"dot\",text:\"No FlowId defined\"});\n        setTimeout( () => { node.status({}); }, 2500)\n      }\n    });\n  }\n\n  RED.nodes.registerType(\"FlowHubPull\", FlowHubPullFunctionality);\n}\n","output":"str","x":1096,"y":807,"wires":[["128595ceb3bd55ed"]]},{"id":"64c316345ca030ed","type":"PkgFile","z":"4a831589774ecb04","name":"diff.svg","filename":"nodes/icons/flowhubdiff.svg","format":"html","syntax":"plain","template":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   inkscape:version=\"1.0 (4035a4f, 2020-05-01)\"\n   sodipodi:docname=\"pull.svg\"\n   width=\"40\"\n   height=\"60\"\n   viewBox=\"0 0 10.583332 15.875\"\n   version=\"1.1\"\n   id=\"svg8\">\n  <metadata\n     id=\"metadata1500\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs1498\" />\n  <sodipodi:namedview\n     inkscape:current-layer=\"g920\"\n     inkscape:window-maximized=\"0\"\n     inkscape:window-y=\"132\"\n     inkscape:window-x=\"942\"\n     inkscape:cy=\"30\"\n     inkscape:cx=\"20\"\n     inkscape:zoom=\"12.25\"\n     inkscape:pagecheckerboard=\"false\"\n     showgrid=\"false\"\n     id=\"namedview1496\"\n     inkscape:window-height=\"1286\"\n     inkscape:window-width=\"1505\"\n     inkscape:pageshadow=\"2\"\n     inkscape:pageopacity=\"1\"\n     guidetolerance=\"10\"\n     gridtolerance=\"10\"\n     objecttolerance=\"10\"\n     borderopacity=\"1\"\n     bordercolor=\"#666666\"\n     pagecolor=\"#54ffff\" />\n  <g\n     id=\"g1493\"\n     transform=\"translate(-64.067337,-191.75026)\">\n    <g\n       id=\"g920\"\n       transform=\"matrix(0.06875473,0,0,0.06875473,60.733678,189.76112)\">\n      <path\n         sodipodi:nodetypes=\"cccsc\"\n         style=\"display:inline;fill:none;stroke:#feffff;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 68.967043,144.15371 c 3.77159,-9.36011 1.544185,-14.87811 4.336674,-21.4803 m 67.927263,74.20454 c -16.65926,5.92472 -0.88123,0.3286 -15.04855,5.94176 -44.731024,17.72261 -77.39015,0.48361 -57.215387,-58.666\"\n         id=\"path1480-0\" />\n      <path\n         sodipodi:nodetypes=\"cssc\"\n         id=\"path1480\"\n         d=\"m 110.38033,92.47417 c 6.92523,-3.433394 3.84836,-2.101056 14.46623,-7.043379 37.53643,-17.472178 68.95668,-1.070419 54.31415,58.956109 -1.80568,7.40234 -1.54418,14.87812 -4.33667,21.48031\"\n         style=\"display:inline;fill:none;fill-opacity:1;stroke:#feffff;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      <path\n         id=\"path1482\"\n         d=\"M 79.885769,147.18672 56.634817,115.65651 93.029528,112.49008 Z\"\n         style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:3.00449;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      <path\n         id=\"path1484\"\n         style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:2.84748;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 168.64197,144.19161 27.14195,25.64441 -37.59095,4.89519 z\" />\n      <g\n         id=\"g1490\"\n         transform=\"matrix(1.2218117,-1.333198,1.2520855,1.3003898,-230.66063,106.41276)\"\n         style=\"fill:#f76428;fill-opacity:1;stroke:#f76428;stroke-opacity:1\">\n        <path\n           id=\"path1486\"\n           style=\"fill:#f76428;fill-opacity:1;stroke:#f76428;stroke-width:0.589467;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n           d=\"m 153.23127,152.98476 h -9.50556 c -5.6e-4,4.92055 1.3e-4,4.66018 0,9.73839 h 9.15765 c 1.55458,0 2.41768,-1.27022 2.41768,-2.84803 v -4.04233 c 0,-1.5778 -0.60217,-2.84803 -2.06977,-2.84803 z\" />\n        <path\n           id=\"path1488\"\n           d=\"m 138.49972,153.20254 c 0.001,4.73234 -3.1e-4,4.48193 0,9.36589 l -26.6763,0.18958 c -4.21431,-1.91523 -8.26099,-2.42445 -15.417153,-4.64146 6.139693,-3.00782 10.544283,-3.7762 14.690593,-5.60667 11.19047,-0.12576 16.51318,0.72004 27.40286,0.69266 z\"\n           style=\"fill:#f76428;fill-opacity:1;stroke:#f76428;stroke-width:0.896822;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      </g>\n    </g>\n  </g>\n</svg>\n","output":"str","x":1478,"y":1226.3333333333335,"wires":[["00771b248053d9f5"]]},{"id":"422778cae449fea2","type":"PkgFile","z":"4a831589774ecb04","name":"pull.svg","filename":"nodes/icons/flowhubpull.svg","format":"html","syntax":"plain","template":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" inkscape:version=\"1.0 (4035a4f, 2020-05-01)\"\n   sodipodi:docname=\"pull.svg\" width=\"40\" height=\"60\" viewBox=\"0 0 10.583332 15.875\" version=\"1.1\" id=\"svg8\">\n   <metadata id=\"metadata1500\">\n      <rdf:RDF>\n         <cc:Work rdf:about=\"\">\n            <dc:format>image/svg+xml</dc:format>\n            <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n            <dc:title></dc:title>\n         </cc:Work>\n      </rdf:RDF>\n   </metadata>\n   <defs id=\"defs1498\" />\n   <sodipodi:namedview inkscape:current-layer=\"g920\" inkscape:window-maximized=\"0\" inkscape:window-y=\"132\"\n      inkscape:window-x=\"942\" inkscape:cy=\"30\" inkscape:cx=\"20\" inkscape:zoom=\"12.25\" inkscape:pagecheckerboard=\"false\"\n      showgrid=\"false\" id=\"namedview1496\" inkscape:window-height=\"1286\" inkscape:window-width=\"1505\"\n      inkscape:pageshadow=\"2\" inkscape:pageopacity=\"1\" guidetolerance=\"10\" gridtolerance=\"10\" objecttolerance=\"10\"\n      borderopacity=\"1\" bordercolor=\"#666666\" pagecolor=\"#54ffff\" />\n   <g id=\"g1493\" transform=\"translate(-64.067337,-191.75026)\">\n      <g id=\"g920\" transform=\"matrix(0.06875473,0,0,0.06875473,60.733678,189.76112)\">\n         <path sodipodi:nodetypes=\"cccsc\"\n            style=\"display:inline;fill:none;stroke:#feffff;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n            d=\"m 68.967043,144.15371 c 3.77159,-9.36011 1.544185,-14.87811 4.336674,-21.4803 m 67.927263,74.20454 c -16.65926,5.92472 -0.88123,0.3286 -15.04855,5.94176 -44.731024,17.72261 -77.39015,0.48361 -57.215387,-58.666\"\n            id=\"path1480-0\" />\n         <path sodipodi:nodetypes=\"cssc\" id=\"path1480\"\n            d=\"m 110.38033,92.47417 c 6.92523,-3.433394 3.84836,-2.101056 14.46623,-7.043379 37.53643,-17.472178 68.95668,-1.070419 54.31415,58.956109 -1.80568,7.40234 -1.54418,14.87812 -4.33667,21.48031\"\n            style=\"display:inline;fill:none;fill-opacity:1;stroke:#f76428;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n         <path id=\"path1482\" d=\"M 79.885769,147.18672 56.634817,115.65651 93.029528,112.49008 Z\"\n            style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:3.00449;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n         <path id=\"path1484\"\n            style=\"fill:#f76428;fill-opacity:1;stroke:#f76428;stroke-width:2.84748;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n            d=\"m 168.64197,144.19161 27.14195,25.64441 -37.59095,4.89519 z\" />\n         <g id=\"g1490\" transform=\"matrix(1.2218117,-1.333198,1.2520855,1.3003898,-230.66063,106.41276)\"\n            style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-opacity:1\">\n            <path id=\"path1486\"\n               style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:0.589467;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n               d=\"m 153.23127,152.98476 h -9.50556 c -5.6e-4,4.92055 1.3e-4,4.66018 0,9.73839 h 9.15765 c 1.55458,0 2.41768,-1.27022 2.41768,-2.84803 v -4.04233 c 0,-1.5778 -0.60217,-2.84803 -2.06977,-2.84803 z\" />\n            <path id=\"path1488\"\n               d=\"m 138.49972,153.20254 c 0.001,4.73234 -3.1e-4,4.48193 0,9.36589 l -26.6763,0.18958 c -4.21431,-1.91523 -8.26099,-2.42445 -15.417153,-4.64146 6.139693,-3.00782 10.544283,-3.7762 14.690593,-5.60667 11.19047,-0.12576 16.51318,0.72004 27.40286,0.69266 z\"\n               style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:0.896822;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n         </g>\n      </g>\n   </g>\n</svg>","output":"str","x":1480,"y":1141,"wires":[["40d6bd842110c67c"]]},{"id":"82662f3b812d6c5b","type":"PkgFile","z":"4a831589774ecb04","name":"90-flowhub-pull.html","filename":"nodes/90-flowhub-pull.html","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n (function(){\n   function flowHubUpdateFlows(cb=null) {\n     $.get(\n       \"https://api.flowhub.org/v1/flows?cb=\" + new Date().getTime()\n     ).done( (resp) => {\n       var treeListItems = [];\n\n       Object.keys( resp.data ).forEach( function(key) {\n         treeListItems.push( {\n           label:    resp.data[key].name,\n           icon:     \"fa fa-eye\",\n           flowid:   key,\n           sublabel: key,\n           selected: $('#node-input-flowid').val() == key,\n           checkbox: false,\n           children: undefined\n         });\n       });\n\n       if ( cb ) {\n         treeListItems.sort( (a,b) => {\n           return a.label < b.label ? -1 : 1;\n         });\n\n         cb(treeListItems)\n       };\n     }).fail( (e) => {\n       var msg = \"\";\n\n       if ( e.state() == \"rejected\" ) {\n         msg = \"<p>Failed to retrieve FlowHub catalogue, request blocked.</p>\"+\n               \"<p>AdBlocker or uBlock might have prevented request.</p>\"+\n               \"<p>Please check browser console for more details.</p>\";\n       } else {\n         msg = \"<p>Failed to retrieve FlowHub catalogue.</p>\" +\n               \"<p>Check browser console for more details.</p>\";\n       }\n\n       console.warn(\"Error loading https://api.flowhub.org/v1/flows:\",e);\n       RED.notify(msg, {\n           type: \"error\",\n           id: \"FlowHubPull\",\n           timeout: 4000\n         }\n       );\n     });\n   };\n\n   RED.nodes.registerType('FlowHubPull',{\n     color: '#44eeff',\n     icon: \"flowhubpull.svg\",\n     category: 'flowhub',\n     defaults: {\n       name: { value: \"\"},\n       notab: { value: false },\n       flowid: { value: \"\" },\n       flowname: { value: \"\" },\n       flowrevision: { value: \"\" }\n     },\n     inputs: 1,\n     outputs: 1,\n\n     label: function() {\n       return (this.name || this.flowname || this.flowid || this._def.paletteLabel);\n     },\n\n     onpaletteadd: () => {\n     },\n\n     oneditresize: function(size) {\n       if ( this._resize ) { this._resize(); };\n     },\n\n     oneditprepare: function() {\n       var dirList = $(\"#node-input-flowhubpull-target-container-div\").css({\n        width: \"100%\",\n        height: \"100%\"\n       }).treeList(\n         {\n           multi:false\n         }\n       ).on('treelistselect', function(event, item) {\n         if ( item.flowid ) {\n           $('#node-input-flowid').val(item.flowid);\n           $('#node-input-flowname').val(item.label);\n           $('#flowhubpull-view-flow-link').attr(\n             'href', 'https://flowhub.org/f/'+item.flowid\n           ).show();\n           $('#node-input-import-flow-but').prop('disabled',false)\n         }\n       });\n\n       var items = [];\n\n       if ( this.flowid ) {\n         setTimeout( () => {\n           $('#flowhubpull-view-flow-link').attr(\n             'href', 'https://flowhub.org/f/' + $('#node-input-flowid').val()\n           ).show();\n         }, 200);\n       } else {\n        $('#node-input-import-flow-but').prop('disabled',true)\n       }\n\n       this._resize = function() {\n         var rows = $(\"#dialog-form>div:not(.node-input-target-list-row)\");\n         var height = $(\"#dialog-form\").height();\n         for (var i=0;i<rows.length;i++) {\n           height -= $(rows[i]).outerHeight(true);\n         }\n         var editorRow = $(\"#dialog-form>div.node-input-target-list-row\");\n         editorRow.css(\"height\",height+\"px\");\n       };\n\n       var search = $(\"#node-input-flowhubpull-target-filter\").searchBox({\n         style: \"compact\",\n         delay: 300,\n         change: function() {\n           var val = $(this).val().trim().toLowerCase();\n           if (val === \"\") {\n             dirList.treeList(\"filter\", null);\n             search.searchBox(\"count\",\"\");\n           } else {\n             var count = dirList.treeList(\"filter\", function(item) {\n               return item.label.toLowerCase().indexOf(val) > -1 || item.sublabel.toLowerCase().indexOf(val) > -1\n             });\n             search.searchBox(\"count\",count+\" / \"+items.length);\n           }\n         }\n       });\n\n       flowHubUpdateFlows((treeListItems) => {\n         items = treeListItems;\n         dirList.treeList('data', treeListItems);\n       });\n\n       $('#node-input-refresh-list-but').on('click', function(e) {\n         e.preventDefault();\n\n         setTimeout( () => {\n           flowHubUpdateFlows((treeListItems) => {\n             items = treeListItems;\n             dirList.treeList('data', treeListItems);\n           });\n         }, 300);\n       });\n\n       $(\"#node-input-import-flow-but\").on(\"click\", function(e) {\n         e.preventDefault();\n\n         var notab = $('#node-input-notab').prop('checked');\n\n         if ( $('#node-input-flowid').val().trim() == \"\" ||\n              !$('#node-input-flowid').val() ) {\n           return RED.notify(RED._(\"notification.warning\", {\n             message: \"FlowID not provided, doing nothing.\"\n           }), \"warning\");\n         }\n\n         $('#node-dialog-ok').trigger('click')\n\n         $.get( \"https://api.flowhub.org/v1/flows/\" +\n                $('#node-input-flowid').val() +\n                \"?cb=\" + new Date().getTime() + \"&v=\" + \n                $('#node-input-flowrevision').val(), function(e,d) {\n                  RED.clipboard.import();\n\n                  setTimeout( () => {\n                    var content = e;\n\n                    if ( notab ) {\n                      content = e.filter(function(o) {\n                        return o.type != \"tab\"\n                      });\n                    }\n\n                    $('#red-ui-clipboard-dialog-import-text').val(\n                      JSON.stringify(content)\n                    ).trigger(\"paste\");\n                  }, 300);\n                });\n       });\n\n       if ( this.notab ) {\n         $('#flowhubpull-dialog-import-opt-current').addClass('selected')\n         $('#flowhubpull-dialog-import-opt-new').removeClass('selected')\n        } else {\n         $('#flowhubpull-dialog-import-opt-new').addClass('selected')\n         $('#flowhubpull-dialog-import-opt-current').removeClass('selected')\n       }\n       \n       $('#flowhubpull-dialog-import-opt-current').on('click', (e) => {\n         e.preventDefault();\n         $('#node-input-notab').prop('checked', true)\n         $('#flowhubpull-dialog-import-opt-new').removeClass('selected')\n         $('#flowhubpull-dialog-import-opt-current').addClass('selected')\n       })\n\n       $('#flowhubpull-dialog-import-opt-new').on('click', (e) => {\n         e.preventDefault();\n         $('#node-input-notab').prop('checked', false)\n         $('#flowhubpull-dialog-import-opt-current').removeClass('selected')\n         $('#flowhubpull-dialog-import-opt-new').addClass('selected')\n       })\n     },\n\n     oneditcancel: function() {\n     },\n\n     oneditsave: function() {\n     },\n\n     labelStyle: function() {\n       return this.name?\"node_label_italic\":\"\";\n     },\n   });\n })();\n</script>\n\n<script type=\"text/html\" data-template-name=\"FlowHubPull\">\n    <div class=\"form-row\">\n        <input type=\"text\" id=\"node-input-flowid\" disabled=\"disabled\"\n               style=\"display:inline-block; width:40%; vertical-align:baseline;\"\n               placeholder=\"FlowId to Import\">\n        <button id=\"node-input-import-flow-but\"\n                class=\"red-ui-button\">Import Flow</button>\n        <input type=\"text\" id=\"node-input-flowname\" style=\"display: none;\">\n\n        <a id=\"flowhubpull-view-flow-link\" style=\"color: blue; display: none; padding-left: 80px;\" target=\"_blank\" href=\"\">View\n          Flow <i class=\"fa fa-external-link\"></i></a>\n    </div>\n\n    <div class=\"form-row\">\n      <label>\n            <span>Import to:</span>\n      </label>\n\n      <input type=\"checkbox\" id=\"node-input-notab\" style=\"display:none;\">\n      <span>\n        <a id=\"flowhubpull-dialog-import-opt-current\" class=\"red-ui-button toggle\" href=\"#\" data-i18n=\"clipboard.export.current\">current flow</a>\n        <a id=\"flowhubpull-dialog-import-opt-new\" class=\"red-ui-button toggle\" href=\"#\" data-i18n=\"clipboard.import.newFlow\">new flow</a>\n      </span>\n    </div>\n\n    <div class=\"form-row node-input-target-row\">\n        <button id=\"node-input-refresh-list-but\"\n                class=\"red-ui-button\">Refresh</button>\n    </div>\n\n    <div class=\"form-row node-input-target-row node-input-target-list-row\"\n         style=\"position: relative; min-height: 100px\">\n        <div style=\"position: absolute; top: -30px; right: 0px;\">\n            <input type=\"text\" id=\"node-input-flowhubpull-target-filter\">\n        </div>\n\n        <div id=\"node-input-flowhubpull-target-container-div\"></div>\n    </div>\n\n    <div class=\"form-row\">\n        All flows are licensed under a copyleft <a style=\"color: blue;\" target=\"_blank\" href=\"https://raw.githubusercontent.com/gorenje/flows.flowhub.org/main/LICENSE\">license <i class=\"fa fa-external-link\"></i></a>,<br>\n        hereby permission is given to use any flow for any purpose <br>\n        <b>other than</b> for evil. No guarantee of purpose fulfillment<br>\n        is made nor warrenty for failure - all risk is carried by the user.\n    </div>\n\n    <div class=\"form-row\">\n      <label for=\"node-input-flowrevision\"><i class=\"fa fa-tag\"></i> Revision</label>\n      <input type=\"text\" id=\"node-input-flowrevision\" placeholder=\"Revision\"/>\n    </div>\n    \n    <div class=\"form-row\">\n      <hr/>\n    </div>\n\n    <div class=\"form-row\">\n      <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> <span data-i18n=\"common.label.name\">Name</span></label>\n      <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\"/>\n    </div>\n</script>\n\n<script type=\"text/html\" data-help-name=\"FlowHubPull\">\n    <p>\n        Import Flows from FlowHub.org. Opens the flow import dialog\n        with flow data. Flow can be imported into a new tab or the\n        existing tab.\n    </p>\n</script>\n","output":"str","x":1094,"y":748,"wires":[["1e1a3eaeb9e19c05"]]},{"id":"40d6bd842110c67c","type":"PkgFile","z":"4a831589774ecb04","name":"push.svg","filename":"nodes/icons/flowhubpush.svg","format":"html","syntax":"plain","template":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   inkscape:version=\"1.0 (4035a4f, 2020-05-01)\"\n   sodipodi:docname=\"pull.svg\"\n   width=\"40\"\n   height=\"60\"\n   viewBox=\"0 0 10.583332 15.875\"\n   version=\"1.1\"\n   id=\"svg8\">\n  <metadata\n     id=\"metadata1500\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs1498\" />\n  <sodipodi:namedview\n     inkscape:current-layer=\"g920\"\n     inkscape:window-maximized=\"0\"\n     inkscape:window-y=\"132\"\n     inkscape:window-x=\"942\"\n     inkscape:cy=\"30\"\n     inkscape:cx=\"20\"\n     inkscape:zoom=\"12.25\"\n     inkscape:pagecheckerboard=\"false\"\n     showgrid=\"false\"\n     id=\"namedview1496\"\n     inkscape:window-height=\"1286\"\n     inkscape:window-width=\"1505\"\n     inkscape:pageshadow=\"2\"\n     inkscape:pageopacity=\"1\"\n     guidetolerance=\"10\"\n     gridtolerance=\"10\"\n     objecttolerance=\"10\"\n     borderopacity=\"1\"\n     bordercolor=\"#666666\"\n     pagecolor=\"#54ffff\" />\n  <g\n     id=\"g1493\"\n     transform=\"translate(-64.067337,-191.75026)\">\n    <g\n       id=\"g920\"\n       transform=\"matrix(0.06875473,0,0,0.06875473,60.733678,189.76112)\">\n      <path\n         sodipodi:nodetypes=\"cccsc\"\n         style=\"display:inline;fill:none;stroke:#f76428;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 68.967043,144.15371 c 3.77159,-9.36011 1.544185,-14.87811 4.336674,-21.4803 m 67.927263,74.20454 c -16.65926,5.92472 -0.88123,0.3286 -15.04855,5.94176 -44.731024,17.72261 -77.39015,0.48361 -57.215387,-58.666\"\n         id=\"path1480-0\" />\n      <path\n         sodipodi:nodetypes=\"cssc\"\n         id=\"path1480\"\n         d=\"m 110.38033,92.47417 c 6.92523,-3.433394 3.84836,-2.101056 14.46623,-7.043379 37.53643,-17.472178 68.95668,-1.070419 54.31415,58.956109 -1.80568,7.40234 -1.54418,14.87812 -4.33667,21.48031\"\n         style=\"display:inline;fill:none;fill-opacity:1;stroke:#feffff;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      <path\n         id=\"path1482\"\n         d=\"M 79.885769,147.18672 56.634817,115.65651 93.029528,112.49008 Z\"\n         style=\"fill:#f76428;fill-opacity:1;stroke:#f76428;stroke-width:3.00449;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      <path\n         id=\"path1484\"\n         style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:2.84748;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 168.64197,144.19161 27.14195,25.64441 -37.59095,4.89519 z\" />\n      <g\n         id=\"g1490\"\n         transform=\"matrix(1.2218117,-1.333198,1.2520855,1.3003898,-230.66063,106.41276)\"\n         style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-opacity:1\">\n        <path\n           id=\"path1486\"\n           style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:0.589467;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n           d=\"m 153.23127,152.98476 h -9.50556 c -5.6e-4,4.92055 1.3e-4,4.66018 0,9.73839 h 9.15765 c 1.55458,0 2.41768,-1.27022 2.41768,-2.84803 v -4.04233 c 0,-1.5778 -0.60217,-2.84803 -2.06977,-2.84803 z\" />\n        <path\n           id=\"path1488\"\n           d=\"m 138.49972,153.20254 c 0.001,4.73234 -3.1e-4,4.48193 0,9.36589 l -26.6763,0.18958 c -4.21431,-1.91523 -8.26099,-2.42445 -15.417153,-4.64146 6.139693,-3.00782 10.544283,-3.7762 14.690593,-5.60667 11.19047,-0.12576 16.51318,0.72004 27.40286,0.69266 z\"\n           style=\"fill:#feffff;fill-opacity:1;stroke:#feffff;stroke-width:0.896822;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      </g>\n    </g>\n  </g>\n</svg>\n","output":"str","x":1480,"y":1183.6666666666667,"wires":[["64c316345ca030ed"]]},{"id":"f4466077a13b5b66","type":"PkgFile","z":"4a831589774ecb04","name":"README.md","filename":"README.md","format":"markdown","syntax":"mustache","template":"## FlowHub: Gist for Node-RED\n\n**Work In Progress**\n\n**Update**: Experimental submission is now possible using email & full-name. Pleae be aware that this service is *experimental* so don't expect too much.\n\nThese are the Node-RED nodes that interact with [FlowHub.org](https://flowhub.org).\n\n[FlowHub.org](https://FlowHub.org) is an experimental first attempt to provide a gist/pastebin-like service for Node-RED.\n\nThe aim is to make it easy to share flow-tabs amongst Node-RED developers.\n\nFlows can be exported directly from the Node-RED editor to FlowHub.org. Flows that have been edited but not deployed can be exported. Flows are taken from the editor not the Node-RED server.\n\nFlows can be imported into the Node-RED editor using the pull node. Flows can be imported into new tabs or directly into existing tabs.\n\n## Node: FlowHub - Pull\n\nNode for importing flows from FlowHub.org. Flows may be imported into an existing tab or a new tab.\n\n## Node: FlowHub - Push\n\nNode for pushing in-editor flows to FlowHub.org. Flows do not need to be deployed to be exported.\n\nBy exporting any flows you accept the license as described below.\n\nThe entire flow-tab is exported to FlowHub.org, so beware what you export.\n\nPushing flows can now be done using your email and name, no API token is necessary. Be aware that email verification is necessary for **every** submission.\n\n## Node: FlowHub - Diff\n\nCompare the local version of a flow with the latest version at FlowHub.org. \n\nProperty panel for the diff node:\n\n![img](https://cdn.openmindmap.org/content/1696512960899_Screen_Shot_2023-10-05_at_15.19.11.png)\n\n## License\n\nAll flows found here are licensed under the [don't do evil license](https://cdn.openmindmap.org/LICENSE.txt).\n\n**Usage of FlowHub.org implies adherence to that license.**.\n\n## Artifacts\n\n- [NPMjs Package](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-flowhub)\n- [Node-RED node package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-flowhub)\n- [GitHub Repo](https://github.com/gorenje/node-red-contrib-flowhub)\n- The flow that maintains this [codebase](https://flowhub.org/f/4a831589774ecb04).\n\n\n","output":"str","x":1479,"y":612.3333333333333,"wires":[["b046cb6ade413611"]]},{"id":"718c45f187c1932d","type":"NodeDevOps","z":"4a831589774ecb04","g":"670fa0a3b6469543","name":"","pname":"@gregoriusrippenstein/node-red-contrib-flowhub","pversion":"0.2.9","pauthorname":"Gerrit Riessen","pauthoremail":"gerrit@openmindmap.org","pdescription":"Nodes for interacting with FlowHub.org.","noderedinstall":true,"randompackagename":true,"ignore_package_check":false,"gitcommit":false,"gitcheckforchange":false,"githubowner":"gorenje","githubrepo":"node-red-contrib-flowhub","githubbranch":"main","githubauthor":"Gerrit Riessen","githubauthoremail":"gerrit@openmindmap.org","githubmessage":"FlowHubPush now also a sidebar node","npmpublish":false,"npmunpublish":false,"npmotp":"111999","x":775,"y":512,"wires":[["4544902f3075219a"]]},{"id":"00771b248053d9f5","type":"PkgFile","z":"4a831589774ecb04","name":"logo.svg","filename":"nodes/icons/flowhublogo.svg","format":"html","syntax":"plain","template":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   inkscape:version=\"1.0 (4035a4f, 2020-05-01)\"\n   sodipodi:docname=\"pull.svg\"\n   width=\"40\"\n   height=\"60\"\n   viewBox=\"0 0 10.583332 15.875\"\n   version=\"1.1\"\n   id=\"svg8\">\n  <metadata\n     id=\"metadata1500\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs1498\" />\n  <sodipodi:namedview\n     inkscape:current-layer=\"g920\"\n     inkscape:window-maximized=\"0\"\n     inkscape:window-y=\"132\"\n     inkscape:window-x=\"942\"\n     inkscape:cy=\"30\"\n     inkscape:cx=\"20\"\n     inkscape:zoom=\"12.25\"\n     inkscape:pagecheckerboard=\"false\"\n     showgrid=\"false\"\n     id=\"namedview1496\"\n     inkscape:window-height=\"1286\"\n     inkscape:window-width=\"1505\"\n     inkscape:pageshadow=\"2\"\n     inkscape:pageopacity=\"1\"\n     guidetolerance=\"10\"\n     gridtolerance=\"10\"\n     objecttolerance=\"10\"\n     borderopacity=\"1\"\n     bordercolor=\"#666666\"\n     pagecolor=\"#54ffff\" />\n  <g\n     id=\"g1493\"\n     transform=\"translate(-64.067337,-191.75026)\">\n    <g\n       id=\"g920\"\n       transform=\"matrix(0.06875473,0,0,0.06875473,60.733678,189.76112)\">\n      <path\n         sodipodi:nodetypes=\"cccsc\"\n         style=\"display:inline;fill:none;stroke:#666;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 68.967043,144.15371 c 3.77159,-9.36011 1.544185,-14.87811 4.336674,-21.4803 m 67.927263,74.20454 c -16.65926,5.92472 -0.88123,0.3286 -15.04855,5.94176 -44.731024,17.72261 -77.39015,0.48361 -57.215387,-58.666\"\n         id=\"path1480-0\" />\n      <path\n         sodipodi:nodetypes=\"cssc\"\n         id=\"path1480\"\n         d=\"m 110.38033,92.47417 c 6.92523,-3.433394 3.84836,-2.101056 14.46623,-7.043379 37.53643,-17.472178 68.95668,-1.070419 54.31415,58.956109 -1.80568,7.40234 -1.54418,14.87812 -4.33667,21.48031\"\n         style=\"display:inline;fill:none;fill-opacity:1;stroke:#666;stroke-width:12.5029;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      <path\n         id=\"path1482\"\n         d=\"M 79.885769,147.18672 56.634817,115.65651 93.029528,112.49008 Z\"\n         style=\"fill:#666;fill-opacity:1;stroke:#666;stroke-width:3.00449;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      <path\n         id=\"path1484\"\n         style=\"fill:#666;fill-opacity:1;stroke:#666;stroke-width:2.84748;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 168.64197,144.19161 27.14195,25.64441 -37.59095,4.89519 z\" />\n      <g\n         id=\"g1490\"\n         transform=\"matrix(1.2218117,-1.333198,1.2520855,1.3003898,-230.66063,106.41276)\"\n         style=\"fill:#666;fill-opacity:1;stroke:#666;stroke-opacity:1\">\n        <path\n           id=\"path1486\"\n           style=\"fill:#666;fill-opacity:1;stroke:#666;stroke-width:0.589467;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n           d=\"m 153.23127,152.98476 h -9.50556 c -5.6e-4,4.92055 1.3e-4,4.66018 0,9.73839 h 9.15765 c 1.55458,0 2.41768,-1.27022 2.41768,-2.84803 v -4.04233 c 0,-1.5778 -0.60217,-2.84803 -2.06977,-2.84803 z\" />\n        <path\n           id=\"path1488\"\n           d=\"m 138.49972,153.20254 c 0.001,4.73234 -3.1e-4,4.48193 0,9.36589 l -26.6763,0.18958 c -4.21431,-1.91523 -8.26099,-2.42445 -15.417153,-4.64146 6.139693,-3.00782 10.544283,-3.7762 14.690593,-5.60667 11.19047,-0.12576 16.51318,0.72004 27.40286,0.69266 z\"\n           style=\"fill:#666;fill-opacity:1;stroke:#666;stroke-width:0.896822;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n      </g>\n    </g>\n  </g>\n</svg>\n","output":"str","x":1480,"y":1269,"wires":[["328f51ddaf7f2798"]]},{"id":"490bda49643c197a","type":"NodeFactory","z":"4a831589774ecb04","name":"FlowHubDiff - sidebar","nodename":"FlowHubDiff","color":"#e5e4ef","hasbutton":false,"hasinput":false,"outputcount":"0","category":"flowhub","summary":"Compare the local version of a flow with the latest version at FlowHub.org\n","description":"This node can be used to compare flows that have been modified locally with those stored on FlowHub. Difference are highlighted in the property panel. Nodes marked with <i class=\"fa fa-eye\"></i> are changes that are only visual, changes marked with a <i class=\"fa fa-pencil\"></i> have textual changes.","icon":"font-awesome/fa-balance-scale","frt2bakcomm":false,"bak2frtcomm":false,"createmanifest":false,"isplugin":true,"x":768,"y":683,"wires":[[]]},{"id":"adddc3bf83fd41b1","type":"PkgFile","z":"4a831589774ecb04","name":"Sidebar: FlowHubDiff.html","filename":"plugins/flowhubdiff.html","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n(function() {\n   var globalYourConfigNode = null;\n   \n   {{{ flowHubDiffHtmlFrontendJs }}}\n\n   function ensureYourConfigNodeExists() {\n      // This function makes sure there is 1 instance of your config node is available, and that the globalYourConfigNode variable refers to it.\n      // Explained in the next step of this tutorial... --> https://discourse.nodered.org/t/tutorial-create-a-sidebar-plugin-and-persist-the-data-in-a-config-node/82020\n\n      // If we had found it previously, check if it has been deleted by the user behind our back\n      if (globalYourConfigNode !== null) {\n         var configNode = RED.nodes.node(globalYourConfigNode.id);\n         if (configNode === null) { globalYourConfigNode = null; }\n      }\n\n      // If not found previously, let's go find it\n      if (globalYourConfigNode === null) {\n         var configNodes = [];\n         RED.nodes.eachConfig(function(configNode) {\n             if (configNode.type === 'FlowHubDiffCfg') { \n                 configNodes.push(configNode); \n             }\n         });\n\n         // Make sure we only have 1 config node\n         while (configNodes.length > 1) {\n             var configNode = configNodes.pop();\n             RED.nodes.remove(configNode.id);\n             RED.nodes.dirty(true);\n         }\n\n         // When we found a config node, let's use that one\n         if (configNodes.length === 1) { globalYourConfigNode = configNodes[0]; }\n      }\n\n      // When it doesn't exist yet, create it if required\n      if (globalYourConfigNode === null) {\n         // Remark: since this config node is dynamically created (and only used in this sidebar which isn't another node), the config\n         // node is in fact \"unused\".  But since we don't want it to appear \"unused\" in the \"config nodes\" panel, we need to set hasUsers\n         // to false (see https://github.com/node-red/node-red/blob/master/CHANGELOG.md#0161-maintenance-release).\n         // The hasUsers needs also to be specified in the RED.nodes.registerType statement!\n         globalYourConfigNode = {\n             id: RED.nodes.id(), // on the server side, this is called RED.util.generateId()\n             _def: RED.nodes.getType(\"FlowHubDiffCfg\"),\n             type: \"FlowHubDiffCfg\",\n             hasUsers: false, \n             users: [],\n             name: \"FlowHubDiffCfg\",\n             label: function() { return this.name || \"FlowHubDiffCfg\"},\n         }\n\n         // Add the new config node to the collection of Node-RED nodes\n         RED.nodes.add(globalYourConfigNode);\n\n         // Make sure the \"Deploy\" button becomes active\n         RED.nodes.dirty(true);\n      }      \n   }\n\n   // Add your plugin as a new tabsheet in the right sidebar AFTER the flow editor is completely started\n   var initialiseConfigNodeOnce = () => {\n      RED.events.off('runtime-state', initialiseConfigNodeOnce);\n\n      // The html content of the sidebar has been specified below as a data-template, from where it can be loaded:\n      var content = $($('script[type=\"text/x-red\"][data-template-name=\"FlowHubDiff\"]').i18n().html());\n    \n      // Add a \"Your sidebar\" tabsheet to the right sidebar panel, in which this sidebar panel can be displayed\n      // --> more details: https://nodered.org/docs/api/ui/sidebar/\n      RED.sidebar.addTab({\n         id: \"FlowHubDiff\",\n         label: \"FlowHub Diff\", // short name for the tab\n         name: \"FlowHub Diff\", // long name for the menu\n         content: content,\n         enableOnEdit: true,\n         iconClass: \"fa fa-balance-scale\",\n         visible: true\n      });\n\n      loadScript(\"https://cdn.openmindmap.org/thirdparty/diff.min.js\")\n      ensureYourConfigNodeExists();\n\n      $('#node-input-flowhubdiff-compare-btn').on('click', (e) => {\n         e.preventDefault();\n         doSubmission( getFlowDataFromCurrentWorkspace() )\n      })\n\n   };\n   \n   RED.events.on('runtime-state', initialiseConfigNodeOnce);\n})();\n</script>\n\n<style>\n{{{ cssStyling }}}\n</style>\n\n<!-- The html for the right sidebar plugin screen -->\n<script type=\"text/x-red\" data-template-name=\"FlowHubDiff\">\n   <div class=\"form-row\" style=\"margin-left: 15px; margin-top: 30px;\">\n      <button id=\"node-input-flowhubdiff-compare-btn\"\n               class=\"red-ui-button\">Compare Local to Remote Flow</button>\n               \n      <label for=\"node-input-flowhubdiff-incflowhubpull\" style=\"margin-left: 15px; min-width: 200px;\">\n               <span>Include FlowHubPull nodes?</span>\n      </label>\n      <input type=\"checkbox\" id=\"node-input-flowhubdiff-incflowhubpull\" style=\"display:inline-block; width:15px; vertical-align:baseline;\">\n   </div>\n\n\n   <div class=\"form-row node-input-target-row node-input-target-list-row\" style=\"min-height: 100px\">\n      <div style=\"margin-right: 15px; margin-bottom: 5px; width: 35%; padding-left: 60%;\">\n         <input type=\"text\" id=\"node-input-flowhubdiff-target-filter\" style=\"display: none;\">\n      </div>\n\n      <div id=\"node-input-flowhubdiff-target-container-div\" style=\"min-height: 100px\"></div>\n   </div>\n\n   <div class=\"form-row\" style=\"position: relative; min-height: 300px\">\n      <div id=\"node-input-flowhubdiff-svgcontainer\"></div>\n   </div>\n\n   <div class=\"form-row\" style=\"position: relative; min-height: 100px\">\n      <div id=\"node-input-flowhubdiff-diffcontainer\" class=\"diff-viewer\"></div>\n   </div>\n</script>","output":"str","x":1940,"y":1012,"wires":[["7c3e4732ae76f18a"]]},{"id":"7c3e4732ae76f18a","type":"PkgFile","z":"4a831589774ecb04","name":"FlowHubDiffCfg.html","filename":"nodes/flowhubdiffcfg.html","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n(function ($) {\n   RED.nodes.registerType('FlowHubDiffCfg', {\n      category: 'config',\n      hasUsers: false,\n      defaults: {},\n      label: 'FlowHubDiffCfg',\n  });\n})(jQuery);\n</script>\n\n<!-- The html for the config node info panel (in right sidebar) -->\n<script type=\"text/x-red\" data-template-name=\"FlowHubDiffCfg\">\n   <p>Compare the local version of a flow with the latest version at FlowHub.org\n</p>\n   This node can be used to compare flows that have been modified<br> \n   locally with those stored on FlowHub. Difference are highlighted <br>\n   in the property panel. Nodes marked with <i class=\"fa fa-eye\"></i> are<br>\n    changes that are only visual, changes marked with a <i class=\"fa fa-pencil\"></i> have<br>\n   textual changes.\n</script>\n","output":"str","x":1960,"y":1066,"wires":[["422778cae449fea2"]]},{"id":"4d266261e397fb33","type":"PkgFile","z":"4a831589774ecb04","name":"FlowHubDiffCfg.js","filename":"nodes/flowhubdiffcfg.js","format":"javascript","syntax":"mustache","template":"module.exports = function (RED) {\n  function ConfigFlowHubDiffFunctionality(config) {\n    RED.nodes.createNode(this, config)\n  }\n  \n  RED.nodes.registerType('FlowHubDiffCfg', ConfigFlowHubDiffFunctionality);\n\n  RED.httpAdmin.post(\"/FlowHubDiff\",\n    RED.auth.needsPermission(\"flowhub.write\"),\n    (req, res) => {\n        try {\n          if (req.body && req.body.flowdata && req.body.flowid) {\n            var msg = req.body;\n\n            var flowdata = msg.flowdata.filter(function (obj) {\n              return ((obj.type != \"FlowHubPull\" || (obj.type == \"FlowHubPull\" && msg.incflowhubpull)) && obj.type != \"FlowHubPush\" && obj.type != \"FlowHubDiff\")\n            });\n\n            import('got').then((module) => {\n              module.got.post(\"https://api.flowhub.org/v1/diff\", {\n                headers: {\n                  \"FlowHub-API-Version\": \"brownbear\",\n                },\n                json: {\n                  flowid: msg.flowid,\n                  flowdata: flowdata,\n                  flowlabel: msg.flowlabel,\n                },\n                timeout: {\n                  request: 25000,\n                  response: 25000\n                }\n              }).then(resp => {\n                try {\n                  var rst = JSON.parse(resp.body)\n                  res.status(200).send(rst);\n                } catch (err) {\n                  res.sendStatus(500);\n                }\n              }).catch(err => { res.sendStatus(500); });\n            }).catch(err => { res.sendStatus(500); });\n          } else {\n            res.sendStatus(405);\n          }\n        } catch (err) {\n          res.sendStatus(500);\n        }\n    });\n}","output":"str","x":1970,"y":961,"wires":[["adddc3bf83fd41b1"]]},{"id":"bcfb4df93c9ac89a","type":"template","z":"4a831589774ecb04","name":"cssStyling for FlowHubDiff","field":"cssStyling","fieldType":"msg","format":"css","syntax":"plain","template":".diff-viewer{\n  overflow:scroll;\n  background-color:rgb(244, 244, 244);\n  border: 1px solid rgb(196,196,196);\n  height:80vh;\n  padding: 20px;\n  max-width: 90vw;\n  border-radius: 5px;\n}\n\n.dv-differ {\n  background-color: rgba(244, 170, 23, 0.476) !important;\n}\n\n.dv-removed {\n  background-color: rgb(203, 203, 38) !important;\n}\n\n.dv-added {\n  background-color: rgb(86, 222, 120) !important;\n}\n\n.dv-pre-elem {\n    page-break-inside: avoid;\n    font-family: monospace;\n    max-width: 100%;\n    overflow: auto;\n    display: block;\n    word-wrap: break-word;\n    margin: 0px !important;\n}\n\n.flowhublogo {\n  background-image: url(\"icons/@gregoriusrippenstein/node-red-contrib-flowhub/flowhublogo.svg\");\n\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position-x: center;\n  background-position-y: top;\n\n}","output":"str","x":1940,"y":790,"wires":[["e0a7131f42361b3f"]]},{"id":"e0a7131f42361b3f","type":"template","z":"4a831589774ecb04","name":"Frontend JS for FlowHubDiff.html","field":"flowHubDiffHtmlFrontendJs","fieldType":"msg","format":"javascript","syntax":"plain","template":"function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap(s) {\n        return entityMap[s];\n    });\n}\n\nfunction loadScript(url, callback) {\n    var script = document.createElement(\"script\")\n    script.type = \"text/javascript\";\n\n    if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n                script.onreadystatechange = null;\n                if (callback) { callback(); }\n            }\n        };\n    } else {  //Others\n        script.onload = function () {\n            if (callback) { callback(); }\n        };\n    }\n\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nvar entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n};\n\nvar descMap = {\n    'z': \"Flow Tab Id\",\n    'g': \"Group Id\",\n    'd': \"Disabled\",\n};\n\nfunction attrDesc(nme) {\n    return descMap[nme] ? \" <i style='font-size: 80%;'>(\" + descMap[nme] + \")</i>\" : \"\";\n}\n\nfunction createDiff(ndeV1, ndeV2) {\n    var diffDetails = [];\n    var changedAttrs = [];\n\n    Object.keys(ndeV2).forEach(function (nme) {\n        if (Object.keys(ndeV1).indexOf(nme) < 0) {\n            var txt = typeof ndeV2[nme] == \"object\" ? JSON.stringify(ndeV2[nme]) : ndeV2[nme];\n            diffDetails.push(\"<tr class='dv-removed'><th>\" + nme + attrDesc(nme) + \"</th><td><i>MISSING</i></td><td><code>\" + escapeHtml(txt) + \"</code></td></tr>\")\n            changedAttrs.push(nme)\n        }\n    });\n\n    Object.keys(ndeV1).forEach(function (nme) {\n        if (Object.keys(ndeV2).indexOf(nme) < 0) {\n            var txt = typeof ndeV1[nme] == \"object\" ? JSON.stringify(ndeV1[nme]) : ndeV1[nme];\n            diffDetails.push(\"<tr class='dv-added'><th>\" + nme + attrDesc(nme) + \"</th><td><code>\" + escapeHtml(txt) + \"</code></td><td><i>ADDED</i></td></tr>\")\n            changedAttrs.push(nme)\n        }\n    });\n\n    Object.keys(ndeV1).forEach(function (nme) {\n        if (Object.keys(ndeV2).indexOf(nme) > -1) {\n            if (JSON.stringify(ndeV1[nme]) !== JSON.stringify(ndeV2[nme])) {\n                let span = null;\n                let diff = undefined;\n                changedAttrs.push(nme)\n\n                try {\n                    diff = Diff.diffLines(ndeV2[nme], ndeV1[nme])\n                } catch (e) {\n                    diff = Diff.diffLines(JSON.stringify(ndeV2[nme], undefined, 1), JSON.stringify(ndeV1[nme], undefined, 1))\n                }\n                const fragment = document.createDocumentFragment();\n\n                diff.forEach((part) => {\n                    // green for additions, red for deletions\n                    const color = part.added ? 'green' : part.removed ? 'red' : '#040506';\n\n                    span = document.createElement('pre');\n                    span.setAttribute('class', 'dv-pre-elem');\n                    span.style.color = color;\n                    span.appendChild(document.createTextNode(part.value));\n                    span.appendChild(document.createElement('br'));\n                    fragment.appendChild(span);\n                });\n\n                var row = document.createElement('tr');\n                row.setAttribute('class', \"dv-differ\")\n                var cell = document.createElement('th')\n                cell.appendChild(document.createTextNode(nme))\n                if (descMap[nme]) {\n                    var itl = document.createElement('i');\n                    itl.style[\"font-size\"] = \"80%\"\n                    itl.appendChild(document.createTextNode(\"(\" + descMap[nme] + \")\"))\n                    cell.appendChild(itl)\n                }\n                row.append(cell);\n\n                cell = document.createElement('td')\n                cell.setAttribute('colspan', '2')\n                cell.append(fragment)\n\n                row.append(cell)\n                diffDetails.push(row.outerHTML)\n            } else {\n                diffDetails.push(\"<tr><th>\" + nme + \"</th><td><code>\" + escapeHtml(ndeV1[nme]) + \"</code></td><td><code>\" + escapeHtml(ndeV2[nme]) + \"</code></td></tr>\")\n            }\n        }\n    });\n\n    /* \n     * strange happenings, the server says that these two nodes differ but \n     * there are zero changed attributes ... hm  ... so do a diff over the\n     * entire nodes.\n     */\n    if (changedAttrs.length == 0) {\n        let span = null;\n        let nme = \"OBJ\"\n        // let diff = Diff.diffChars(JSON.stringify(ndeV2,undefined,1), JSON.stringify(ndeV1,undefined,1))\n        let diff = Diff.diffJson(ndeV2, ndeV1)\n\n        const fragment = document.createDocumentFragment();\n\n        diff.forEach((part) => {\n            // green for additions, red for deletions\n            const color = part.added ? 'green' : part.removed ? 'red' : '#040506';\n\n            span = document.createElement('pre');\n            span.setAttribute('class', 'dv-pre-elem');\n            span.style.color = color;\n            span.appendChild(document.createTextNode(part.value));\n            span.appendChild(document.createElement('br'));\n            fragment.appendChild(span);\n        });\n\n        var row = document.createElement('tr');\n        row.setAttribute('class', \"dv-differ\")\n        var cell = document.createElement('th')\n        cell.appendChild(document.createTextNode(nme))\n        if (descMap[nme]) {\n            var itl = document.createElement('i');\n            itl.style[\"font-size\"] = \"80%\"\n            itl.appendChild(document.createTextNode(\"(\" + descMap[nme] + \")\"))\n            cell.appendChild(itl)\n        }\n        row.append(cell);\n\n        cell = document.createElement('td')\n        cell.setAttribute('colspan', '2')\n        cell.append(fragment)\n\n        row.append(cell)\n\n        return {\n            html: row.outerHTML,\n            icon: \"fa-question\"\n        }\n    }\n\n    var visualOnlyAttributes = ['x', 'y', 'w', 'h', 'g', 'wires'];\n    return {\n        html: diffDetails.join(\"\"),\n        icon: changedAttrs.filter(d => { return visualOnlyAttributes.indexOf(d) < 0 }).length == 0 ? \"fa-eye\" : \"fa-pencil\"\n    }\n}\n\n\nfunction getFlowDataFromCurrentWorkspace() {\n    /******\n     ** Code taken from Node-RED code base:\n     **\n     ** https://github.com/node-red/node-red/blob/e8ddee24a9944e57d186f02b081295c56a45b67c/packages/node_modules/%40node-red/editor-client/src/js/ui/clipboard.js#L710-L723\n     **\n     **/\n    var activeWorkspace = RED.workspaces.active();\n    var nodes = RED.nodes.groups(activeWorkspace);\n\n    nodes = nodes.concat(RED.nodes.junctions(activeWorkspace));\n    nodes = nodes.concat(RED.nodes.filterNodes({ z: activeWorkspace }));\n\n    RED.nodes.eachConfig(function (n) {\n        if (n.z === RED.workspaces.active() && n._def.hasUsers === false) {\n            // Grab any config nodes scoped to this flow that don't\n            // require any flow-nodes to use them\n            nodes.push(n);\n        }\n    });\n\n    var parentNode = RED.nodes.workspace(\n        activeWorkspace\n    ) || RED.nodes.subflow(activeWorkspace);\n\n    nodes.unshift(parentNode);\n\n    return RED.nodes.createExportableNodeSet(nodes);\n}\n\nfunction iframeRemoveHighlight() {\n    document.getElementById(\"flowhubdiff-svgimageiframe\").contentWindow.postMessage({\n        msg: \"removehighlight\",\n    }, \"*\")\n}\nfunction iframeHighlightItem(item) {\n    iframeRemoveHighlight();\n\n    document.getElementById(\"flowhubdiff-svgimageiframe\").contentWindow.postMessage({\n            item: {\n                label:    item.label,\n                icon:     item.icon,\n                class:    item.class,\n                sublabel: item.sublabel,\n                objid:    item.objid\n            },\n            msg: \"highlightitem\",\n        }, \"*\");\n}\n\nfunction iframeHasBeenLoaded(elem) {\n    var nodes = getFlowDataFromCurrentWorkspace();\n\n    setTimeout(() => {\n        elem.contentWindow.postMessage({\n            nodes: nodes,\n            msg: \"renderlocalflow\",\n            flowid: RED.workspaces.active()\n        }, \"*\")\n    }, 345);\n}\nwindow.iframeHasBeenLoaded = iframeHasBeenLoaded;\n\nfunction doSubmission(flowdata) {\n\n    var activeWorkspace = RED.workspaces.active();\n\n    RED.notify(\"Flow Comparison Triggered\", {\n        type: \"warning\",\n        id: \"FlowHubDiff\",\n        timeout: 2000\n    });\n\n    $.ajax({\n        url: \"FlowHubDiff\",\n        type: \"POST\",\n        contentType: \"application/json; charset=utf-8\",\n\n        data: JSON.stringify({\n            flowid: activeWorkspace,\n            flowhub: \"submission from \",\n            flowdata: flowdata || {},\n            flowlabel: RED.nodes.workspace(activeWorkspace).label,\n            incflowhubpull: $(\"#node-input-flowhubdiff-incflowhubpull\").is(\":checked\")\n        }),\n\n        success: function (resp) {\n            var items = [];\n            var nodeItemMap = {};\n\n            if (resp.status == \"failed\") {\n                RED.notify(\"This does not seem to be a FlowHub flow id: \" + activeWorkspace, {\n                    type: \"error\",\n                    timeout: 2000\n                });\n\n                try {\n                    $('#node-input-flowhubdiff-diffcontainer').html(\"\");\n                    $('#node-input-flowhubdiff-svgcontainer').html(\"\");\n                    $('#node-input-flowhubdiff-target-container-div').treeList('empty')\n                } catch(ex){}\n                return;\n            }\n\n            resp.changes.forEach(function (nde) {\n                var nId = nde.id;\n\n                if (nde.type == \"deleted\") {\n                    nodeItemMap[nId] = {\n                        label: nde.oldObj.name || nde.oldObj.type,\n                        icon: \"fa fa-times\",\n                        class: \"\",\n                        diffcontent: createDiff({}, nde.oldObj).html,\n                        sublabel: nde.oldObj.type,\n                        selected: false,\n                        checkbox: false,\n                        children: undefined,\n                        objid: nId\n                    };\n\n                    items.push(nodeItemMap[nId]);\n                    return;\n                }\n\n                if (nde.type == \"added\") {\n                    nodeItemMap[nId] = {\n                        objid: nId,\n                        label: nde.newObj.name || nde.newObj.type,\n                        icon: \"fa fa-check\",\n                        class: \"\",\n                        diffcontent: createDiff(nde.newObj, {}).html,\n                        sublabel: nde.newObj.type,\n                        selected: false,\n                        checkbox: false,\n                        children: undefined\n                    };\n\n                    items.push(nodeItemMap[nId]);\n                    return;\n                }\n\n                if (nde.oldObj.type == \"tab\" || nde.oldObj.type == \"group\" || nde.oldObj.type == \"junction\") {\n                    var diffContent = createDiff(nde.newObj, nde.oldObj);\n\n                    nodeItemMap[nId] = {\n                        objid: nId,\n                        label: nde.oldObj.name || nde.oldObj.type,\n                        icon: \"fa \" + diffContent.icon,\n                        class: \"\",\n                        diffcontent: diffContent.html,\n                        sublabel: nde.type + \" - \" + nde.oldObj.type,\n                        selected: false,\n                        checkbox: false,\n                        children: undefined\n                    };\n\n                    items.push(nodeItemMap[nId]);\n                    return;\n                }\n\n                /* \n                 * Pass this point only nodes, no groups, tabs or junctions\n                 */\n                var n = RED.nodes.node(nId);\n                if (!n) {\n                    console.log(\"Node not found\", nde)\n                }\n\n                var nodeDef = RED.nodes.getType(n.type);\n                var label;\n\n                if (nodeDef) {\n                    var l = nodeDef.label;\n                    label = (typeof l === \"function\" ? l.call(n) : l) || \"\";\n                }\n\n                if (!nodeDef || !label) {\n                    label = n.type;\n                }\n\n                var diffContent = createDiff(nde.newObj, nde.oldObj);\n\n                nodeItemMap[n.id] = {\n                    node: n,\n                    objid: nId,\n                    label: label,\n                    icon: \"fa \" + diffContent.icon,\n                    class: \"\",\n                    diffcontent: diffContent.html,\n                    sublabel: nde.oldObj.type,\n                    selected: false,\n                    checkbox: false,\n                    children: undefined\n                };\n\n                items.push(nodeItemMap[n.id]);\n            });\n\n            if (resp.ifurl) {\n                $('#node-input-flowhubdiff-svgcontainer').html(\n                    '<iframe id=\"flowhubdiff-svgimageiframe\" width=\"100%\" height=\"100%\" src=\"' + resp.ifurl + '\" onload=\"window.iframeHasBeenLoaded(this)\" style=\"border: none; min-height: 300px;\"></iframe>'\n                )\n            }\n\n            if (items.length == 0) {\n                RED.notify(\"No Flow Changes\", {\n                    type: \"warning\",\n                    timeout: 2000\n                });\n\n                try {\n                    $('#node-input-flowhubdiff-diffcontainer').html(\"\")\n                    $(\"#node-input-flowhubdiff-target-container-div\").treeList('empty')\n                } catch (ex) { }\n            } else {\n\n                try {\n                    $(\"#node-input-flowhubdiff-target-container-div\").treeList('empty')\n                } catch (ex) {\n                    $(\"#node-input-flowhubdiff-target-container-div\").css({\n                        width: \"100%\",\n                        height: \"200px\"\n                    }).treeList(\n                        {\n                            multi: false\n                        }\n                    ).on(\"treelistitemmouseover\", function (e, item) {\n                        if (item.objid) { \n                            iframeHighlightItem(item) \n                        }\n                    }).on(\"treelistitemmouseout\", function (e, item) {\n                    }).on('treelistselect', function (event, item) {\n                        if (item.objid) {\n                            RED.view.reveal(item.objid, true)\n                            RED.view.redraw()\n                        }\n                        \n                        if (item.diffcontent) {\n                            $('#node-input-flowhubdiff-diffcontainer').html(item.diffcontent)\n                        } else {\n                            $('#node-input-flowhubdiff-diffcontainer').html(\"\")\n                        }\n                    });\n\n                    $(\"#node-input-flowhubdiff-target-filter\").show();\n\n                    var search = $(\"#node-input-flowhubdiff-target-filter\").searchBox({\n                        style: \"compact\",\n                        delay: 300,\n                        change: function () {\n                            var val = $(this).val().trim().toLowerCase();\n                            if (val === \"\") {\n                                $(\"#node-input-flowhubdiff-target-container-div\").treeList(\"filter\", null);\n                                search.searchBox(\"count\", \"\");\n                            } else {\n                                var count = $(\"#node-input-flowhubdiff-target-container-div\").treeList(\"filter\", function (item) {\n                                    return item.label.toLowerCase().indexOf(val) > -1 || item.node.type.toLowerCase().indexOf(val) > -1\n                                });\n                                search.searchBox(\"count\", count + \" / \" + items.length);\n                            }\n                        }\n                    });\n                }\n\n                $(\"#node-input-flowhubdiff-target-container-div\").treeList('data', items.sort((a, b) => a.icon > b.icon));\n            }\n        },\n\n        error: function (jqXHR, textStatus, errorThrown) {\n            if (jqXHR.status == 404) {\n                RED.notify(\"Node has not yet been deployed, please deploy.\", \"error\");\n            } else if (jqXHR.status == 405) {\n                RED.notify(\"Not Allowed.\", \"error\");\n            } else if (jqXHR.status == 500) {\n                RED.notify(\"Not Allowed - 500.\", \"error\");\n            } else if (jqXHR.status == 0) {\n                RED.notify(\"Not Allowed - 0.\", \"error\");\n            } else {\n                RED.notify(\"Not Allowed - Unexpected.\", \"error\");\n            }\n        }\n    });\n}\n","output":"str","x":1920,"y":848,"wires":[["e0e570a5ab591db4"]]},{"id":"e0e570a5ab591db4","type":"UglifyJS","z":"4a831589774ecb04","name":"","config":"{\"parse\":{},\"compress\":{},\"mangle\":{\"reserved\":[\"$\",\"export\",\"require\"]},\"output\":null,\"sourceMap\":null,\"nameCache\":null,\"toplevel\":false,\"warnings\":false}","configType":"json","property":"flowHubDiffHtmlFrontendJs","propertyType":"msg","x":2000,"y":904,"wires":[["4d266261e397fb33"]]},{"id":"ac52823fc31db8c0","type":"NodeFactory","z":"4a831589774ecb04","name":"FlowHubPush - sidebar","nodename":"FlowHubPush","color":"#e5e4ef","hasbutton":false,"hasinput":false,"outputcount":"0","category":"flowhub","summary":"Push current flow tab to FlowHub.org.\n      FlowHub nodes are ignored when flow-tabs are pushed to FlowHub.\n      Flow tabs are exported as they <b>are in the editor</b>. What you see\n      is what you export, the deployed flow might differ. This allows flows to\n      be modified <b>without</b> having to be deployed.","description":"<h3>Details</h3>\n  <p>\n      FlowHubPush is the twin to the FlowHubPull node and is responsible for\n      uploading the current flow tab to FlowHub. The Flow tab ID is used as\n      identifier. The current flow tab in which the FlowHubPush node is\n      located will be uploaded.\n  </p>\n  <p>\n      FlowHubPush can be dragged into the flow, the button can be pressed to\n      push the flow to FlowHub. Although for the button to be active, the\n      flow has to be deployed at least once.\n  </p>\n  <p>\n      Documentation on the flow should be included in the info box of the\n      flow. Double click on the flow tab opens the property window and\n      that's the documentation that will be hosted at FlowHub. Please provide\n      documentation otherwise or a flow that is so simple to understand\n      that it requires no documentation!\n  </p>\n\n  <p>\n      Submission can either be done using an API token or using an email\n      and full name. See the property tab for details on the usage of this\n      service.\n  </p>","icon":"font-awesome/fa-share-square-o","frt2bakcomm":false,"bak2frtcomm":false,"createmanifest":false,"isplugin":true,"x":774,"y":728,"wires":[[]]},{"id":"128595ceb3bd55ed","type":"PkgFile","z":"4a831589774ecb04","name":"FlowHubPushCfg.js","filename":"nodes/flowhubpushcfg.js","format":"javascript","syntax":"mustache","template":"module.exports = function (RED) {\n  function ConfigFlowHubPushFunctionality(config) {\n    RED.nodes.createNode(this, config)\n  }\n  \n  RED.nodes.registerType('FlowHubPushCfg', ConfigFlowHubPushFunctionality);\n\n  function respond(status, statustype, msg) {\n    RED.comms.publish(\"flowhub:submission-result\",\n      RED.util.encodeObject({\n        ...msg,\n        status: status,\n        statusType: statustype\n      })\n    );\n  }\n\n  function submitWithEmail(email, name, flowid, flowdata, flowlabel) {\n    import('got').then((module) => {\n      module.got.post(\"https://api.flowhub.org/v1/flows\", {\n        headers: {\n          \"FlowHub-API-Version\": \"brownbear\",\n          \"X-Name\": name,\n          \"X-Email\": email,\n        },\n        json: {\n          flowid: flowid,\n          flowdata: flowdata,\n          flowlabel: flowlabel,\n        },\n        timeout: {\n          request: 25000,\n          response: 25000\n        }\n      }).then(resp => {\n\n        try {\n          var rst = JSON.parse(resp.body)\n        } catch (err) {\n          respond(\"response failed\", \"error\", {})\n          return\n        }\n\n        if ( rst.status == \"ok\") {\n          respond(\"submission succeed, please verify your email.\", \"success\", {})\n        } else {\n          respond(\"submission failed: \" + rst.msg, \"error\", { })\n        }\n      }).catch(err => {\n\n        if (err.toString().includes(\"Response code 405\")) {\n          respond(\"submission failed, Email/Name not supplied or allowed.\", \"error\", {})\n        } else {\n          respond(\"submission failed: \" + err, \"error\", {})\n          console.error(err)\n        }\n      });\n    }).catch( err => { \n      respond(\"submission failed, Internal Error: \" + err, \"error\", {})\n      console.error(err)\n    })\n  }\n\n  function submitWithToken(access_token, flowid, flowdata, flowlabel) {\n    import('got').then((module) => {\n      module.got.post(\"https://api.flowhub.org/v1/flows\", {\n        headers: {\n          \"FlowHub-API-Version\": \"brownbear\",\n          \"Authorization\": \"Bearer \" + access_token,\n        },\n        json: {\n          flowid: flowid,\n          flowdata: flowdata,\n          flowlabel: flowlabel,\n        },\n        timeout: {\n          request: 25000,\n          response: 25000\n        }\n      }).then(resp => {\n\n        try {\n          var rst = JSON.parse(resp.body)\n        } catch (err) {\n          respond(\"response failed\", \"error\", {})\n          return\n        }\n\n        if ( rst.status == \"nochange\") {\n          respond(\"submission succeed but no change.\", \"warning\", {})\n        } else {\n          respond(\"submission succeed.\", \"success\", {})\n        }\n      }).catch(err => {\n        if (err.toString().includes(\"Response code 405\")) {\n          respond(\"submission failed, API Token missing/incorrect.\", \"error\", {})\n        } else {\n          respond(\"submission failed: \" + err, \"error\", {})\n          console.error(err)\n        }\n      });\n    }).catch( err => { \n      respond(\"submission failed, Internal Error: \" + err, \"error\", {})\n      console.error(err)\n    })\n  }\n\n  RED.httpAdmin.post(\"/FlowHubPush\",\n    RED.auth.needsPermission(\"flowhub.write\"),\n    (req, res) => {\n        try {\n          if (req.body ) {\n            var msg = req.body;\n            var cfgnode = req.body.cfgnode;\n            var node = RED.nodes.getNode(cfgnode.id)\n\n            var flowdata = msg.flowdata.filter(function (obj) {\n              return ((obj.type != \"FlowHubPull\" || (obj.type == \"FlowHubPull\" && msg.incflowhubpull)) && obj.type != \"FlowHubPush\" && obj.type != \"FlowHubDiff\")\n            });\n\n            RED.util.evaluateNodeProperty(cfgnode.apiToken, cfgnode.apiTokenType, node, msg, (err, result) => {\n              if (err || (result || \"\").trim() == \"\") {\n                if ((cfgnode.fullname || \"\").trim() == \"\" || (cfgnode.email || \"\").trim() == \"\") {\n                  res.sendStatus(200);\n                  respond(\"Failed, no API TOKEN provided nor email and name.\", \"error\", msg)\n                  return;\n                } else {\n                  submitWithEmail(cfgnode.email, cfgnode.fullname, msg.flowid, flowdata, msg.flowlabel)\n                }\n              } else {\n                submitWithToken(result, msg.flowid, flowdata, msg.flowlabel)\n              }\n\n              res.sendStatus(200);\n            });\n          } else {\n            res.sendStatus(405);\n          }\n        } catch (err) {\n          console.error( \"ERROR\", err)\n          res.sendStatus(500);\n        }\n    }\n  );\n\n}","output":"str","x":1462,"y":852,"wires":[["b9c41a8e8a6646cd"]]},{"id":"b9c41a8e8a6646cd","type":"PkgFile","z":"4a831589774ecb04","name":"Sidebar: FlowHubPush.html","filename":"plugins/flowhubpush.html","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n(function() {\n   var globalYourConfigNode = null;\n\n   function getFlowDataFromCurrentWorkspace() {\n      /******\n       ** Code taken from Node-RED code base:\n       **\n       ** https://github.com/node-red/node-red/blob/e8ddee24a9944e57d186f02b081295c56a45b67c/packages/node_modules/%40node-red/editor-client/src/js/ui/clipboard.js#L710-L723\n       **\n       **/\n      var activeWorkspace = RED.workspaces.active();\n      var nodes = RED.nodes.groups(activeWorkspace);\n\n      nodes = nodes.concat(RED.nodes.junctions(activeWorkspace));\n      nodes = nodes.concat(RED.nodes.filterNodes({z:activeWorkspace}));\n\n      RED.nodes.eachConfig(function(n) {\n        if (n.z === RED.workspaces.active() && n._def.hasUsers === false) {\n          // Grab any config nodes scoped to this flow that don't\n          // require any flow-nodes to use them\n          nodes.push(n);\n        }\n      });\n\n      var parentNode = RED.nodes.workspace(\n        activeWorkspace\n      ) || RED.nodes.subflow(activeWorkspace);\n\n      nodes.unshift(parentNode);\n\n      return RED.nodes.createExportableNodeSet(nodes);\n    }\n\n   function doSubmission(flowdata) {\n      ensureYourConfigNodeExists();\n\n      var activeWorkspace = RED.workspaces.active();\n\n      $.ajax({\n         url:         \"FlowHubPush\",\n         type:        \"POST\",\n         contentType: \"application/json; charset=utf-8\",\n\n         data: JSON.stringify({\n            flowid:         activeWorkspace,\n            flowdata:       flowdata || {},\n            flowlabel:      RED.nodes.workspace(activeWorkspace).label,\n            cfgnode:        globalYourConfigNode,\n            incflowhubpull: $(\"#node-input-flowhubpush-incflowhubpull\").is(\":checked\")\n         }),\n\n         success: function (resp) {\n            RED.notify(\"Submission triggered\", {\n               type: \"warning\",\n               id: \"FlowHubPush\",\n               timeout: 2000\n            });\n\n            $('#flowhubpush-view-flow-link').attr('href', \"https://flowhub.org/f/\" + activeWorkspace).show();\n         },\n\n         error: function (jqXHR, textStatus, errorThrown) {\n            RED.notify(\"Submission failed: \" + textStatus, {\n               type: \"error\",\n               id: \"FlowHubPush\",\n               timeout: 2000\n            });\n            console.log(textStatus,errorThrown )\n         }\n      });      \n   }\n\n   function ensureYourConfigNodeExists() {\n      // This function makes sure there is 1 instance of your config node is available, and that the globalYourConfigNode variable refers to it.\n      // Explained in the next step of this tutorial... --> https://discourse.nodered.org/t/tutorial-create-a-sidebar-plugin-and-persist-the-data-in-a-config-node/82020\n\n      // If we had found it previously, check if it has been deleted by the user behind our back\n      if (globalYourConfigNode !== null) {\n         var configNode = RED.nodes.node(globalYourConfigNode.id);\n         if (configNode === null) { globalYourConfigNode = null; }\n      }\n\n      // If not found previously, let's go find it\n      if (globalYourConfigNode === null) {\n         var configNodes = [];\n         RED.nodes.eachConfig(function(configNode) {\n             if (configNode.type === 'FlowHubPushCfg') { \n                 configNodes.push(configNode); \n             }\n         });\n\n         // Make sure we only have 1 config node\n         while (configNodes.length > 1) {\n             var configNode = configNodes.pop();\n             RED.nodes.remove(configNode.id);\n             RED.nodes.dirty(true);\n         }\n\n         // When we found a config node, let's use that one\n         if (configNodes.length === 1) { globalYourConfigNode = configNodes[0]; }\n      }\n\n      // When it doesn't exist yet, create it if required\n      if (globalYourConfigNode === null) {\n         // Remark: since this config node is dynamically created (and only used in this sidebar which isn't another node), the config\n         // node is in fact \"unused\".  But since we don't want it to appear \"unused\" in the \"config nodes\" panel, we need to set hasUsers\n         // to false (see https://github.com/node-red/node-red/blob/master/CHANGELOG.md#0161-maintenance-release).\n         // The hasUsers needs also to be specified in the RED.nodes.registerType statement!\n         let typ = RED.nodes.getType(\"FlowHubPushCfg\");\n         \n         globalYourConfigNode = {\n             id: RED.nodes.id(), // on the server side, this is called RED.util.generateId()\n             _def: typ,\n             type: \"FlowHubPushCfg\",\n             hasUsers: false, \n             users: [],\n             name: \"FlowHubPushCfg\",\n             label: function() { return this.name || \"FlowHubPushCfg\"},\n             /* default data */\n             apiToken: typ.defaults.apiToken.value,\n             apiTokenType: typ.defaults.apiTokenType.value,\n             email: \"\",\n             fullname: \"\",\n             incflowhubpull: typ.defaults.incflowhubpull.value\n         }\n\n         // Add the new config node to the collection of Node-RED nodes\n         RED.nodes.add(globalYourConfigNode);\n\n         // Make sure the \"Deploy\" button becomes active\n         RED.nodes.dirty(true);\n      }      \n   }\n\n   // Add your plugin as a new tabsheet in the right sidebar AFTER the flow editor is completely started\n   var initialiseFlowHubPushConfigNodeOnce = () => {\n      RED.events.off('runtime-state', initialiseFlowHubPushConfigNodeOnce);\n\n      // The html content of the sidebar has been specified below as a data-template, from where it can be loaded:\n      var content = $($('script[type=\"text/x-red\"][data-template-name=\"FlowHubPush\"]').i18n().html());\n    \n      // Add a \"Your sidebar\" tabsheet to the right sidebar panel, in which this sidebar panel can be displayed\n      // --> more details: https://nodered.org/docs/api/ui/sidebar/\n      RED.sidebar.addTab({\n         id: \"FlowHubPush\",\n         label: \"FlowHub Push\", // short name for the tab\n         name: \"FlowHub Push\", // long name for the menu\n         content: content,\n         action:\"flowhub:flowhub-push-flow\",\n         enableOnEdit: true,\n         iconClass: \"fa fa-share-square-o\" // your fontawesome icon\n      });\n\n      RED.actions.remove(\"flowhub:flowhub-push-flow\")\n      RED.actions.add(\"flowhub:flowhub-push-flow\",() => {\n         doSubmission( getFlowDataFromCurrentWorkspace() )\n      });\n\n      ensureYourConfigNodeExists();\n\n      $(\"#node-input-flowhubpush-apiToken\").typedInput({\n          types:[\"env\", \"global\", \"cred\"],\n          typeField: \"#node-input-flowhubpush-apiTokenType\"\n      });\n\n      $(\"#node-input-flowhubpush-apiToken\").typedInput( 'value', globalYourConfigNode.apiToken || globalYourConfigNode._def.defaults.apiToken.value );\n      $(\"#node-input-flowhubpush-apiToken\").typedInput( 'type', globalYourConfigNode.apiTokenType || globalYourConfigNode._def.defaults.apiTokenType.value);\n\n      $(\"#node-input-flowhubpush-apiToken\").on('change', () => {\n         ensureYourConfigNodeExists();\n         \n         var val = $(\"#node-input-flowhubpush-apiToken\").typedInput('value');\n         var typ = $(\"#node-input-flowhubpush-apiToken\").typedInput('type');\n\n         if ( val != globalYourConfigNode.apiToken ) {\n            globalYourConfigNode.apiToken = val;\n            RED.nodes.dirty(true);\n         }\n\n         if ( typ != globalYourConfigNode.apiTokenType ) {\n            globalYourConfigNode.apiTokenType = typ;\n            RED.nodes.dirty(true);\n         }\n      })\n\n      $('#node-input-flowhubpush-email').on('change', (e) => {\n         if ( e ) { e.preventDefault(); }\n         ensureYourConfigNodeExists();\n\n         let val = $('#node-input-flowhubpush-email').val();\n         if ( val != globalYourConfigNode.email ) { \n            globalYourConfigNode.email = val;\n            RED.nodes.dirty(true);\n         }\n      })\n\n      $('#node-input-flowhubpush-fullname').on('change', (e) => {\n         if ( e ) { e.preventDefault(); }\n         ensureYourConfigNodeExists();\n\n         let val = $('#node-input-flowhubpush-fullname').val();\n         if ( val != globalYourConfigNode.fullname ) { \n            globalYourConfigNode.fullname = val;\n            RED.nodes.dirty(true);\n         }\n      })\n\n      $('#node-input-flowhubpush-incflowhubpull').on('change', () => {\n         ensureYourConfigNodeExists();\n\n         var val = $('#node-input-flowhubpush-incflowhubpull').is(\":checked\");\n\n         if ( val != globalYourConfigNode.incflowhubpull) {\n            globalYourConfigNode.incflowhubpull = val;\n            RED.nodes.dirty(true);\n         }\n      })\n      $('#node-input-flowhubpush-incflowhubpull').prop(\"checked\", globalYourConfigNode.incflowhubpull)\n\n      RED.comms.subscribe('flowhub:submission-result', (event,data) => {\n         RED.notify(\"Submission status: \" + data.status, {\n            type: data.statusType,\n            id: \"FlowHubPushResult\",\n            timeout: 2000\n         });\n      });\n\n      $('#node-input-flowhubpush-push-btn').on('click', (e) => {\n         if ( e ) { e.preventDefault(); }\n         doSubmission( getFlowDataFromCurrentWorkspace() )\n      });\n   };\n   RED.events.on('runtime-state', initialiseFlowHubPushConfigNodeOnce);\n})();\n</script>\n\n<!-- The html for the right sidebar plugin screen -->\n<script type=\"text/x-red\" data-template-name=\"FlowHubPush\">\n\n<div class=\"form-row\" style=\"margin-top: 30px; margin-left: 10px;\">\n   <label for=\"node-input-flowhubpush-apiToken\">\n      <i class=\"fa fa-tag\"></i>\n      FlowHub API Token\n    </label>\n   <input type=\"text\" id=\"node-input-flowhubpush-apiToken\">\n   <input type=\"hidden\" id=\"node-input-flowhubpush-apiTokenType\">\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   Api Token can be obtained <a style=\"color: blue;\"\n      href=\"mailto:api.token@flowhub.org?subject=API%20Token%20Request\">upon request\n      <i class=\"fa fa-external-link\"></i></a>.\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   Alternatively provide your email and full name to submit the current flow.<br>\n      All submissions will be reviewed at GitHub and either merged or dropped.<br>\n      Your <b>email and name</b> will be attached to the commit added to <br>\n      the <a style=\"color: blue;\" target=\"_blank\" href=\"https://github.com/gorenje/flows.flowhub.org\">FlowHub repository\n      <i class=\"fa fa-external-link\"></i></a>\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   <label for=\"node-input-flowhubpush-email\">\n      <i class=\"fa fa-tag\"></i>\n      Email\n    </label>\n   <input type=\"text\" id=\"node-input-flowhubpush-email\"\n           placeholder=\"john.smith@example.com\">\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   <label for=\"node-input-flowhubpush-fullname\">\n      <i class=\"fa fa-tag\"></i>\n      Name\n    </label>\n   <input type=\"text\" id=\"node-input-flowhubpush-fullname\"\n           placeholder=\"Firstname Surname\">\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   All submissions must be verified by email. After submission you<br>\n      will recieve an email to <b>confirm your submission</b>.\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   <b>License:</b><br><br>\n      All flows submitted are licensed under a copyleft <a style=\"color: blue;\" target=\"_blank\"\n      href=\"https://raw.githubusercontent.com/gorenje/flows.flowhub.org/main/LICENSE\">license\n      <i class=\"fa fa-external-link\"></i></a>,<br>\n      that grants complete do-anything-but-not-evil permission to the user<br>\n      and provides no warranty in case of failure nor guarantee of success.\n</div>\n\n<div class=\"form-row\">\n   <hr />\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   <label for=\"node-input-flowhubpush-incflowhubpull\" style=\"min-width: 200px;\">\n      <span>Include FlowHubPull nodes?</span>\n    </label>\n   <input type=\"checkbox\" id=\"node-input-flowhubpush-incflowhubpull\" style=\"display:inline-block; width:15px; vertical-align:baseline;\">\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   <button id=\"node-input-flowhubpush-push-btn\"\n      class=\"red-ui-button\">Push Flow-Tab to FlowHub</button>\n</div>\n\n<div class=\"form-row\" style=\"margin-left: 10px;\">\n   <a id=\"flowhubpush-view-flow-link\" style=\"color: blue; display: none;\" target=\"_blank\" href=\"\">View Flow\n      <i class=\"fa fa-external-link\"></i></a>\n</div>\n</script>","output":"str","x":1462,"y":902,"wires":[["c3c0a3e360715dd9"]]},{"id":"c3c0a3e360715dd9","type":"PkgFile","z":"4a831589774ecb04","name":"FlowHubPushCfg.html","filename":"nodes/flowhubpushcfg.html","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n(function ($) {\n   RED.nodes.registerType('FlowHubPushCfg', {\n      category: 'config',\n      hasUsers: false,\n      defaults: {\n        apiToken: { value: \"FLOWHUB_API_TOKEN\" },      \n        apiTokenType: {   value: \"env\",   },\n        fullname: { value: \"\" },\n        email: { value: \"\" },\n        incflowhubpull: { value: false },\n      },\n      label: 'FlowHubPushCfg',\n  });\n})(jQuery);\n</script>\n\n<!-- The html for the config node info panel (in right sidebar) -->\n<script type=\"text/x-red\" data-template-name=\"FlowHubPushCfg\">\n\n   <p>Push current flow tab to FlowHub.org.<br>\n      FlowHub nodes are ignored when flow-tabs are pushed to FlowHub.<br>\n      Flow tabs are exported as they <b>are in the editor</b>. What you see<br>\n      is what you export, the deployed flow might differ. This allows flows to<br>\n      be modified <b>without</b> having to be deployed.\n    </p>\n    \n   <h3>Details</h3>\n  <p>\n      FlowHubPush is the twin to the FlowHubPull node and is responsible for<br>\n      uploading the current flow tab to FlowHub. The Flow tab ID is used as<br>\n      identifier. The current flow tab in which the FlowHubPush node is<br>\n      located will be uploaded.<br>\n  </p>\n  <p>\n      FlowHubPush can be dragged into the flow, the button can be pressed to<br>\n      push the flow to FlowHub. Although for the button to be active, the<br>\n      flow has to be deployed at least once.<br>\n  </p>\n  <p>\n      Documentation on the flow should be included in the info box of the<br>\n      flow. Double click on the flow tab opens the property window and<br>\n      that's the documentation that will be hosted at FlowHub. Please provide<br>\n      documentation otherwise or a flow that is so simple to understand<br>\n      that it requires no documentation!\n  </p>\n\n  <p>\n      Submission can either be done using an API token or using an email<br>\n      and full name. See the property tab for details on the usage of this<br>\n      service.\n  </p>\n</script>\n","output":"str","x":1462,"y":952,"wires":[["bcfb4df93c9ac89a"]]},{"id":"b046cb6ade413611","type":"PkgFile","z":"4a831589774ecb04","name":"package.json","filename":"package.json","format":"json","syntax":"mustache","template":"{\n  \"name\": \"{{{ pname }}}\",\n  \"version\": \"{{ pversion }}\",\n  \"dependencies\": {\n    \"got\": \"latest\"\n  },\n  \"keywords\": [\n    \"node-red\",\n    \"flowhub\",\n    \"flowsharing\"\n  ],\n  \"homepage\": \"https://github.com/{{ githubowner }}/{{ githubrepo }}#README.md\",\n  \"license\": \"Don't be Evil.\",\n  \"author\": \"Gerrit Riessen <nodered@spreads-the.love> (https://spread-the.love)\",\n  \"engines\": {\n    \"node\": \">=8\"\n  },\n  \"node-red\": {\n    \"version\": \">=2.0.0\",\n    \"plugins\": {\n      \"diff\": \"plugins/flowhubdiff.html\",\n      \"push\": \"plugins/flowhubpush.html\"\n    },\n    \"nodes\": {\n      \"flowhubpull\": \"nodes/90-flowhub-pull.js\",\n      \"flowhubpushcfg\": \"nodes/flowhubpushcfg.js\",\n      \"flowhubdiffcfg\": \"nodes/flowhubdiffcfg.js\"\n    }\n  },\n  \"description\": \"{{{ pdescription }}}\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/{{ githubowner }}/{{ githubrepo }}.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/{{ githubowner }}/{{ githubrepo }}/issues\"\n  }\n}","output":"str","x":1480,"y":665,"wires":[["82662f3b812d6c5b"]]},{"id":"c771c8b6b7d91cb8","type":"FlowHubPull","z":"4a831589774ecb04","g":"c64d033291bb4d13","name":"","notab":false,"flowid":"d0506e991d512ace","flowname":"[Introspection] Develop Node-RED nodes in Node-RED","flowrevision":"","x":897,"y":374,"wires":[[]]}]