[{"id":"dd3cb2217a01efae","type":"tab","label":"[GitHub Actions] Convert actions yaml to collection of change nodes","disabled":false,"info":"### Description\n\nFlow for converting a [GitHub actions](https://docs.github.com/en/actions) YAML to a collection of change nodes.\n\nThe intention is to find a visual method of modifying and maintaining the YAMLs required for GitHub actions.\n\n### Requirements\n\n- [introspection nodes](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection)\n\n","env":[]},{"id":"5ef6bad9db706e0e","type":"inject","z":"dd3cb2217a01efae","name":"trigger","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":183,"y":509,"wires":[["bf83e0b1a8583629"]]},{"id":"bf83e0b1a8583629","type":"template","z":"dd3cb2217a01efae","name":"GitHub Actions YAML","field":"payload","fieldType":"msg","format":"yaml","syntax":"plain","template":"name: Publish Release\nenv:\n  ACTIONS_ALLOW_UNSECURE_COMMANDS: true\non:\n  release:\n    types: [published]\n\npermissions:\n  contents: read\n\njobs:\n  generate:\n    name: 'Update node-red-docker image'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out node-red repository\n        uses: actions/checkout@v4\n        with:\n            path: 'node-red'\n      - name: Check out node-red-docker repository\n        uses: actions/checkout@v4\n        with:\n            repository: 'node-red/node-red-docker'\n            path: 'node-red-docker'\n      - name: Check out node-red.github.io repository\n        uses: actions/checkout@v4\n        with:\n            repository: 'node-red/node-red.github.io'\n            path: 'node-red.github.io'\n      - uses: actions/setup-node@v4\n        with:\n            node-version: '16'\n      - run: node ./node-red/.github/scripts/update-node-red-docker.js\n      - name: Create Docker Pull Request\n        uses: peter-evans/create-pull-request@v5\n        with:\n          token: ${{ secrets.NR_REPO_TOKEN }}\n          committer: GitHub <noreply@github.com>\n          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>\n          path: 'node-red-docker'\n          commit-message: 'Bump to ${{ env.newVersion }}'\n          title: 'ðŸš€ Update to Node-RED ${{ env.newVersion }} release'\n          body: |\n            Updates the Node-RED Docker repo for the ${{ env.newVersion }} release.\n\n            Once this is merged, you will need to create a new release with the tag `v${{ env.newVersion }}`.\n\n            This PR was auto-generated by a GitHub Action. Any questions, speak to @knolleary\n      - run: node ./node-red/.github/scripts/update-node-red-website.js\n      - name: Create Website Pull Request\n        uses: peter-evans/create-pull-request@v5\n        with:\n          token: ${{ secrets.NR_REPO_TOKEN }}\n          committer: GitHub <noreply@github.com>\n          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>\n          path: 'node-red.github.io'\n          commit-message: 'Bump to ${{ env.newVersion }}'\n          title: 'ðŸš€ Update to Node-RED ${{ env.newVersion }} release'\n          body: |\n            Updates the Node-RED Website repo for the ${{ env.newVersion }} release.\n\n            This PR was auto-generated by a GitHub Action. Any questions, speak to @knolleary","output":"str","x":495,"y":359,"wires":[["d031695a129e095a"]]},{"id":"d031695a129e095a","type":"yaml","z":"dd3cb2217a01efae","property":"payload","name":"","x":738,"y":448,"wires":[["356cad31136bd2bb","38bc0b91bc93b258"]]},{"id":"356cad31136bd2bb","type":"function","z":"dd3cb2217a01efae","name":"convert github action yaml file to collection of change nodes","func":"/*\n * Functionality\n */\nlet ruleJson = (nameStr, data) => {\n    return {\n        \"t\": \"set\",\n        \"p\": nameStr,\n        \"pt\": \"msg\",\n        \"to\": JSON.stringify(data, null, 2),\n        \"tot\": \"json\"\n    }\n}\n\nlet ruleString = (nameStr, data) => {\n    return {\n        \"t\": \"set\",\n        \"p\": nameStr,\n        \"pt\": \"msg\",\n        \"to\": data,\n        \"tot\": \"str\"\n    }\n}\n\nlet hashKey = (keyStr) => {\n    if (keyStr.indexOf(\"-\") > -1) {\n        return `['${keyStr}']`\n    } else {\n        return `.${keyStr}`\n    }\n}\n\n/*\n * Templates\n */\nlet chgTemplate = {\n    \"type\": \"change\",\n    \"name\": \"\",\n    \"action\": \"\",\n    \"property\": \"\",\n    \"from\": \"\",\n    \"to\": \"\",\n    \"reg\": false,\n    \"x\": 0,\n    \"y\": 0,\n}\n\nlet startHere = {\n    ...chgTemplate,\n    \"id\": RED.util.generateId(),\n    \"name\": \"Start Here\",\n    \"rules\": [ruleJson(\"payload\", {})],\n    \"wires\": [\n        []\n    ]\n}\n\nlet lstNde = startHere;\nlet height = 50;\nlet nodeCollection = [ startHere ];\n\n/*\n * Computation starts here.\n */\nif ( msg.payload.name ) {\n    startHere.name = msg.payload.name\n    startHere.rules.push(ruleString(\"payload.name\", msg.payload.name))\n    delete msg.payload.name;\n}\n\nif ( msg.payload.env ) {\n    startHere.rules.push(ruleJson(\"payload.env\",{}))\n\n    let envKeys = Object.keys(msg.payload.env)\n    for (var kdx = 0; kdx < envKeys.length; kdx++) {\n        startHere.rules.push(ruleJson(\"payload.env\" + hashKey(envKeys[kdx]), msg.payload.env[envKeys[kdx]]))\n    }\n    \n    delete msg.payload.env;\n}\n\n['on','permissions'].forEach( k => {\n    if (Object.keys(msg.payload).indexOf(k)>-1) {\n        startHere.rules.push(ruleJson(\"payload\" + hashKey(k), msg.payload[k]))\n        delete msg.payload[k];\n    }\n})\n\nif (msg.payload.jobs) {\n    startHere.rules.push(ruleJson(\"payload.jobs\",{}))\n\n    let jobKeys = Object.keys(msg.payload.jobs);\n\n    for (var idx = 0; idx < jobKeys.length ; idx++) {\n        let ndeId = RED.util.generateId()\n        let jobObj = msg.payload.jobs[jobKeys[idx]]\n\n        let jobChg = {\n            ...chgTemplate,\n            id: ndeId,\n            name: \"Job: \" + jobKeys[idx],\n            rules: [ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]), {})],\n            x: 40,\n            y: height,\n            wires: [[]]\n        };\n        \n        if (Object.keys(jobObj).indexOf(\"name\") > -1) {\n            jobChg.rules.push(ruleString(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".name\", jobObj.name));\n            delete jobObj.name;\n        }\n\n        ['permissions', 'runs-on'].forEach(k => {\n            if (Object.keys(jobObj).indexOf(k) > -1) {\n                jobChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + hashKey(k), jobObj[k]))\n                delete jobObj[k];\n            }\n        })\n\n        nodeCollection.push(jobChg)\n        lstNde.wires[0].push(ndeId)\n        lstNde = jobChg;\n\n        if (jobObj.steps) {\n            jobChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps\",[]))\n\n            for (var jdx = 0; jdx < jobObj.steps.length; jdx++) {\n                ndeId = RED.util.generateId()\n                let stpObj = jobObj.steps[jdx];\n                height += 50\n                let stpName = (stpObj.name || (stpObj.run && \"Run Only\") || (stpObj.uses && \"Uses only\") || \"No Name\")\n\n                let stepChg = {\n                    ...chgTemplate,\n                    id: ndeId,\n                    name: \"Step: \" + stpName,\n                    rules: [ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps[\" + jdx + \"]\", {})],\n                    x: 80,\n                    y: height,\n                    \"wires\": [[]]\n                };\n\n                if (Object.keys(stpObj).indexOf(\"name\") > - 1) {\n                    stepChg.rules.push(ruleString(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps[\" + jdx + \"].name\", stpObj.name))\n                    delete stpObj.name\n                }\n                \n                [\"if\", \"uses\",\"run\"].forEach( k => {\n                    if (Object.keys(stpObj).indexOf(k) > - 1 ) {\n                        stepChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps[\" + jdx + \"]\" + hashKey(k), stpObj[k]))\n                        delete stpObj[k]\n                    }\n                })\n                \n                if ( stpObj[\"with\"] ) {\n                    stepChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps[\" + jdx + \"].with\", {}))\n\n                    let withKeys = Object.keys(stpObj[\"with\"])\n                    for ( var kdx = 0 ; kdx < withKeys.length ; kdx++ ) {\n                        stepChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps[\" + jdx + \"].with\" + hashKey(withKeys[kdx]), stpObj[\"with\"][withKeys[kdx]]))\n                    }\n\n                    delete stpObj[\"with\"]\n                }\n\n                Object.keys(stpObj).forEach(k => {\n                    stepChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + \".steps[\" + jdx + \"]\" + hashKey(k), stpObj[k]))\n                    delete stpObj[k]\n                })        \n                \n                nodeCollection.push(stepChg)\n                lstNde.wires[0].push(ndeId)\n                lstNde = stepChg;\n            }\n            delete jobObj.steps\n        }\n\n        Object.keys(jobObj).forEach( k => {\n            jobChg.rules.push(ruleJson(\"payload.jobs\" + hashKey(jobKeys[idx]) + hashKey(k), jobObj[k]))\n            delete jobObj[k];\n        })        \n    }\n    delete msg.payload.jobs;\n}\n\nObject.keys(msg.payload).forEach( k => {\n    startHere.rules.push(ruleJson( \"payload\" + hashKey(k), msg.payload[k]))\n    delete msg.payload[k];\n})\n\nmsg.payload = nodeCollection\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1077,"y":329,"wires":[["0d6ddb294a9be57e","6477c53d82e6fbaf"]]},{"id":"38bc0b91bc93b258","type":"debug","z":"dd3cb2217a01efae","name":"debug 93","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":897,"y":517,"wires":[]},{"id":"0d6ddb294a9be57e","type":"debug","z":"dd3cb2217a01efae","name":"debug 89","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1553,"y":358,"wires":[]},{"id":"6477c53d82e6fbaf","type":"json","z":"dd3cb2217a01efae","name":"","property":"payload","action":"str","pretty":true,"x":1379.2855224609375,"y":504,"wires":[["58482fba18d94669"]]},{"id":"58482fba18d94669","type":"ClientCode","z":"dd3cb2217a01efae","name":"pop up import dialog","clientcode":"setTimeout(() => {\n            RED.clipboard.import();\n        \n            setTimeout(() => {\n                $('#red-ui-clipboard-dialog-import-text').val(\n                   data.payload\n                ).trigger(\"paste\");\n            }, 300);\n        },400)","format":"javascript","x":1581,"y":648.142822265625,"wires":[[]]},{"id":"3b6cb8d41c17ee45","type":"yaml","z":"dd3cb2217a01efae","property":"payload","name":"","x":1194,"y":1378,"wires":[["208e3f642ad5c227"]]},{"id":"208e3f642ad5c227","type":"debug","z":"dd3cb2217a01efae","name":"debug 94","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1264,"y":1295,"wires":[]},{"id":"59bc62b633233084","type":"inject","z":"dd3cb2217a01efae","name":"trigger","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":163,"y":844,"wires":[["51b7766a1cc9c928"]]},{"id":"51b7766a1cc9c928","type":"change","z":"dd3cb2217a01efae","name":"Publish Release","rules":[{"t":"set","p":"payload","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.name","pt":"msg","to":"Publish Release","tot":"str"},{"t":"set","p":"payload.env","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.env.ACTIONS_ALLOW_UNSECURE_COMMANDS","pt":"msg","to":"true","tot":"json"},{"t":"set","p":"payload.on","pt":"msg","to":"{\n  \"release\": {\n    \"types\": [\n      \"published\"\n    ]\n  }\n}","tot":"json"},{"t":"set","p":"payload.permissions","pt":"msg","to":"{\n  \"contents\": \"read\"\n}","tot":"json"},{"t":"set","p":"payload.jobs","pt":"msg","to":"{}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":595,"y":775,"wires":[["d28c670949fd230c"]]},{"id":"d28c670949fd230c","type":"change","z":"dd3cb2217a01efae","name":"Job: generate","rules":[{"t":"set","p":"payload.jobs.generate","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.name","pt":"msg","to":"Update node-red-docker image","tot":"str"},{"t":"set","p":"payload.jobs.generate['runs-on']","pt":"msg","to":"\"ubuntu-latest\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps","pt":"msg","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":635,"y":825,"wires":[["6b7305b6819a969e"]]},{"id":"6b7305b6819a969e","type":"change","z":"dd3cb2217a01efae","name":"Step: Check out node-red repository","rules":[{"t":"set","p":"payload.jobs.generate.steps[0]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[0].name","pt":"msg","to":"Check out node-red repository","tot":"str"},{"t":"set","p":"payload.jobs.generate.steps[0].uses","pt":"msg","to":"\"actions/checkout@v4\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[0].with","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[0].with.path","pt":"msg","to":"\"node-red\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":733,"y":875,"wires":[["f364c47ad20e8f70"]]},{"id":"f364c47ad20e8f70","type":"change","z":"dd3cb2217a01efae","name":"Step: Check out node-red-docker repository","rules":[{"t":"set","p":"payload.jobs.generate.steps[1]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[1].name","pt":"msg","to":"Check out node-red-docker repository","tot":"str"},{"t":"set","p":"payload.jobs.generate.steps[1].uses","pt":"msg","to":"\"actions/checkout@v4\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[1].with","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[1].with.repository","pt":"msg","to":"\"node-red/node-red-docker\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[1].with.path","pt":"msg","to":"\"node-red-docker\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":753,"y":925,"wires":[["0759e0462a019974"]]},{"id":"0759e0462a019974","type":"change","z":"dd3cb2217a01efae","name":"Step: Check out node-red.github.io repository","rules":[{"t":"set","p":"payload.jobs.generate.steps[2]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[2].name","pt":"msg","to":"Check out node-red.github.io repository","tot":"str"},{"t":"set","p":"payload.jobs.generate.steps[2].uses","pt":"msg","to":"\"actions/checkout@v4\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[2].with","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[2].with.repository","pt":"msg","to":"\"node-red/node-red.github.io\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[2].with.path","pt":"msg","to":"\"node-red.github.io\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":763,"y":975,"wires":[["9edf84cc400eeba4"]]},{"id":"9edf84cc400eeba4","type":"change","z":"dd3cb2217a01efae","name":"Step: Uses only","rules":[{"t":"set","p":"payload.jobs.generate.steps[3]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[3].uses","pt":"msg","to":"\"actions/setup-node@v4\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[3].with","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[3].with['node-version']","pt":"msg","to":"\"16\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":663,"y":1025,"wires":[["47aec2fcfc6e15e9"]]},{"id":"47aec2fcfc6e15e9","type":"change","z":"dd3cb2217a01efae","name":"Step: Run Only","rules":[{"t":"set","p":"payload.jobs.generate.steps[4]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[4].run","pt":"msg","to":"\"node ./node-red/.github/scripts/update-node-red-docker.js\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":663,"y":1075,"wires":[["3a21fa2aa6137ba7"]]},{"id":"3a21fa2aa6137ba7","type":"change","z":"dd3cb2217a01efae","name":"Step: Create Docker Pull Request","rules":[{"t":"set","p":"payload.jobs.generate.steps[5]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].name","pt":"msg","to":"Create Docker Pull Request","tot":"str"},{"t":"set","p":"payload.jobs.generate.steps[5].uses","pt":"msg","to":"\"peter-evans/create-pull-request@v5\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with.token","pt":"msg","to":"\"${{ secrets.NR_REPO_TOKEN }}\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with.committer","pt":"msg","to":"\"GitHub <noreply@github.com>\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with.author","pt":"msg","to":"\"${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with.path","pt":"msg","to":"\"node-red-docker\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with['commit-message']","pt":"msg","to":"\"Bump to ${{ env.newVersion }}\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with.title","pt":"msg","to":"\"ðŸš€ Update to Node-RED ${{ env.newVersion }} release\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[5].with.body","pt":"msg","to":"\"Updates the Node-RED Docker repo for the ${{ env.newVersion }} release.\\n\\nOnce this is merged, you will need to create a new release with the tag `v${{ env.newVersion }}`.\\n\\nThis PR was auto-generated by a GitHub Action. Any questions, speak to @knolleary\\n\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":723,"y":1125,"wires":[["09d2c8714480b4e9"]]},{"id":"09d2c8714480b4e9","type":"change","z":"dd3cb2217a01efae","name":"Step: Run Only","rules":[{"t":"set","p":"payload.jobs.generate.steps[6]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[6].run","pt":"msg","to":"\"node ./node-red/.github/scripts/update-node-red-website.js\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":663,"y":1175,"wires":[["d4df42c707ad67eb"]]},{"id":"d4df42c707ad67eb","type":"change","z":"dd3cb2217a01efae","name":"Step: Create Website Pull Request","rules":[{"t":"set","p":"payload.jobs.generate.steps[7]","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].name","pt":"msg","to":"Create Website Pull Request","tot":"str"},{"t":"set","p":"payload.jobs.generate.steps[7].uses","pt":"msg","to":"\"peter-evans/create-pull-request@v5\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with.token","pt":"msg","to":"\"${{ secrets.NR_REPO_TOKEN }}\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with.committer","pt":"msg","to":"\"GitHub <noreply@github.com>\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with.author","pt":"msg","to":"\"${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with.path","pt":"msg","to":"\"node-red.github.io\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with['commit-message']","pt":"msg","to":"\"Bump to ${{ env.newVersion }}\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with.title","pt":"msg","to":"\"ðŸš€ Update to Node-RED ${{ env.newVersion }} release\"","tot":"json"},{"t":"set","p":"payload.jobs.generate.steps[7].with.body","pt":"msg","to":"\"Updates the Node-RED Website repo for the ${{ env.newVersion }} release.\\n\\nThis PR was auto-generated by a GitHub Action. Any questions, speak to @knolleary\\n\"","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":723,"y":1225,"wires":[["3b6cb8d41c17ee45"]]}]