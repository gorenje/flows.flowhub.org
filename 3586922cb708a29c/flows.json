[{"id":"3586922cb708a29c","type":"tab","label":"[GitHub] Backup visualisation","disabled":false,"info":"::: aim\n\nBuild a web page for comparing flow revisions visually.\n\n:::\n\n::: requirements\n\n1. The [GitHub base functionality](https://flowhub.org/f/390ee0021ded4910) flow needs to be imported into Node-RED. This flow will require a GitHub API token --> obtaining a token is a further requirement.\n\n:::\n\n::: background\n\nThis builds on the [GitHub backup flow](https://flowhub.org/f/c9abaaed2623d0fb) to provide HTTP endpoints for visually comparing different revisions of the flow backups.\n\n:::\n\n### Configuration\n\nGitHub details are required <a class=\"ahl-group-only\" data-ids=\"2e1f1b38844ce2e7\">here</a>:\n\n![img](https://cdn.openmindmap.org/content/1694609202256_Screen_Shot_2023-09-13_at_14.46.14.png)\n\n- `owner` is your GitHub user name\n- `repo` repository name\n- `branch` branch name\n- `flow_filename` name of the flow file, no slashes or special characters allowed.\n\nTo actvate the endpoints, <a class=\"ahl-group-only\" data-ids=\"47c942621515bc47\">all the http-in nodes</a>. After that, the `/backup` endpoint is used to display the comparison.\n\n### Usage\n\nNavigate to the the `/backup` on your Node-RED server. Select as many revisions as desired, click the compare button:\n\n![img](https://cdn.openmindmap.org/content/1694605089788_Screen_Shot_2023-09-13_at_13.37.47.png)\n\nUse the slider on the top-left to visualise differences between revisions:\n\n![img](https://cdn.openmindmap.org/content/1694605024474_Screen_Shot_2023-09-13_at_13.31.50.png)\n\nClick on purple nodes to be shown a more detailed comparison of changes:\n\n![img](https://cdn.openmindmap.org/content/1694605913219_Screen_Shot_2023-09-13_at_13.51.09.png)","env":[]},{"id":"832ad739eb4c39ef","type":"group","z":"3586922cb708a29c","name":"retrieve all flows details for revisions requested","style":{"label":true,"color":"#000000"},"nodes":["4116c8af6018ef85","61ea9134babb2aa7","40a676be5840b88d","0a38d39ccc80d998","24d08a830204c48a","5e2517a15aab9a62","87d9651813f2c0a3","6916041a78603a54","65a7fbf91fe9fcb8"],"x":1591.2857360839844,"y":806.5714492797852,"w":911.9999084472656,"h":366},{"id":"5fe0fca8c6017497","type":"group","z":"3586922cb708a29c","name":"retrieve the details of the last 30 commits","style":{"label":true,"label-position":"ne","color":"#000000"},"nodes":["6892cc839392e12e","fbf4b781060d94b0","6d1286c3f295afcd","a9ab8b32a50d9545","83bdcfd7051291de"],"x":298.2198486328125,"y":998.6097123622894,"w":388.99999129772186,"h":312.99990677833557},{"id":"2e1f1b38844ce2e7","type":"group","z":"3586922cb708a29c","name":"GitHub Configuration","style":{"label":true},"nodes":["d285f01cd41ae3b4","ab124fd98e2bde1b","3db6633561a29ecd"],"x":765,"y":24,"w":472,"h":82},{"id":"6737273baae3341f","type":"group","z":"3586922cb708a29c","name":"retrieve all commit details for specific revisions","style":{"label":true},"nodes":["a5e5a535cd62d611","28b17aadf4fad367","dc8cfd520906621c","2b04bd04e951108a","1f1cb522b2026602"],"x":1076,"y":850,"w":300,"h":317},{"id":"47c942621515bc47","type":"group","z":"3586922cb708a29c","name":"http-in nodes, create HTTP endpoints in Node-RED","style":{"label":true},"nodes":["5f835aad5ff51ad6","862fb9b9f97178d8","a3af27c5dee482a8"],"x":6,"y":44,"w":330,"h":179.57144165039062},{"id":"a29e4b2ffcb5c3b8","type":"group","z":"3586922cb708a29c","name":"Html content","style":{"label":true},"nodes":["86360bec06528638","d6725e85b7907a3f","97402112b3b8517f","37019bd5eddb6787"],"x":723.2857666015625,"y":211.57144165039062,"w":649,"h":179},{"id":"a9ab8b32a50d9545","type":"junction","z":"3586922cb708a29c","g":"5fe0fca8c6017497","x":340.6646111011505,"y":1281.4043378829956,"wires":[[]]},{"id":"4972f273743adbfb","type":"link call","z":"3586922cb708a29c","name":"","links":["c90bd91e45e1ac7e"],"linkType":"static","timeout":"30","x":693.2857666015625,"y":664.5714721679688,"wires":[["d051dc64f8852c19"]]},{"id":"6892cc839392e12e","type":"link call","z":"3586922cb708a29c","g":"5fe0fca8c6017497","name":"","links":["dbdea53966e72031"],"linkType":"static","timeout":"30","x":541.2198399305344,"y":1039.6097123622894,"wires":[["fbf4b781060d94b0"]]},{"id":"d051dc64f8852c19","type":"change","z":"3586922cb708a29c","name":"","rules":[{"t":"set","p":"commits","pt":"msg","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":601.2857666015625,"y":779.5714721679688,"wires":[["81972cecc861c8ad"]]},{"id":"fbf4b781060d94b0","type":"function","z":"3586922cb708a29c","g":"5fe0fca8c6017497","name":"push commit onto stack \\n and set next commit sha","func":"msg.commits.push({...msg.payload})\n\nif (msg.payload.parents.length > 0 ) {\n    msg.payload = msg.payload.parents[0].sha;\n    return [msg, undefined];\n} else {\n    return [undefined, msg];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530.2198486328125,"y":1159.609619140625,"wires":[["6d1286c3f295afcd"],["e46a28208d4d0559"]],"outputLabels":["more commits available","no more commits"]},{"id":"6d1286c3f295afcd","type":"switch","z":"3586922cb708a29c","g":"5fe0fca8c6017497","name":"is loop done?","property":"commits.length","propertyType":"msg","rules":[{"t":"gte","v":"30","vt":"num"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":470.2198486328125,"y":1270.609619140625,"wires":[["e46a28208d4d0559"],["92d09e96b522635a"]]},{"id":"4116c8af6018ef85","type":"split","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1714.2857360839844,"y":847.5714492797852,"wires":[["61ea9134babb2aa7"]]},{"id":"61ea9134babb2aa7","type":"change","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"","rules":[{"t":"set","p":"commit","pt":"msg","to":"payload","tot":"msg","dc":true},{"t":"set","p":"payload","pt":"msg","to":"commit.sha","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1733.2857360839844,"y":938.5714492797852,"wires":[["40a676be5840b88d"]]},{"id":"40a676be5840b88d","type":"link call","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"","links":["43d3a872c31bb664"],"linkType":"static","timeout":"30","x":1727.2857360839844,"y":1040.5714492797852,"wires":[["0a38d39ccc80d998"]]},{"id":"0a38d39ccc80d998","type":"function","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"obtain sha for file ","func":"msg.tree = {\n    ...msg.payload\n};\n\nmsg.payload = msg.payload.filter( function(d){\n    return d.path == msg.flow_filename\n})[0].sha;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1736.2857360839844,"y":1131.5714492797852,"wires":[["24d08a830204c48a"]]},{"id":"24d08a830204c48a","type":"link call","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"","links":["937f9c72251daebf"],"linkType":"static","timeout":"30","x":2048.2857666015625,"y":1131.5714111328125,"wires":[["5e2517a15aab9a62"]]},{"id":"5e2517a15aab9a62","type":"function","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"create payload with content","func":"msg.payload = {\n    sha:     msg.commit.sha,\n    content: msg.payload.content,\n    commit:  msg.commit,\n    index:   msg.orig_shas.indexOf(msg.commit.sha)\n}\n\ndelete msg.tree;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2289.28564453125,"y":1037.5714721679688,"wires":[["87d9651813f2c0a3"]]},{"id":"87d9651813f2c0a3","type":"join","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2427.28564453125,"y":865.5714721679688,"wires":[["785dd28471c00fe1"]]},{"id":"21ec47f08d6feb1e","type":"switch","z":"3586922cb708a29c","name":"","property":"req.params.name","propertyType":"msg","rules":[{"t":"eq","v":"index","vt":"str"},{"t":"eq","v":"commits.json","vt":"str"},{"t":"eq","v":"flows.json","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":4,"x":318.2857666015625,"y":450.5714416503906,"wires":[["d6725e85b7907a3f"],["86f917f3592566ad"],["1e13e729a51d7b1b"],["d6725e85b7907a3f"]]},{"id":"0cde54f994500809","type":"http response","z":"3586922cb708a29c","name":"","statusCode":"200","headers":{},"x":2801.28564453125,"y":298.5714416503906,"wires":[]},{"id":"86360bec06528638","type":"template","z":"3586922cb708a29c","g":"a29e4b2ffcb5c3b8","name":"index - show versions","field":"payload","fieldType":"msg","format":"text","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  <title>Comparing Flows</title>\n  \n  <script src=\"https://cdn.openmindmap.org/thirdparty/d3.min.js\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsdiff/5.1.0/diff.min.js\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n  <script src=\"https://cdn.openmindmap.org/embed/jquery-3.7.0.min.js\" referrerpolicy=\"no-referrer\"></script>\n  \n  <script src=\"https://cdn.openmindmap.org/embed/flowviewer.js\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.openmindmap.org/embed/flowviewer.css\"/>\n\n  <style>\n    {{{ cssStyling }}}\n  </style>\n</head>\n\n<body id=\"body\" class=\"body\">\n  <h2>\n   Compare flows visually across multiple commits.\n  </h2>\n\n  <p>\n  Select commits to compare and hit the button.\n  </p>\n  \n  <table border=1>\n    <thead>\n      <tr>\n        <th>checkbox</th>\n        <th>version</th>\n        <th>comment</th>\n        <th>date</th>\n        <th>name</th>\n        <th>email</th>\n      </tr>\n    </thead>\n    <tbody id=\"tbody\">\n    </tbody>\n  </table>\n\n  <p id=\"waitmsg\">\n  Please waiting ... commit data being retrieved\n  <br>\n  <img src=\"https://cdn.openmindmap.org/content/1690311564501_loader.svg\"/>\n  </p>\n  <br>\n  <input id=\"comparebutton\" type=\"button\" name=\"Compare\" value=\"Compare\"/>\n</body>\n\n<script>\n  var releasesMetaData = undefined;\n  var comparingVersions = [];\n  var allFlows = undefined;\n  var uniqFlowIds = {};\n  \n  window.useflowviewerarrows = {{{useflowviewerarrows}}};\n  \n  {{{ jsHelpers }}}\n\n  $(function(){\n    var params = new URLSearchParams(window.location.search);\n\n    if ( params.has('v1') && params.has('v2') ) {\n        var allTouts = waitingForGodot();\n        var versions = [params.get('v2'),params.get('v1')];\n        getCommitMetadata( \"?c=\" + versions.join(\",\"), () => {\n          getFlowData(versions, allTouts, () => {\n            /* capture grpid or ndeid and simulate a click */\n            params.has('grpid') && $('.group-'+params.get('grpid')).trigger('click');\n            params.has('ndeid') && $('.node-'+params.get('ndeid')).trigger('click');\n            updateFlowPermaLink();\n          });  \n        })\n    } else {\n      getAllCommits(() => {\n        $('#waitmsg').hide()\n      });\n\n      $('#comparebutton').on('click', function(e){\n        e.preventDefault();\n\n        $('.checkbox:checkbox:checked').each(function(idx,e){\n          comparingVersions.push($(e).prop('value'))\n        });\n\n        getFlowData(comparingVersions, waitingForGodot(), () => {\n            updateFlowPermaLink();\n        });\n      });\n    }\n  })\n</script>\n\n</html>","output":"str","x":1246.2857666015625,"y":300.5714416503906,"wires":[["0cde54f994500809"]]},{"id":"77da03caeefa1151","type":"template","z":"3586922cb708a29c","name":"commits - html","field":"html","fieldType":"msg","format":"html","syntax":"mustache","template":"{{#payload}}\n<tr>\n  <td><input id=\"sha{{ sha }}\" type=\"checkbox\" value=\"{{ sha }}\" class=\"checkbox\"></input></td>\n  <td><label for=\"sha{{ sha }}\">{{ sha }}</label></td>\n  <td>{{ message }}</td>\n  <td>{{ committer.date }}</td>\n  <td>{{ committer.name }}</td>\n  <td>{{ committer.email }}</td>\n</tr>\n{{/payload}}","output":"str","x":1682.2857360839844,"y":1269.5714492797852,"wires":[["0191ddb11a4cb083"]]},{"id":"c88c4e4c1af036c1","type":"change","z":"3586922cb708a29c","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\t   \"html\": msg.html,\t   \"metadata\": msg.metadata \t}","tot":"jsonata","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":2516.2857360839844,"y":1269.5714492797852,"wires":[["2b018fc6a6af9395"]]},{"id":"2b018fc6a6af9395","type":"http response","z":"3586922cb708a29c","name":"json","statusCode":"200","headers":{"content-type":"application/json"},"x":2788.28564453125,"y":464.5714416503906,"wires":[]},{"id":"0191ddb11a4cb083","type":"function","z":"3586922cb708a29c","name":"commit metadata","func":"msg.metadata = {}\n\nfor ( var idx = 0; idx < msg.payload.length ; idx++ ) {\n    msg.metadata[msg.payload[idx].sha] = { ...msg.payload[idx] }\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2038.2857360839844,"y":1269.5714492797852,"wires":[["c88c4e4c1af036c1"]]},{"id":"5f835aad5ff51ad6","type":"http in","z":"3586922cb708a29c","d":true,"g":"47c942621515bc47","name":"","url":"/backup/:name","method":"post","upload":false,"swaggerDoc":"","x":134.2857666015625,"y":182.57144165039062,"wires":[["21ec47f08d6feb1e"]]},{"id":"1e13e729a51d7b1b","type":"function","z":"3586922cb708a29c","name":"setup payload with shas","func":"var newPload = [];\n\nmsg.payload.shas\n\nfor ( var idx = 0; idx < msg.payload.shas.length; idx++ ) {\n    newPload.push({\n        sha: msg.payload.shas[idx]\n    })\n}\n\nmsg.orig_shas = [...msg.payload.shas];\nmsg.payload = newPload;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830.2857666015625,"y":454.5714111328125,"wires":[["e69a3666764efe3a"]]},{"id":"daed23f9af9a7a6c","type":"change","z":"3586922cb708a29c","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\t   \"html\": msg.svgDiffViewer,\t   \"flows\": msg.payload \t}","tot":"jsonata","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":2573.28564453125,"y":600.5714721679688,"wires":[["2b018fc6a6af9395"]]},{"id":"e69a3666764efe3a","type":"switch","z":"3586922cb708a29c","name":"","property":"payload.length","propertyType":"msg","rules":[{"t":"gt","v":"0","vt":"num"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1329.2857360839844,"y":454.57144927978516,"wires":[["310f9f637c3004da"],["ebede0dd3c72675d"]]},{"id":"ebede0dd3c72675d","type":"change","z":"3586922cb708a29c","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{ \"html\": \"hello world\", \"flows\": [] }","tot":"jsonata","dc":true}],"action":"","property":"","from":"","to":"","reg":false,"x":2030.2857360839844,"y":462.57144927978516,"wires":[["2b018fc6a6af9395"]]},{"id":"d6725e85b7907a3f","type":"template","z":"3586922cb708a29c","g":"a29e4b2ffcb5c3b8","name":"waitingText","field":"waitingText","fieldType":"msg","format":"javascript","syntax":"plain","template":"$('#body').html(\"Please wait ... system thinking\")\n\nsetTout(() => { $('#body').html(\"Please wait ... system thinking.\") }, 100);\nsetTout(() => { $('#body').html(\"Please wait ... system thinking..\") }, 200);\nsetTout(() => { $('#body').html(\"Please wait ... system thinking...\") }, 300);\nsetTout(() => { $('#body').html(\"Please wait ... system thinking..\") }, 400);\nsetTout(() => { $('#body').html(\"Please wait ... system thinking.\") }, 500);\nsetTout(() => { $('#body').html(\"Please wait ... system thinking\") }, 600);\nsetTout(() => { $('#body').html(\"Please wait ... system thinkin\") }, 700);\nsetTout(() => { $('#body').html(\"Please wait ... system thinki\") }, 800);\nsetTout(() => { $('#body').html(\"Please wait ... system think\") }, 900);\nsetTout(() => { $('#body').html(\"Please wait ... system thin\") }, 1000);\nsetTout(() => { $('#body').html(\"Please wait ... system thi\") }, 1100);\nsetTout(() => { $('#body').html(\"Please wait ... system th\") }, 1200);\nsetTout(() => { $('#body').html(\"Please wait ... system t\") }, 1300);\nsetTout(() => { $('#body').html(\"Please wait ... system \") }, 1400);\nsetTout(() => { $('#body').html(\"Please wait ... system\") }, 1500);\nsetTout(() => { $('#body').html(\"Please wait ... syste\") }, 1600);\nsetTout(() => { $('#body').html(\"Please wait ... syst\") }, 1700);\nsetTout(() => { $('#body').html(\"Please wait ... sys\") }, 1800);\nsetTout(() => { $('#body').html(\"Please wait ... sy\") }, 1900);\nsetTout(() => { $('#body').html(\"Please wait ... s\") }, 2000);\nsetTout(() => { $('#body').html(\"Please wait ... \") }, 2100);\nsetTout(() => { $('#body').html(\"Please wait ...\") }, 2200);\nsetTout(() => { $('#body').html(\"Please wait ..\") }, 2300);\nsetTout(() => { $('#body').html(\"Please wait .\") }, 2400);\nsetTout(() => { $('#body').html(\"Please wait \") }, 2500);\nsetTout(() => { $('#body').html(\"Please wait\") }, 2600);\nsetTout(() => { $('#body').html(\"Please wai\") }, 2700);\nsetTout(() => { $('#body').html(\"Please wa\") }, 2800);\nsetTout(() => { $('#body').html(\"Please w\") }, 2900);\nsetTout(() => { $('#body').html(\"Please \") }, 3000);\nsetTout(() => { $('#body').html(\"Please\") }, 3100);\nsetTout(() => { $('#body').html(\"Pleas\") }, 3200);\nsetTout(() => { $('#body').html(\"Plea\") }, 3300);\nsetTout(() => { $('#body').html(\"Ple\") }, 3400);\nsetTout(() => { $('#body').html(\"Pl\") }, 3500);\nsetTout(() => { $('#body').html(\"P\") }, 3600);\nsetTout(() => { $('#body').html(\"\") }, 3700);\nsetTout(() => { $('#body').html(\"P\") }, 3800);\nsetTout(() => { $('#body').html(\"Pu\") }, 3900);\nsetTout(() => { $('#body').html(\"Puf\") }, 4000);\nsetTout(() => { $('#body').html(\"Puff\") }, 4100);\nsetTout(() => { $('#body').html(\"Puff W\") }, 4200);\nsetTout(() => { $('#body').html(\"Puff Wh\") }, 4300);\nsetTout(() => { $('#body').html(\"Puff Wha\") }, 4400);\nsetTout(() => { $('#body').html(\"Puff What\") }, 4500);\nsetTout(() => { $('#body').html(\"Puff What \") }, 4600);\nsetTout(() => { $('#body').html(\"Puff What i\") }, 4700);\nsetTout(() => { $('#body').html(\"Puff What is\") }, 4800);\nsetTout(() => { $('#body').html(\"Puff What is \") }, 4900);\nsetTout(() => { $('#body').html(\"Puff What is g\") }, 5000);\nsetTout(() => { $('#body').html(\"Puff What is go\") }, 5100);\nsetTout(() => { $('#body').html(\"Puff What is goi\") }, 5200);\nsetTout(() => { $('#body').html(\"Puff What is goin\") }, 5300);\nsetTout(() => { $('#body').html(\"Puff What is going\") }, 5400);\nsetTout(() => { $('#body').html(\"Puff What is going \") }, 5500);\nsetTout(() => { $('#body').html(\"Puff What is going o\") }, 5600);\nsetTout(() => { $('#body').html(\"Puff What is going on\") }, 5700);\nsetTout(() => { $('#body').html(\"Puff What is going on?\") }, 5800);\nsetTout(() => { $('#body').html(\"Puff What is going on!?\") }, 6000);\nsetTout(() => { $('#body').html(\"Puff What is going on?!?\") }, 6300);\nsetTout(() => { $('#body').html(\"Puff What is going on!?!?\") }, 6700);\nsetTout(() => { $('#body').html(\"Puff What is going on?!?!?\") }, 7200);\nsetTout(() => { $('#body').html(\"Puff What is going on!?!?!?\") }, 7700);\nsetTout(() => { $('#body').html(\"Puff What is going on?!?!?!?\") }, 8300);\n","output":"str","x":819.2857666015625,"y":311.5714416503906,"wires":[["97402112b3b8517f"]]},{"id":"97402112b3b8517f","type":"template","z":"3586922cb708a29c","g":"a29e4b2ffcb5c3b8","name":"jsHelpers","field":"jsHelpers","fieldType":"msg","format":"javascript","syntax":"mustache","template":"var entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nvar descMap = {\n  'z': \"Flow Tab Id\",\n  'g': \"Group Id\",\n  'd': \"Disabled\",\n};\n\nfunction escapeHtml(string) {\n  return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap(s) {\n    return entityMap[s];\n  });\n}\n\nfunction updateFlowPermaLink() {\n  if (allFlows.length == 2) {\n    $('#flowPerma').show().attr('href', '?flid=' + $('#flowSelector').val() + \"&v2=\" + allFlows[0].sha + \"&v1=\" + allFlows[1].sha)\n  } else {\n    $('#flowPerma').hide()\n  }\n}\n\nfunction onChangeSelector(e) {\n  e.preventDefault();\n\n  var flowId = $('#flowSelector').val();\n\n  for (var idx = 0; idx < allFlows.length; idx++) {\n    var svgjQueryObj = $($('#svgelem .container-diff' + idx)[0]);\n\n    [\"flowNodes\", \"flowGroups\", \"flowWires\", \"flowGridlines\"].forEach(function (cls) {\n      $(svgjQueryObj.find('.' + cls)[0]).html(\"\");\n    });\n\n    renderFlowIdForIdx(flowId, idx)\n    updateWithDiffData()\n  }\n\n  updateFlowPermaLink();\n}\n\nfunction getCommitMetadata(queryString, cb) {\n  $.ajax({\n    dataType: \"json\",\n    url: \"/backup/commits.json\" + queryString,\n    method: 'get',\n    success: function (vdata) {\n      releasesMetaData = vdata.metadata;\n      cb(vdata);\n    }\n  });\n}\n\nfunction getAllCommits(cb) {\n  getCommitMetadata(\"\", (vdata) => {\n    $('#tbody').html(vdata.html)\n    if ( cb ) { cb() };\n  });\n}\n\nfunction copyToClipboard(elem) {\n  copyTextToClipboard($(elem).data('json'), () => {\n    alert( 'Exported version ' + $(elem).data('commit') + \" of element.\\n\\nElement can now be imported into Node-RED.\\n\")\n  });\n}\n\nfunction attrDesc(nme) {\n  return descMap[nme] ? \" <i style='font-size: 80%;'>(\" + descMap[nme] + \")</i>\" : \"\";\n}\n\nfunction showNodeContentPopup(ndeV1, shaV1, ndeV2, shaV2, elemType) {\n  $('.parentDisable').show();\n  $('#diff-viewer').show();\n  \n  $('#dv-details').html(\"\");\n\n  $('#diffPerma').attr('href', \"?\" + elemType + \"=\" + ndeV1.id + \"&v2=\" + shaV1 + \"&v1=\" + shaV2 + \"&flid=\" + ndeV1.z);\n\n  $('#dv-nde-name').html(ndeV1.name);\n  $('#dv-nde-type').html(ndeV1.type);\n  $('#dv-nde-id').html(ndeV1.id);\n  $('#dv-nde1-sha').html(shaV1);\n  $('#dv-nde2-sha').html(shaV2);\n\n  Object.keys(ndeV1).forEach(function (nme) {\n    var txt = typeof ndeV1[nme] == \"object\" ? JSON.stringify(ndeV1[nme]) : ndeV1[nme];\n    $('#dv-details').append(\"<tr class='dv-added'><th>\" + nme + attrDesc(nme) + \"</th><td><code>\" + escapeHtml(txt) + \"</code></td><td><i>ADDED</i></td></tr>\")\n  });\n\n  $('#dv-nde1-copy').data('json', JSON.stringify([ndeV1]));\n  $('#dv-nde1-copy').data('commit', shaV1);\n}\n\nfunction showDiffPopup(ndeV1, shaV1, ndeV2, shaV2, elemType) {\n  $('.parentDisable').show();\n  $('#diff-viewer').show();\n\n  $('#dv-nde-name').html(ndeV1.name);\n  $('#dv-nde-type').html(ndeV1.type);\n  $('#dv-nde-id').html(ndeV1.id);\n  $('#dv-nde1-sha').html(shaV1);\n  $('#dv-nde2-sha').html(shaV2);\n  \n  $('#dv-details').html(\"\");\n\n  $('#diffPerma').attr('href', \"?\" + elemType + \"=\" + ndeV1.id + \"&v2=\" + shaV1 + \"&v1=\" + shaV2 + \"&flid=\" + ndeV1.z);\n\n  Object.keys(ndeV2).forEach(function (nme) {\n    if ( Object.keys(ndeV1).indexOf(nme) < 0 ) {\n      var txt = typeof ndeV2[nme] == \"object\" ? JSON.stringify(ndeV2[nme]) : ndeV2[nme];\n      $('#dv-details').append(\"<tr class='dv-removed'><th>\" + nme + attrDesc(nme) + \"</th><td><i>MISSING</i></td><td><code>\" + escapeHtml(txt) + \"</code></td></tr>\")\n    }\n  });\n\n  Object.keys(ndeV1).forEach(function (nme) {\n    if (Object.keys(ndeV2).indexOf(nme) < 0) {\n      var txt = typeof ndeV1[nme] == \"object\" ? JSON.stringify(ndeV1[nme]) : ndeV1[nme];\n      $('#dv-details').append(\"<tr class='dv-added'><th>\" + nme + attrDesc(nme) + \"</th><td><code>\" + escapeHtml(txt) +\"</code></td><td><i>ADDED</i></td></tr>\")\n    }\n  });\n\n  Object.keys(ndeV1).forEach(function (nme) {\n    if (Object.keys(ndeV2).indexOf(nme) > -1) {\n\n      if ( JSON.stringify(ndeV1[nme]) !== JSON.stringify(ndeV2[nme]) ) {\n        let span = null;\n\n        let diff = undefined;\n\n        try {\n          diff = Diff.diffLines(ndeV2[nme], ndeV1[nme])\n        } catch (e) {\n          diff = Diff.diffLines(JSON.stringify(ndeV2[nme]), JSON.stringify(ndeV1[nme]))\n        }\n        const fragment = document.createDocumentFragment();\n\n        diff.forEach((part) => {\n          // green for additions, red for deletions\n          const color = part.added ? 'green' : part.removed ? 'red' : '#040506';\n\n          span = document.createElement('pre');\n          span.setAttribute('class','dv-pre-elem');\n          span.style.color = color;\n          span.appendChild(document.createTextNode(part.value));\n          span.appendChild(document.createElement('br'));\n          fragment.appendChild(span);\n        });\n\n        var row = document.createElement('tr');\n        row.setAttribute('class',\"dv-differ\")\n        var cell = document.createElement('th')\n        cell.appendChild(document.createTextNode(nme))\n        if (descMap[nme]) {\n          var itl = document.createElement('i');\n          itl.style[\"font-size\"] = \"80%\"\n          itl.appendChild(document.createTextNode(\"(\" + descMap[nme]+\")\"))\n          cell.appendChild(itl)\n        }\n        row.append(cell);\n\n        cell = document.createElement('td')\n        cell.setAttribute('colspan', '2')\n        cell.append( fragment)\n\n        row.append(cell)\n        $('#dv-details').append(row)\n      } else {\n        $('#dv-details').append(\"<tr><th>\" + nme + \"</th><td><code>\" + escapeHtml(ndeV1[nme]) + \"</code></td><td><code>\" + escapeHtml(ndeV2[nme]) + \"</code></td></tr>\")\n      }\n\n    }\n  });\n\n  $('#dv-nde1-copy').data('json', JSON.stringify([ndeV1]));\n  $('#dv-nde1-copy').data('commit', shaV1);\n\n  $('#dv-nde2-copy').data('json', JSON.stringify([ndeV2]));\n  $('#dv-nde2-copy').data('commit', shaV2);\n}\n\nfunction setupSlider() {\n  var slider = document.getElementById(\"slider\");\n\n  slider.oninput = function () {\n    var idx = Math.floor(this.value / 100);\n    var nValue = (this.value - (100 * idx));\n\n    for (var jdx = 0; jdx < idx; jdx++) { $('.container-diff' + jdx).css('opacity', 0); }\n    for (var jdx = idx + 2; jdx < allFlows.length; jdx++) { $('.container-diff' + jdx).css('opacity', 0); }\n\n    $('.container-diff' + idx).css('opacity', (100 - nValue) / 100)\n    $('.container-diff' + (idx + 1)).css('opacity', nValue / 100)\n  }\n\n  $('#slider').val(0);\n  $('#slider').prop(\"max\", 100 * (allFlows.length - 1));\n}\n\nfunction waitingForGodot() {\n  var allTouts = [];\n  var setTout = (f, tt) => { allTouts.push(setTimeout(f, tt)) };\n\n  /* \n   * done for the eyeball rolls - yes this is extra done this way, for the shits and giggles \n   */\n  {{{ waitingText }}}\n\n  return allTouts;\n}\n\nfunction renderFlowIdForIdx(flowId, idx) {\n  renderFlow(flowId, allFlows[idx].flowdata, $($('#svgelem .container-diff' + idx)[0]), {\n    \"arrows\": window.useflowviewerarrows,\n    \"gridlines\": false,\n    \"zoom\": true, /* does not have any affect, using d3 for zoom */\n    \"images\": true,\n    \"linklines\": false,\n    \"dllink\": false,\n    \"labels\": true,\n  });\n}\n\n/* Taken from\n   https://github.com/node-red/node-red/blob/e7b27ce7fb78f02591d1c97e4216be075c7973fd/packages/node_modules/@node-red/editor-client/src/js/ui/diff.js#L1108\n*/\nfunction parseNodes(nodeList) {\n  var tabOrder = [];\n  var tabs = {};\n  var subflows = {};\n  var globals = [];\n  var all = {};\n\n  nodeList.forEach(function (node) {\n    all[node.id] = node;\n    if (node.type === 'tab') {\n      tabOrder.push(node.id);\n      tabs[node.id] = { n: node, nodes: [] };\n    } else if (node.type === 'subflow') {\n      subflows[node.id] = { n: node, nodes: [] };\n    }\n  });\n\n  nodeList.forEach(function (node) {\n    if (node.type !== 'tab' && node.type !== 'subflow') {\n      if (tabs[node.z]) {\n        tabs[node.z].nodes.push(node);\n      } else if (subflows[node.z]) {\n        subflows[node.z].nodes.push(node);\n      } else {\n        globals.push(node);\n      }\n    }\n  });\n\n  return {\n    all: all,\n    tabOrder: tabOrder,\n    tabs: tabs,\n    subflows: subflows,\n    globals: globals\n  }\n}\n\n/* Taken from \n   https://github.com/node-red/node-red/blob/e7b27ce7fb78f02591d1c97e4216be075c7973fd/packages/node_modules/@node-red/editor-client/src/js/ui/diff.js#L1145\n   and extended with tabHas\n*/\nfunction generateDiff(currentNodes, newNodes) {\n  var currentConfig = parseNodes(currentNodes);\n  var newConfig = parseNodes(newNodes);\n\n  var added = {};\n  var deleted = {};\n  var changed = {};\n  var moved = {};\n\n  var tabHas = {\n    changed: {},\n    added: {},\n    moved: {},\n    deleted: {}\n  };\n\n  Object.keys(currentConfig.all).forEach(function (id) {\n    var obj = currentConfig.all[id];\n\n    if (!newConfig.all.hasOwnProperty(id)) {\n      deleted[id] = true;\n      tabHas.deleted[obj.z] = true;\n\n    } else if (JSON.stringify(obj) !== JSON.stringify(newConfig.all[id])) {\n      tabHas.changed[obj.z] = true;\n\n      /* did x&y change or did something really change? */\n      var clnObj = { ...obj };\n      var clnCmp = { ...newConfig.all[id] };\n      \n      delete clnCmp.x;\n      delete clnCmp.y;\n      delete clnObj.x;\n      delete clnObj.y;\n      \n      /* these are group attributes that often change but are a visual change */\n      delete clnObj.w;\n      delete clnObj.h;\n      delete clnCmp.w;\n      delete clnCmp.h;\n\n      if (JSON.stringify(clnObj) !== JSON.stringify(clnCmp)) {\n        changed[id] = true;\n      } else {\n        moved[id] = true;\n      }\n\n      if (currentConfig.all[id].z !== newConfig.all[id].z) {\n        tabHas.moved[obj.z] = true;\n        moved[id] = true;\n      }\n    }\n  });\n\n  Object.keys(newConfig.all).forEach(function (id) {\n    if (!currentConfig.all.hasOwnProperty(id)) {\n      added[id] = true;\n      tabHas.added[newConfig.all[id].z] = true;\n    }\n  });\n\n  var diff = {\n    currentConfig: currentConfig,\n    newConfig: newConfig,\n    added: added,\n    deleted: deleted,\n    changed: changed,\n    moved: moved,\n    tabHas: tabHas\n  };\n\n  return diff;\n}\n\nfunction updateWithDiffData() {\n  if (allFlows.length != 2) { return undefined }\n\n  var diff = generateDiff(allFlows[1].flowdata, allFlows[0].flowdata);\n\n  Object.keys(diff.added).forEach((ndeId) => {\n    $('.node-' + ndeId).addClass('added');\n    $('.group-' + ndeId).addClass('added');\n    \n    $('.node-' + ndeId).siblings().on('click', function (e) {\n      var nodeV1 = allFlows[0].flowdata.filter((n) => { return n.id == ndeId })[0];\n\n      showNodeContentPopup(nodeV1, allFlows[0].sha, undefined, allFlows[1].sha, \"ndeid\");\n    });\n    $('.node-' + ndeId).on('click', function (e) {\n      var nodeV1 = allFlows[0].flowdata.filter((n) => { return n.id == ndeId })[0];\n\n      showNodeContentPopup(nodeV1, allFlows[0].sha, undefined, allFlows[1].sha, \"ndeid\");\n    });\n  });\n\n  Object.keys(diff.moved).forEach((ndeId) => {\n    $('.node-' + ndeId).addClass('moved');\n\n    $('.group-' + ndeId).addClass('moved');\n    $('.group-' + ndeId).on('click', function (e) {\n      var nodeV1 = allFlows[1].flowdata.filter((n) => { return n.id == ndeId })[0];\n      var nodeV0 = allFlows[0].flowdata.filter((n) => { return n.id == ndeId })[0];\n\n      showDiffPopup(nodeV0, allFlows[0].sha, nodeV1, allFlows[1].sha, \"grpid\");\n    });\n  });\n\n  Object.keys(diff.changed).forEach((ndeId) => {\n    $('.node-' + ndeId).addClass('changed');\n    $('.node-' + ndeId).on('click', function(e) {\n      var nodeV1 = allFlows[1].flowdata.filter((n) => { return n.id == ndeId })[0];\n      var nodeV0 = allFlows[0].flowdata.filter((n) => { return n.id == ndeId })[0];\n\n      showDiffPopup(nodeV0, allFlows[0].sha, nodeV1, allFlows[1].sha, \"ndeid\");\n    });\n\n    $('.node-' + ndeId).siblings().on('click', function (e) {\n      var nodeV1 = allFlows[1].flowdata.filter((n) => { return n.id == ndeId })[0];\n      var nodeV0 = allFlows[0].flowdata.filter((n) => { return n.id == ndeId })[0];\n\n      showDiffPopup(nodeV0, allFlows[0].sha, nodeV1, allFlows[1].sha, \"ndeid\");\n    });\n\n    $('.group-' + ndeId).addClass('changed');\n    $('.group-' + ndeId).on('click', function (e) {\n      var nodeV1 = allFlows[1].flowdata.filter((n) => { return n.id == ndeId })[0];\n      var nodeV0 = allFlows[0].flowdata.filter((n) => { return n.id == ndeId })[0];\n\n      showDiffPopup(nodeV0, allFlows[0].sha, nodeV1, allFlows[1].sha, \"grpid\");\n    });\n  });\n\n\n  Object.keys(diff.deleted).forEach((ndeId) => {\n    $('.node-' + ndeId).addClass('deleted');\n    $('.group-' + ndeId).addClass('deleted');\n  });\n\n  return diff;\n}\n\nfunction fillSelector(selectedFlowId, flowIdHash, diffData) {\n  var sltObj = $('#flowSelector');\n\n  if (diffData) {\n    for (var flowId in flowIdHash) {\n      var mods = [];\n\n      mods.push(flowId in diffData.tabHas.moved ? \"m\" : \".\");\n      mods.push(flowId in diffData.tabHas.changed ? \"*\" : \".\");\n      mods.push(flowId in diffData.tabHas.added ? \"+\" : \".\");\n      mods.push(flowId in diffData.tabHas.deleted ? \"-\" : \".\");\n\n      sltObj.append($('<option></option>').val(flowId).html(\n        \"[\" + mods.join(\"\") + \"] \" + flowIdHash[flowId]\n      ));\n    }\n  } else {\n    for (var flowId in flowIdHash) {\n      sltObj.append($('<option></option>').val(flowId).html(flowIdHash[flowId]));\n    }\n  }\n\n  sltObj.find('[value=\"' + selectedFlowId + '\"]').attr('selected', 'selected');\n}\n\nfunction addDownloadLink(sha, jsonContent) {\n  var divId = \"flowdownloadlinks\";\n\n  $('#' + divId).append($(\"<a>DL: \"+sha.substring(0,8)+\"</a>\").attr(\n    'href', \"data:application/json,\" + encodeURIComponent(jsonContent)\n  ).attr(\"download\", \"flow.json\").attr('class', 'flow-download-link'));\n\n  $('#' + divId).append($(\"<a>CP: \" + sha.substring(0, 8)+\"</a>\").attr('href', \"#\").attr(\n    'id', sha + divId + '-copy-to-clipboard'\n  ).attr('class', 'flow-copy-to-clipboard-link'));\n\n  $('#' + sha + divId + \"-copy-to-clipboard\").on('click', function (e) {\n    e.preventDefault();\n    copyTextToClipboard(jsonContent, function () { alert('copied') });\n  });\n}\n\nfunction getFlowData(comparingVersions, allTouts, cb) {\n  $.ajax({\n    dataType: \"json\",\n    url: \"/backup/flows.json\",\n    method: 'post',\n    data: { shas: comparingVersions },\n    success: function (vdata) {\n      $(allTouts).each(function (i, d) { clearTimeout(d) });\n      $('#body').html(vdata.html)\n\n      $('#flowSelector').on('change', onChangeSelector);\n      allFlows = vdata.flows;\n\n      var params = new URLSearchParams(window.location.search);\n      var flowId = undefined;\n\n      if ( params.has(\"flid\") ) { flowId = params.get(\"flid\") }\n\n      $('.container-diff0').css('opacity', 1)\n      for (var idx = 1; idx < allFlows.length; idx++) { $('.container-diff' + idx).css('opacity', 0) }\n\n      // atob(..) does not handle UTF-8, replace it.\n      // Taken from https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n      var atobUtf8 = (content) => {\n        function base64ToBytes(base64) {\n          const binString = atob(base64);\n          return Uint8Array.from(binString, (m) => m.codePointAt(0));\n        }\n        return new TextDecoder().decode(base64ToBytes(content));\n      };\n\n      for (var idx = 0; idx < allFlows.length; idx++) {\n        var jsonContent = atobUtf8(allFlows[idx].content);\n\n        allFlows[idx].flowdata = JSON.parse(jsonContent);\n\n        addDownloadLink(allFlows[idx].sha, jsonContent);\n\n        allFlows[idx].flowdata.forEach(function (obj) {\n          if (obj.type == \"tab\" || obj.type == \"subflow\") {\n            uniqFlowIds[obj.id] = (obj.type == \"subflow\" ? \" [SF] \" : \"\") + (obj.label || obj.name);\n          }\n        });\n\n        /* if no flowId was provided, take the first one we have found */\n        if (!flowId) { flowId = Object.keys(uniqFlowIds)[0] }\n\n        renderFlowIdForIdx(flowId, idx);\n\n        var descContainer = $($('#svgelem .container-diff' + idx + \" .flowDescription\")[0]);\n        var commitDetails = releasesMetaData[allFlows[idx].sha];\n        var description = \"[\" + commitDetails.sha + \"] \" + commitDetails.committer.date + \" \" + commitDetails.message + \" by \" + commitDetails.committer.name;\n        var textElem = getNode('text', {\n          y: 25,\n          x: 5,\n          class: 'flow-description-text'\n        });\n\n        textElem.textContent = description;\n        descContainer.append(textElem);\n      }\n\n      var diffData = updateWithDiffData();\n      fillSelector(flowId, uniqFlowIds, diffData);\n      setupSlider();\n      renderFlow(\"\", [], $($('#svgelem .container-gridlines')[0]), { gridlines: true });\n\n      setTimeout(function () {\n        var svgs = d3.selectAll(\"#svgcontainer svg\");\n        svgs.each(function () {\n          var svg = d3.select(this);\n\n          svg.html(\"<g>\" + svg.html() + \"</g>\");\n          var inner = svg.select(\"g\");\n          var zoom = d3.zoom().on(\"zoom\", function (event) {\n            inner.attr(\"transform\", event.transform);\n          });\n          svg.call(zoom);\n        })\n      },750);\n\n      if ( cb ) { cb() }\n    }\n  });\n}\n\nfunction fallbackCopyTextToClipboard(text, cb) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n\n    if (successful && cb && typeof cb == \"function\") { cb(); }\n\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\n\nfunction copyTextToClipboard(text, cb) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text, cb);\n    return;\n  }\n\n  navigator.clipboard.writeText(text).then(\n    function () {\n      if (cb && typeof cb == \"function\") { cb(); }\n      console.log('Async: Copying to clipboard was successful!');\n    }, function (err) {\n      console.error('Async: Could not copy text: ', err);\n    }\n  );\n}\n","output":"str","x":1027.2857666015625,"y":252.57144165039062,"wires":[["37019bd5eddb6787"]]},{"id":"81972cecc861c8ad","type":"switch","z":"3586922cb708a29c","name":"hasQueryString","property":"req.query.c","propertyType":"msg","rules":[{"t":"nempty"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":489.2857666015625,"y":903.5714721679688,"wires":[["a5e5a535cd62d611"],["6892cc839392e12e"]]},{"id":"e46a28208d4d0559","type":"function","z":"3586922cb708a29c","name":"skip readme commits","func":"var ignoreReadmeCommits = [];\n\nfor (var idx = 0; idx < msg.commits.length ; idx++ ) {\n    var cmt = msg.commits[idx];\n    \n    if ( !cmt.message.match(/README/i) ) {\n        if (ignoreReadmeCommits.length == 0 ) {\n            ignoreReadmeCommits.push(cmt)\n        } else {\n            var prevCmt = ignoreReadmeCommits[ignoreReadmeCommits.length-1]\n            prevCmt.parents[0].sha = cmt.sha;\n            ignoreReadmeCommits.push(cmt)\n        }\n    }\n}\n\nmsg.payload = ignoreReadmeCommits;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1131.2857360839844,"y":1269.5714492797852,"wires":[["77da03caeefa1151"]]},{"id":"37019bd5eddb6787","type":"template","z":"3586922cb708a29c","g":"a29e4b2ffcb5c3b8","name":"cssStyling","field":"cssStyling","fieldType":"msg","format":"css","syntax":"plain","template":".flow-description-text {\n  font-family: monospace;\n  font-size: 30px;\n  dominant-baseline: middle;\n}\n\n.deleted {\n  fill: rgb(120, 68, 68);\n  fill-opacity: 0.2;\n  stroke: black;\n  stroke-width: 2px;\n}\n.added {\n  fill: rgb(64, 166, 98);\n  fill-opacity: 0.4;\n  stroke: rgb(10, 255, 23);\n  stroke-width: 4px;\n}\n.changed {\n  fill: rgb(126, 97, 208);\n  fill-opacity: 0.6;\n  stroke: rgb(229, 0, 156);\n  stroke-width: 3px;\n}\n.moved {\n  fill: rgb(210, 251, 89);\n  fill-opacity: 0.3;\n  stroke: rgb(0, 50, 249);\n  stroke-width: 3px;\n}\n\n#diff-viewer{\n  overflow:scroll;\n  background-color:rgb(244, 244, 244);\n  border: 2px solid #000;\n  height:80vh;\n  display:none;\n  position:fixed;\n  top:10vh;\n  left:5vw;\n  z-index: 1000;\n  padding: 20px;\n  max-width: 90vw;\n}\n\n.parentDisable{\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: none;\n  background: #000;\n  opacity: 0.4;\n  z-index: 998;\n  height: 100%;\n  width: 100%;\n}\n\n.dv-differ {\n  background-color: rgba(244, 170, 23, 0.476);\n}\n\n.dv-removed {\n  background-color: rgb(203, 203, 38);\n}\n\n.dv-added {\n  background-color: rgb(86, 222, 120);\n}\n\n.dv-pre-elem {\n    page-break-inside: avoid;\n    font-family: monospace;\n    max-width: 100%;\n    overflow: auto;\n    display: block;\n    word-wrap: break-word;\n    margin: 0px !important;\n}\n\n#flowdownloadlinks a {\n  margin-left: 10px;\n}","output":"str","x":1028.2857666015625,"y":349.5714416503906,"wires":[["86360bec06528638"]]},{"id":"785dd28471c00fe1","type":"template","z":"3586922cb708a29c","name":"svg diff viewer html","field":"svgDiffViewer","fieldType":"msg","format":"html","syntax":"mustache","template":"<div style=\"position: fixed; top: 10px; left: 10px; z-index: 10;\">\n  Slide between commits:\n  <input style=\"width: 300px\" id=\"slider\" type=\"range\" min=\"0\" max=\"1\" step=\"1\" value=\"0\"></input>\n  Select flow tab to compare:\n  <select id=\"flowSelector\"></select>\n  {{^nopermalinks}}\n  <a style=\"display: none;\" href=\"#\" style=\"margin-left: 30px;\" target=\"_blank\" id=\"flowPerma\">permalink</a>\n  {{/nopermalinks}}\n  <span id=\"flowdownloadlinks\"></span>\n</div>\n\n<div id='svgcontainer'\n  style=\"transform: scale(0.5,0.5) translate(-2500px,-2500px) ; top: 50px; left: 10px; position: absolute; overflow: scroll; display: block; z-index: 0;\">\n\n  <svg id=\"svgelem\" width=\"5000\" height=\"5000\" viewBox=\"0 0 5000 5000\" pointer-events=\"all\" style=\"cursor: crosshair;\"\n    version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <!-- Use group elems to ensure that layering of shapes is correct, i.e. nodes always over links -->\n    <g class='container-gridlines'>\n      <g class='flowGridlines'></g>\n    </g>\n\n    {{#payload}}\n    <g class='container-diff{{ index }}'>\n      <g class='flowGridlines' style=\"display: none;\"></g>\n      <g class=\"flowDescription\"></g>\n      <g class='flowGroups'></g>\n      <g class='flowWires'></g>\n      <g class='flowNodes'></g>\n    </g>\n    {{/payload}}\n  </svg>\n</div>\n\n<div class=\"parentDisable\" onclick=\"$('#diff-viewer').hide(); $('.parentDisable').hide(); return false;\"></div>\n<div id=\"diff-viewer\">\n  <a href=\"#\" onclick=\"$('#diff-viewer').hide(); $('.parentDisable').hide(); return false;\">close</a>\n  {{^nopermalinks}}\n  <a href=\"#\" style=\"margin-left: 30px;\" target=\"_blank\" id=\"diffPerma\">permalink</a>\n  {{/nopermalinks}}\n  \n  <p>\n\n  <i style=\"font-size: 80%;\">Element</i>\n  <table border=\"1\">\n    <tr>\n      <th>Name</th>\n      <td id=\"dv-nde-name\"></td>\n    </tr>\n    <tr>\n      <th>Type</th>\n      <td id=\"dv-nde-type\"></td>\n    </tr>  \n    <tr>\n      <th>Id</th>\n      <td id=\"dv-nde-id\"></td>\n    </tr>\n  </table>\n\n  <p>\n  <i style=\"font-size: 80%;\">Comparison</i>\n  <table border=\"1\">\n    <thead>\n    <tr>\n      <th>AttrName</th>\n      <th><code id=\"dv-nde1-sha\"></code> <a id=\"dv-nde1-copy\" style=\"font-size:80%;\" href=\"#\" onclick=\"copyToClipboard(this); return false;\"><i>(export)</i></a></th>\n      <th><code id=\"dv-nde2-sha\"></code> <a id=\"dv-nde2-copy\" style=\"font-size:80%;\" href=\"#\" onclick=\"copyToClipboard(this); return false;\"><i>(export)</i></a></th>\n    </tr>\n    </thead>\n    <tbody id=\"dv-details\">\n    </tbody>\n  </table>\n</div>\n","output":"str","x":2534.28564453125,"y":707.5714111328125,"wires":[["daed23f9af9a7a6c"]]},{"id":"1a5510f92e1ca5ee","type":"change","z":"3586922cb708a29c","name":"","rules":[{"t":"set","p":"useflowviewerarrows","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":508,"y":85,"wires":[["21ec47f08d6feb1e"]]},{"id":"d285f01cd41ae3b4","type":"change","z":"3586922cb708a29c","g":"2e1f1b38844ce2e7","name":"github config: owner,branch,repo","rules":[{"t":"set","p":"owner","pt":"msg","to":"<githubusername>","tot":"str"},{"t":"set","p":"repo","pt":"msg","to":"<repository name>","tot":"str"},{"t":"set","p":"branch","pt":"msg","to":"main","tot":"str"},{"t":"set","p":"flow_filename","pt":"msg","to":"flows.json","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":997,"y":65,"wires":[["3db6633561a29ecd"]]},{"id":"ab124fd98e2bde1b","type":"link in","z":"3586922cb708a29c","g":"2e1f1b38844ce2e7","name":"github config","links":[],"x":806,"y":65,"wires":[["d285f01cd41ae3b4"]]},{"id":"3db6633561a29ecd","type":"link out","z":"3586922cb708a29c","g":"2e1f1b38844ce2e7","name":"link out 110","mode":"return","links":[],"x":1196,"y":65,"wires":[]},{"id":"86f917f3592566ad","type":"link call","z":"3586922cb708a29c","name":"","links":["ab124fd98e2bde1b"],"linkType":"static","timeout":"30","x":729,"y":543,"wires":[["4972f273743adbfb"]]},{"id":"310f9f637c3004da","type":"link call","z":"3586922cb708a29c","name":"","links":["ab124fd98e2bde1b"],"linkType":"static","timeout":"30","x":1527,"y":575,"wires":[["4116c8af6018ef85"]]},{"id":"a5e5a535cd62d611","type":"change","z":"3586922cb708a29c","g":"6737273baae3341f","name":"split 'c' parameter","rules":[{"t":"set","p":"payload","pt":"msg","to":"$split(msg.req.query.c, ',')","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1197,"y":891,"wires":[["28b17aadf4fad367"]]},{"id":"28b17aadf4fad367","type":"split","z":"3586922cb708a29c","g":"6737273baae3341f","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1217,"y":957,"wires":[["2b04bd04e951108a"]]},{"id":"dc8cfd520906621c","type":"join","z":"3586922cb708a29c","g":"6737273baae3341f","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1239,"y":1126,"wires":[["77da03caeefa1151"]]},{"id":"2b04bd04e951108a","type":"link call","z":"3586922cb708a29c","g":"6737273baae3341f","name":"","links":["dbdea53966e72031"],"linkType":"static","timeout":"30","x":1222,"y":1033,"wires":[["dc8cfd520906621c"]]},{"id":"1f1cb522b2026602","type":"catch","z":"3586922cb708a29c","g":"6737273baae3341f","name":"","scope":["2b04bd04e951108a"],"uncaught":false,"x":1300,"y":1009,"wires":[["dc8cfd520906621c"]]},{"id":"862fb9b9f97178d8","type":"http in","z":"3586922cb708a29c","d":true,"g":"47c942621515bc47","name":"","url":"/backup/:name","method":"get","upload":false,"swaggerDoc":"","x":123,"y":136,"wires":[["1a5510f92e1ca5ee"]]},{"id":"a3af27c5dee482a8","type":"http in","z":"3586922cb708a29c","d":true,"g":"47c942621515bc47","name":"","url":"/backup","method":"get","upload":false,"swaggerDoc":"","x":102,"y":85,"wires":[["1a5510f92e1ca5ee"]]},{"id":"6916041a78603a54","type":"catch","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"","scope":["0a38d39ccc80d998"],"uncaught":false,"x":1801,"y":1109,"wires":[["65a7fbf91fe9fcb8"]]},{"id":"65a7fbf91fe9fcb8","type":"function","z":"3586922cb708a29c","g":"832ad739eb4c39ef","name":"no flow file exists in this commit, empty flow","func":"msg.payload = {\n    sha: msg.commit.sha,\n    content: \"W10=\", // base64 for \"[]\" - empty flow\n    commit: msg.commit,\n    index: msg.orig_shas.indexOf(msg.commit.sha)\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2113,"y":866,"wires":[["87d9651813f2c0a3"]]},{"id":"92d09e96b522635a","type":"link out","z":"3586922cb708a29c","name":"link out 111","mode":"link","links":["83bdcfd7051291de"],"x":614.2198486328125,"y":1295.609619140625,"wires":[]},{"id":"83bdcfd7051291de","type":"link in","z":"3586922cb708a29c","g":"5fe0fca8c6017497","name":"link in 1","links":["92d09e96b522635a"],"x":339.2198486328125,"y":1064.6097412109375,"wires":[["6892cc839392e12e"]]}]