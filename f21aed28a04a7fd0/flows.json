[{"id":"f21aed28a04a7fd0","type":"tab","label":"[NodeDev] Example of Json Schema Holistic Validator","disabled":false,"info":"::: aim\n\nProivde examples of using the [JSON Schema Holistic Validator](https://flowhub.org/f/a7a81bcd7159a826)\n\n:::\n\n","env":[]},{"id":"f52f20830c550361","type":"JsonSchemaValidatorWithDocu","z":"f21aed28a04a7fd0","name":"Validate payload property","property":"payload","propertyType":"msg","checkentireobject":false,"func":"{\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"required\": [\n        \"lastName\"\n    ],\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}","info":"## Person Type\n\n`object` ([Person](definition.md))\n\n# Person Properties\n\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \"undefined#/properties/firstName\") |\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")   |\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \"undefined#/properties/age\")             |\n\n## firstName\n\nThe person's first name.\n\n`firstName`\n\n*   is optional\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-firstname.md \"undefined#/properties/firstName\")\n\n### firstName Type\n\n`string`\n\n## lastName\n\nThe person's last name.\n\n`lastName`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")\n\n### lastName Type\n\n`string`\n\n## age\n\nAge in years which must be equal to or greater than zero.\n\n`age`\n\n*   is optional\n\n*   Type: `integer`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-age.md \"undefined#/properties/age\")\n\n### age Type\n\n`integer`\n\n### age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n\n---\n## firstName Type\n\n`string`\n\n---\n## lastName Type\n\n`string`\n\n---\n## age Type\n\n`integer`\n\n## age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n","schematitle":"Person","x":813,"y":571,"wires":[["872e6d95f5c29a0a"]]},{"id":"6f78d32f39ac8f8b","type":"inject","z":"f21aed28a04a7fd0","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"lastName\":\"lastname\",\"firstName\":\"firstname\",\"something\":\"else\"}","payloadType":"json","x":471,"y":571,"wires":[["f52f20830c550361"]]},{"id":"872e6d95f5c29a0a","type":"debug","z":"f21aed28a04a7fd0","name":"debug 41","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1153,"y":570,"wires":[]},{"id":"b1c6cabdf126dce9","type":"catch","z":"f21aed28a04a7fd0","name":"","scope":null,"uncaught":false,"x":65,"y":178,"wires":[["76de224d8d942715"]]},{"id":"76de224d8d942715","type":"debug","z":"f21aed28a04a7fd0","name":"Exception will happen.","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1963,"y":178,"wires":[]},{"id":"2962c81629fa2ae6","type":"JsonSchemaValidatorWithDocu","z":"f21aed28a04a7fd0","name":"Validate entire msg object - INVALID","property":"","propertyType":"msg","checkentireobject":true,"func":"{\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"required\": [\n        \"lastName\"\n    ],\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}","info":"## Person Type\n\n`object` ([Person](definition.md))\n\n# Person Properties\n\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \"undefined#/properties/firstName\") |\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")   |\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \"undefined#/properties/age\")             |\n\n## firstName\n\nThe person's first name.\n\n`firstName`\n\n*   is optional\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-firstname.md \"undefined#/properties/firstName\")\n\n### firstName Type\n\n`string`\n\n## lastName\n\nThe person's last name.\n\n`lastName`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")\n\n### lastName Type\n\n`string`\n\n## age\n\nAge in years which must be equal to or greater than zero.\n\n`age`\n\n*   is optional\n\n*   Type: `integer`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-age.md \"undefined#/properties/age\")\n\n### age Type\n\n`integer`\n\n### age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n\n---\n## firstName Type\n\n`string`\n\n---\n## lastName Type\n\n`string`\n\n---\n## age Type\n\n`integer`\n\n## age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n","schematitle":"Person","x":850,"y":640,"wires":[[]]},{"id":"84698400fdd7b81e","type":"inject","z":"f21aed28a04a7fd0","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"lastName\":\"lastname\",\"firstName\":\"firstname\",\"something\":\"else\"}","payloadType":"json","x":468,"y":640,"wires":[["2962c81629fa2ae6"]]},{"id":"f009328e2d544749","type":"JsonSchemaValidatorWithDocu","z":"f21aed28a04a7fd0","name":"Validate entire msg object","property":"","propertyType":"msg","checkentireobject":true,"func":"{\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"required\": [\n        \"lastName\"\n    ],\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}","info":"## Person Type\n\n`object` ([Person](definition.md))\n\n# Person Properties\n\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \"undefined#/properties/firstName\") |\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")   |\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \"undefined#/properties/age\")             |\n\n## firstName\n\nThe person's first name.\n\n`firstName`\n\n*   is optional\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-firstname.md \"undefined#/properties/firstName\")\n\n### firstName Type\n\n`string`\n\n## lastName\n\nThe person's last name.\n\n`lastName`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")\n\n### lastName Type\n\n`string`\n\n## age\n\nAge in years which must be equal to or greater than zero.\n\n`age`\n\n*   is optional\n\n*   Type: `integer`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-age.md \"undefined#/properties/age\")\n\n### age Type\n\n`integer`\n\n### age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n\n---\n## firstName Type\n\n`string`\n\n---\n## lastName Type\n\n`string`\n\n---\n## age Type\n\n`integer`\n\n## age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n","schematitle":"Person","x":808,"y":699,"wires":[["7fc092fa3249aeea"]]},{"id":"998e7272ec46678d","type":"inject","z":"f21aed28a04a7fd0","name":"","props":[{"p":"lastName","v":"lastName","vt":"str"},{"p":"firstName","v":"firstName","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":466,"y":699,"wires":[["f009328e2d544749"]]},{"id":"7fc092fa3249aeea","type":"debug","z":"f21aed28a04a7fd0","name":"debug 42","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1151,"y":699,"wires":[]},{"id":"d13b572d144c347a","type":"inject","z":"f21aed28a04a7fd0","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":463,"y":867,"wires":[["7c49f7915f2a7be5"]]},{"id":"7c49f7915f2a7be5","type":"change","z":"f21aed28a04a7fd0","name":"set value in the flow","rules":[{"t":"set","p":"lastName","pt":"flow","to":"lastName","tot":"str"},{"t":"set","p":"firstName","pt":"flow","to":"firstName","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":687,"y":867,"wires":[["26f640f94183894f"]]},{"id":"26f640f94183894f","type":"JsonSchemaValidatorWithDocu","z":"f21aed28a04a7fd0","name":"Validate entire flow object","property":"","propertyType":"flow","checkentireobject":true,"func":"{\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"required\": [\n        \"lastName\"\n    ],\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}","info":"## Person Type\n\n`object` ([Person](definition.md))\n\n# Person Properties\n\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \"undefined#/properties/firstName\") |\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")   |\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \"undefined#/properties/age\")             |\n\n## firstName\n\nThe person's first name.\n\n`firstName`\n\n*   is optional\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-firstname.md \"undefined#/properties/firstName\")\n\n### firstName Type\n\n`string`\n\n## lastName\n\nThe person's last name.\n\n`lastName`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-lastname.md \"undefined#/properties/lastName\")\n\n### lastName Type\n\n`string`\n\n## age\n\nAge in years which must be equal to or greater than zero.\n\n`age`\n\n*   is optional\n\n*   Type: `integer`\n\n*   cannot be null\n\n*   defined in: [Person](definition-properties-age.md \"undefined#/properties/age\")\n\n### age Type\n\n`integer`\n\n### age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n\n---\n## firstName Type\n\n`string`\n\n---\n## lastName Type\n\n`string`\n\n---\n## age Type\n\n`integer`\n\n## age Constraints\n\n**minimum**: the value of this number must greater than or equal to: `0`\n","schematitle":"Person","x":950,"y":867,"wires":[["b98dac021ab9283d"]]},{"id":"b98dac021ab9283d","type":"debug","z":"f21aed28a04a7fd0","name":"debug 43","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1178,"y":867,"wires":[]},{"id":"4077e35da6690779","type":"function","z":"f21aed28a04a7fd0","name":"function 4","func":"var cloneFlowOrGlobal = (ste) => {\n    var rVal = {};\n\n    ste.keys().forEach( (nme) => {\n        rVal[nme] = ste.get(nme)\n    })\n\n    return rVal;\n}\n\nconsole.error(cloneFlowOrGlobal(flow))\nconsole.error(cloneFlowOrGlobal(global))\n\nvar flowClone = {}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":982,"y":1022,"wires":[[]]},{"id":"ccd4a151307319a0","type":"inject","z":"f21aed28a04a7fd0","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":639,"y":1024,"wires":[["4077e35da6690779"]]}]