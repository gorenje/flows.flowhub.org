[{"id":"a7a81bcd7159a826","type":"tab","label":"[NodeDev] JSON Schema Validation + Documentation","disabled":false,"info":"::: aim\n\nJSON schema validation but on the top-level objects, other validation nodes only validate a property on `msg`.\n\n:::\n\n::: requirements\n\n- [nodedev package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-nodedev)\n- [development flow for Node-RED installation](https://flowhub.org/f/d0506e991d512ace) - can be installed by using <a class=\"ahl-group-only\" data-ids=\"2e6d2e0a780e52cb\">FlowHubPull node</a>.\n\n:::\n\n::: background\n\nThis is a fork of [node-red-contrib-full-msg-json-schema-validation](https://github.com/oarroyog/node-red-contrib-json-schema) with some changes:\n\n- validate on entire objects\n- generate documentation using [jsonschema2md](https://github.com/adobe/jsonschema2md)\n- validate the environment to ensure that specific values are set\n\n:::\n\n### GitHub\n\n[Repo](https://github.com/gorenje/node-red-contrib-json-schema) for this codebase.\n\n### Related Flows\n\n- [Schema validation comparison](https://flowhub.org/f/36690f145d5af6ca)\n\n","env":[]},{"id":"54cbc9bb26bbc601","type":"group","z":"a7a81bcd7159a826","name":"command central","style":{"fill":"#addb7b","label":true},"nodes":["6a7ff81b121050f6"],"x":258,"y":251.71434211730957,"w":352,"h":82},{"id":"b72a30574c356480","type":"group","z":"a7a81bcd7159a826","name":"randomise package name for quicker local development","style":{"label":true},"nodes":["d8497787757b2cdc","f4c8a9f0993fed0a","4a492c2e9ec5855e"],"x":1278.4286499023438,"y":239.00006103515625,"w":705.9999465942383,"h":94},{"id":"2e6d2e0a780e52cb","type":"group","z":"a7a81bcd7159a826","name":"Flow required to use this flow.","style":{"label":true},"nodes":["3ec773129868ccff"],"x":256.28570556640625,"y":378.2857360839844,"w":472,"h":82},{"id":"590ac7b2f8d401c6","type":"PkgFile","z":"a7a81bcd7159a826","name":"package.json","filename":"package.json","format":"json","syntax":"mustache","template":"{\n  \"bugs\": {\n    \"url\": \"https://github.com/gorenje/node-red-contrib-json-schema/issues\"\n  },\n  \"bundleDependencies\": false,\n  \"dependencies\": {\n    \"ajv\": \"^8.12.0\",\n    \"global\": \"^4.3.2\",\n    \"@adobe/jsonschema2md\": \"^7.1.5\"\n  },\n  \"deprecated\": false,\n  \"description\": \"JSON Schema validator for Node Red\",\n  \"homepage\": \"https://github.com/gorenje/node-red-contrib-json-schema#readme\",\n  \"keywords\": [\n    \"json\",\n    \"node\",\n    \"node-red\",\n    \"schema\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"name\": \"{{{ pname }}}\",\n  \"node-red\": {\n    \"nodes\": {\n      \"json-schema\": \"schema.js\"\n    }\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/gorenje/node-red-contrib-json-schema\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"version\": \"{{ pversion }}\"\n}\n","output":"str","x":1207,"y":569,"wires":[["f4aaf6c29b1a68e8"]]},{"id":"f4aaf6c29b1a68e8","type":"PkgFile","z":"a7a81bcd7159a826","name":"LICENSE","filename":"LICENSE","format":"text","syntax":"mustache","template":"The MIT License (MIT)\n\nCopyright (c) 2016 @AvilaCwb\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","output":"str","x":1207,"y":619,"wires":[["36f543090ff5acc5"]]},{"id":"36f543090ff5acc5","type":"PkgFile","z":"a7a81bcd7159a826","name":"README.md","filename":"README.md","format":"markdown","syntax":"mustache","template":"**Built upon [node-red-contrib-full-msg-json-schema-validation](https://github.com/oarroyog/node-red-contrib-json-schema), origial readme follows**\n\nThis validation node does two more things:\n\n- valid the *entire* object, previously it was only possible to validate a property on the object\n- generates documentation of the schema and replaces the info details of the node with the documentation\n\nSome more details are available in [flow](https://flowhub.org/f/36690f145d5af6ca) that maintains this package.\n\nUnlike the original, instead of two outputs this has only one. Previously the two outputs where used to diverge messages that where valid and those that weren't. Instead this throws an exception that can be caught if validation fails. For the author this makes more sense since a validation that fails represents an unknown state of the system, likely to cause failure - fail fast, fail early is the motto.\n\nDocumentation is created using [jsonschema2md](https://github.com/adobe/jsonschema2md) and stored in the nodes *info* box - **existing content will be replaced**. The intention is to copy and paste that documentation to somewhere else. The info box is a good place to put it in the first place, alternative would be a debug message of some sort.\n\nTo generate the documentation, use the button in the property panel:\n\n![img](https://cdn.openmindmap.org/content/1695920371650_Screen_Shot_2023-09-28_at_18.58.34.png)\n\nThe schema can be pasted into the editor pane also located in the property panel:\n\n![img](https://cdn.openmindmap.org/content/1695920460280_Screen_Shot_2023-09-28_at_19.00.38.png)\n\nAn example flow is included and can also be viewed [here](https://flowhub.org/f/f21aed28a04a7fd0).\n\n## Validation methods\n\nAs with the original, validation is done using the [ajv](https://www.npmjs.com/package/ajv) library, just an updated version.\n\nValidation of `flow` and `global` is perhaps not the best since it makes a copy of [those two](https://github.com/gorenje/node-red-contrib-json-schema/blob/b648c215a79ca07c0df9ec0b1e4d92e579188dd5/schema.js#L44-L58). The environment is validating using [`process.env`](https://github.com/gorenje/node-red-contrib-json-schema/blob/b648c215a79ca07c0df9ec0b1e4d92e579188dd5/schema.js#L55) - this too might not be the best way.\n\n---\n\n# node-red-contrib-json-full-schema-validator\nJSON Full Schema validator for Node Red is pretty easy to use.\nJust open node properties and choose which property object wants to validate and paste JSON Schema\n- OK will returned in first response\n- KO will returned in second response. Error object with explanation will added in msg\n\n**JSON Schema:**\n\n{\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"required\":[\"lastName\"],\n  \"properties\": {\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's first name.\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's last name.\"\n    },\n    \"age\": {\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  }\n}\n\nExamples:\n- OK \nmsg.payload= \n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"age\": 1\n};\n\n- KO\nmsg.payload= \n{\n  \"firstName\": \"John\",\n  \"age\": 1\n};","output":"str","x":1207,"y":669,"wires":[["8f0ef46b0bd33ee7"]]},{"id":"8f0ef46b0bd33ee7","type":"PkgFile","z":"a7a81bcd7159a826","name":"schema.html","filename":"schema.html","format":"html","syntax":"plain","template":"<script type=\"text/javascript\">\n    RED.nodes.registerType('JsonSchemaValidatorWithDocu', {\n        category: 'function',\n        inputs: 1,\n        outputs: 1,\n        color: \"#addb7b\",\n        icon: \"font-awesome/fa-check-circle-o\",\n        paletteLabel: \"Json Schema Holistic Validator\",\n        defaults: {\n            name: {value: \"\" },\n            property: {\n                value:\"payload\", \n                required:false, \n            },\n            propertyType: { value:\"msg\" },\n            checkentireobject: { value: false },\n            func: { value: \"\" },\n            info: { value: \"\" },\n            schematitle: { value: \"\" },\n        },\n        label: function() {\n            return this.name || this.schematitle || this._def.paletteLabel || this.type;\n        },\n        oneditprepare: function() {\n            var that = this;\n            $(\"#node-input-property\").typedInput({\n                default:this.propertyType||'msg',\n                types:['msg','flow','global','jsonata','env']\n            });\n\n            this.editor = RED.editor.createEditor({\n                id: 'node-input-func-editor',\n                mode: 'ace/mode/json',\n                value: $(\"#node-input-func\").val()\n            });\n\n            RED.library.create({\n                url: \"functions\", // where to get the data from\n                type: \"schema\", // the type of object the library is for\n                editor: this.editor, // the field name the main text body goes to\n                mode: \"ace/mode/json\",\n                fields: ['name']\n            });\n            this.editor.focus();\n\n            $('#node-input-checkentireobject').on('change', () => {\n                if ( $('#node-input-checkentireobject').is(\":checked\") ) {\n                    $(\"#node-input-property\").typedInput('value', \"\")\n                } else {\n                    $(\"#node-input-property\").typedInput('value', \"payload\");\n                }\n            });\n            \n            var nodeid = this.id;\n            \n            $('#node-input-generate-md-but').on('click', (e) => {\n                e.preventDefault();\n                \n                $.ajax({\n                    url:         \"JsonSchemaValidatorWithDocu/\" + nodeid,\n                    type:        \"POST\",\n                    contentType: \"application/json; charset=utf-8\",\n                    data:        that.editor.getValue(),\n\n                    success: function (resp) {\n                      $(\"#node-input-info\").val( resp.md.markdown.map( (d) => { return d.content }).join(\"\\n---\\n\") );\n                      $(\"#node-input-schematitle\").val( resp.md.schema && resp.md.schema[0] && resp.md.schema[0].content && resp.md.schema[0].content.title );\n\n                      RED.notify(\"JsonSchemaValidatorWithDocu Schema update info field\", {\n                        type: \"success\",\n                        id: nodeid,\n                        timeout: 3000\n                      });\n                    },\n\n                    error: function (jqXHR, textStatus, errorThrown) {\n                        if (jqXHR.status == 404) {\n                            RED.notify(\"Node has not yet been deployed, please deploy.\", \"error\");\n                        } else if (jqXHR.status == 405) {\n                            RED.notify(\"Not Allowed.\", \"error\");\n                        } else {\n                          RED.notify(\"JsonSchemaValidatorWithDocu Schema Invalid: \" +\n                                textStatus, {\n                            type: \"error\",\n                            id: nodeid,\n                            timeout: 3000\n                          })\n                        }\n                    }\n                })\n            });\n        },\n\n        oneditsave: function() {\n            var annot = this.editor.getSession().getAnnotations();\n            this.noerr = 0;\n            $(\"#node-input-noerr\").val(0);\n            for (var k = 0; k < annot.length; k++) {\n                if (annot[k].type === \"error\") {\n                    $(\"#node-input-noerr\").val(annot.length);\n                    this.noerr = annot.length;\n                }\n            }\n            \n            $(\"#node-input-func\").val(this.editor.getValue());\n            this.editor.destroy();\n            delete this.editor;\n\n            this.propertyType = $(\"#node-input-property\").typedInput('type');\n            $(\"#node-input-propertyType\").val(this.propertyType);\n        },\n\n        oneditresize: function(size) {\n            var rows = $(\"#dialog-form>div:not(.node-text-editor-row)\");\n            var height = $(\"#dialog-form\").height();\n            for (var i = 0; i < rows.size(); i++) {\n                height -= $(rows[i]).outerHeight(true);\n            }\n            var editorRow = $(\"#dialog-form>div.node-text-editor-row\");\n            height -= (parseInt(editorRow.css(\"marginTop\")) + parseInt(editorRow.css(\"marginBottom\")));\n            $(\".node-text-editor\").css(\"height\", height + \"px\");\n            this.editor.resize();\n        }\n    });\n</script>\n\n<script type=\"text/x-red\" data-template-name=\"JsonSchemaValidatorWithDocu\">\n\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\"/>\n    </div>\n\n    <div class=\"form-row\">\n         <button id=\"node-input-generate-md-but\"\n                 class=\"red-ui-button\">Replace node Info with Schema Documentation</button>\n         <input type=\"hidden\" id=\"node-input-info\"/>\n         <input type=\"hidden\" id=\"node-input-schematitle\"/>\n    </div>\n    \n    <div class=\"form-row\">\n        <label for=\"node-input-property\">Property</label>\n        <input type=\"text\" id=\"node-input-property\" style=\"width: 100%\"/>\n\t\t<input type=\"hidden\" id=\"node-input-propertyType\"/>\n    </div>\n\n    <div class=\"form-row\">\n        <label for=\"node-input-checkentireobject\" style=\"min-width: 160px;\">\n          Validate entire object?\n        </label>\n        <input type=\"checkbox\" id=\"node-input-checkentireobject\" style=\"display:inline-block; width:15px; vertical-align:baseline;\">\n    </div>\n\n    <div class=\"form-row\" style=\"margin-bottom: 0px;\">\n        <label for=\"node-input-func\"><i class=\"fa fa-wrench\"></i> JSON Schema</label>\n        <input type=\"hidden\" id=\"node-input-func\" autofocus=\"autofocus\"/>\n        <input type=\"hidden\" id=\"node-input-noerr\"/>\n    </div>\n    \n    <div class=\"form-row node-text-editor-row\">\n        <div style=\"height: 250px;\" class=\"node-text-editor\" id=\"node-input-func-editor\"></div>\n    </div>\n</script>\n\n<script type=\"text/x-red\" data-help-name=\"JsonSchemaValidatorWithDocu\">\n    <p>JSON Schema validator</p>\n    <p>Validate input based on schema. Schema can also be passed in as JSON object on `msg.schema`. If validation fails, an exception is raised.</p>\n</script>","output":"str","x":1207,"y":719,"wires":[["991b28b4d086c904"]]},{"id":"991b28b4d086c904","type":"PkgFile","z":"a7a81bcd7159a826","name":"schema.js","filename":"schema.js","format":"javascript","syntax":"plain","template":"module.exports = function (RED) {\n    \"use strict\";\n    function JsonSchemaValidator(n) {\n        RED.nodes.createNode(this, n);\n        this.func = n.func;\n        this.name = n.name;\n        this.property = n.property;\n        this.propertyType = n.propertyType;\n        this.checkentireobject = n.checkentireobject;\n\n        var node = this;\n\n        var process = require('process');\n        var Ajv = require('ajv');\n\n        var ajv = new Ajv({\n            allErrors: true,\n            messages: true,\n            allowUnionTypes: true\n        });\n\n        node.on('input', function (msg, send, done) {\n            try {\n                var schema = typeof node.func === 'string' && node.func.trim().length ? JSON.parse(node.func) : typeof msg.schema === 'string' ? JSON.parse(msg.schema) : msg.schema;                \n                var validate = ajv.compile(schema);\n\n                var runValidate = (prop) => {\n                    var valid = validate(prop);\n\n                    if (!valid) {\n                        msg['error'] = validate.errors;\n                        done(\"validation errors\", msg)\n                    }\n                    else {\n                        delete msg.schema;\n                        send(msg);\n                        done()\n                    }\n                };\n\n                if (node.checkentireobject) {\n                    var obj = msg;\n\n                    var flowOrGlobalToHash = (ste) => {\n                        var rVal = {};\n\n                        ste.keys().forEach((nme) => {\n                            rVal[nme] = ste.get(nme)\n                        })\n\n                        return rVal;\n                    }\n\n                    switch (node.propertyType) {\n                        case \"env\":    obj = process.env;  break;\n                        case \"msg\":    obj = msg;          break;\n                        case 'flow':   obj = flowOrGlobalToHash(node.context().flow);   break;\n                        case 'global': obj = flowOrGlobalToHash(node.context().global); break;\n\n                        default:\n                            done(\"unknown property type '\" + node.propertyType + \"' to be check entirely.\", msg);\n                            return;\n                    }\n\n                    runValidate(obj)\n                } else {\n                    var prop = RED.util.evaluateNodeProperty(node.property, node.propertyType, node, msg);\n\n                    if (prop !== undefined) {\n                        runValidate(prop)\n                    } else {\n                        done(\"prop undefined\", msg)\n                    }\n                }\n            } catch (err) {\n                done(\"failed to scan schema\", msg);\n            }\n        });\n    }\n    RED.nodes.registerType(\"JsonSchemaValidatorWithDocu\", JsonSchemaValidator);\n\n    RED.httpAdmin.post(\"/JsonSchemaValidatorWithDocu/:id\",\n        RED.auth.needsPermission(\"JsonSchemaValidatorWithDocu.write\"),\n        (req, res) => {\n            var node = RED.nodes.getNode(req.params.id);\n            if (node != null) {\n                try {\n                    if (req.body && node.type == \"JsonSchemaValidatorWithDocu\") {\n                        import('@adobe/jsonschema2md').then( (module) => {\n                            const markdown = module.jsonschema2md(req.body, {\n                                includeReadme: false,\n                            });\n\n                            res.status(200).send({\n                                md: markdown\n                            })\n                        }).catch(err => {\n                            console.error(err);\n                            res.status(500).send(err.toString());\n                            node.error(\"SchemaDocu: Submission failed: \" +\n                                err.toString())\n                        })                    \n                    } else {\n                        res.sendStatus(404);\n                    }\n                } catch (err) {\n                    console.error(err);\n                    res.status(500).send(err.toString());\n                    node.error(\"JsonSchemaValid: Submission failed: \" +\n                        err.toString())\n                }\n            } else {\n                res.sendStatus(404);\n            }\n        });\n};\n","output":"str","x":1207,"y":769,"wires":[["fe9cb7392415adea"]]},{"id":"3ec773129868ccff","type":"FlowHubPull","z":"a7a81bcd7159a826","g":"2e6d2e0a780e52cb","name":"","notab":false,"flowid":"d0506e991d512ace","flowname":"[Introspection] Develop Node-RED nodes in Node-RED","flowrevision":"","x":492.28570556640625,"y":419.2857360839844,"wires":[[]]},{"id":"6a7ff81b121050f6","type":"inject","z":"a7a81bcd7159a826","g":"54cbc9bb26bbc601","name":"set package details and actions here","props":[{"p":"pname","v":"@gregoriusrippenstein/node-red-contrib-validation-and-documentation","vt":"str"},{"p":"pversion","v":"0.0.1","vt":"str"},{"p":"noderedinstall","v":"true","vt":"bool"},{"p":"gitcommit","v":"false","vt":"bool"},{"p":"npmpublish","v":"false","vt":"bool"},{"p":"npmunpublish","v":"false","vt":"bool"},{"p":"randompackagename","v":"false","vt":"bool"},{"p":"commit_message","v":"readme update","vt":"str"},{"p":"npmotp","v":"111999","vt":"str"},{"p":"githubowner","v":"gorenje","vt":"str"},{"p":"githubrepo","v":"node-red-contrib-json-schema","vt":"str"},{"p":"githubbranch","v":"main","vt":"str"},{"p":"githubauthor","v":"Gerrit Riessen","vt":"str"},{"p":"githubauthoremail","v":"gerrit@openmindmap.org","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":444,"y":292.71434211730957,"wires":[["f4c8a9f0993fed0a"]]},{"id":"d8497787757b2cdc","type":"change","z":"a7a81bcd7159a826","g":"b72a30574c356480","name":"","rules":[{"t":"set","p":"pname","pt":"msg","to":"$$.pname & $substring(\"\"&$random(),2)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1878.428596496582,"y":280.00006103515625,"wires":[["590ac7b2f8d401c6"]]},{"id":"f4c8a9f0993fed0a","type":"switch","z":"a7a81bcd7159a826","g":"b72a30574c356480","name":"randompackagename","property":"randompackagename","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"false","repair":false,"outputs":2,"x":1404.4286499023438,"y":292.00006103515625,"wires":[["4a492c2e9ec5855e"],["590ac7b2f8d401c6"]]},{"id":"4a492c2e9ec5855e","type":"switch","z":"a7a81bcd7159a826","g":"b72a30574c356480","name":"noderedinstall","property":"noderedinstall","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"false","repair":false,"outputs":2,"x":1649.428596496582,"y":286,"wires":[["d8497787757b2cdc"],["590ac7b2f8d401c6"]]},{"id":"d7d542898cd0217b","type":"link out","z":"a7a81bcd7159a826","name":"link out 115","mode":"link","links":["963dfb765b0d9849"],"x":1849,"y":769,"wires":[]},{"id":"fe9cb7392415adea","type":"PkgFile","z":"a7a81bcd7159a826","name":"validate-test.json","filename":"examples/validate-test.json","format":"json","syntax":"plain","template":"[\n    {\n        \"id\": \"b1c6cabdf126dce9\",\n        \"type\": \"catch\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"\",\n        \"scope\": null,\n        \"uncaught\": false,\n        \"x\": 65,\n        \"y\": 178,\n        \"wires\": [\n            [\n                \"76de224d8d942715\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"76de224d8d942715\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Exception will happen.\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1963,\n        \"y\": 178,\n        \"wires\": []\n    },\n    {\n        \"id\": \"03446b351d684afc\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Validate global object\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"62e022983d68c760\",\n            \"33064364f81d1760\",\n            \"3a50e82e36e9db6a\",\n            \"08130f8a829210c2\",\n            \"7e9c9f6807e4d84d\",\n            \"0c0744629fd5ba7d\",\n            \"6bf54b386241dc22\"\n        ],\n        \"x\": 555,\n        \"y\": 834,\n        \"w\": 927,\n        \"h\": 148\n    },\n    {\n        \"id\": \"62e022983d68c760\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 661,\n        \"y\": 875,\n        \"wires\": [\n            [\n                \"33064364f81d1760\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"33064364f81d1760\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"set value in the global\",\n        \"rules\": [\n            {\n                \"t\": \"set\",\n                \"p\": \"lastName\",\n                \"pt\": \"global\",\n                \"to\": \"lastName\",\n                \"tot\": \"str\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"global\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 885,\n        \"y\": 875,\n        \"wires\": [\n            [\n                \"3a50e82e36e9db6a\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"3a50e82e36e9db6a\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"Validate entire global object\",\n        \"property\": \"\",\n        \"propertyType\": \"global\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 1158,\n        \"y\": 875,\n        \"wires\": [\n            [\n                \"08130f8a829210c2\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"08130f8a829210c2\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"debug 44\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1376,\n        \"y\": 875,\n        \"wires\": []\n    },\n    {\n        \"id\": \"7e9c9f6807e4d84d\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 666,\n        \"y\": 941,\n        \"wires\": [\n            [\n                \"0c0744629fd5ba7d\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"0c0744629fd5ba7d\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"delete lastName from flow context\",\n        \"rules\": [\n            {\n                \"t\": \"delete\",\n                \"p\": \"lastName\",\n                \"pt\": \"global\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"global\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 930,\n        \"y\": 941,\n        \"wires\": [\n            [\n                \"6bf54b386241dc22\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"6bf54b386241dc22\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"Validate entire global object - INVALID\",\n        \"property\": \"\",\n        \"propertyType\": \"global\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 1293,\n        \"y\": 941,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"431a6e063be5a041\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Validate flow object\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"d13b572d144c347a\",\n            \"7c49f7915f2a7be5\",\n            \"26f640f94183894f\",\n            \"b98dac021ab9283d\",\n            \"2798f0860e522384\",\n            \"952b9066362474c1\",\n            \"c322d887bf54ec1f\"\n        ],\n        \"x\": 555,\n        \"y\": 614.5,\n        \"w\": 927,\n        \"h\": 148\n    },\n    {\n        \"id\": \"d13b572d144c347a\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 661,\n        \"y\": 655.5,\n        \"wires\": [\n            [\n                \"7c49f7915f2a7be5\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"7c49f7915f2a7be5\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"set value in the flow\",\n        \"rules\": [\n            {\n                \"t\": \"set\",\n                \"p\": \"lastName\",\n                \"pt\": \"flow\",\n                \"to\": \"lastName\",\n                \"tot\": \"str\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"flow\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 885,\n        \"y\": 655.5,\n        \"wires\": [\n            [\n                \"26f640f94183894f\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"26f640f94183894f\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"Validate entire flow object\",\n        \"property\": \"\",\n        \"propertyType\": \"flow\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 1148,\n        \"y\": 655.5,\n        \"wires\": [\n            [\n                \"b98dac021ab9283d\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"b98dac021ab9283d\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"debug 43\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1376,\n        \"y\": 655.5,\n        \"wires\": []\n    },\n    {\n        \"id\": \"2798f0860e522384\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 666,\n        \"y\": 721.5,\n        \"wires\": [\n            [\n                \"952b9066362474c1\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"952b9066362474c1\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"delete lastName from flow context\",\n        \"rules\": [\n            {\n                \"t\": \"delete\",\n                \"p\": \"lastName\",\n                \"pt\": \"flow\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"flow\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 930,\n        \"y\": 721.5,\n        \"wires\": [\n            [\n                \"c322d887bf54ec1f\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"c322d887bf54ec1f\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"Validate entire flow object - INVALID\",\n        \"property\": \"\",\n        \"propertyType\": \"flow\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 1293,\n        \"y\": 721.5,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"95cbe732c5e8768a\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Validate msg object\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"f52f20830c550361\",\n            \"6f78d32f39ac8f8b\",\n            \"872e6d95f5c29a0a\",\n            \"2962c81629fa2ae6\",\n            \"84698400fdd7b81e\",\n            \"f009328e2d544749\",\n            \"998e7272ec46678d\",\n            \"7fc092fa3249aeea\"\n        ],\n        \"x\": 555,\n        \"y\": 332,\n        \"w\": 889,\n        \"h\": 211\n    },\n    {\n        \"id\": \"f52f20830c550361\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"Validate payload property\",\n        \"property\": \"payload\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": false,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 998,\n        \"y\": 374,\n        \"wires\": [\n            [\n                \"872e6d95f5c29a0a\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"6f78d32f39ac8f8b\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"{\\\"lastName\\\":\\\"lastname\\\",\\\"firstName\\\":\\\"firstname\\\",\\\"something\\\":\\\"else\\\"}\",\n        \"payloadType\": \"json\",\n        \"x\": 656,\n        \"y\": 374,\n        \"wires\": [\n            [\n                \"f52f20830c550361\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"872e6d95f5c29a0a\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"debug 41\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"false\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1338,\n        \"y\": 373,\n        \"wires\": []\n    },\n    {\n        \"id\": \"2962c81629fa2ae6\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"Validate entire msg object - INVALID\",\n        \"property\": \"\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 1035,\n        \"y\": 443,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"84698400fdd7b81e\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"{\\\"lastName\\\":\\\"lastname\\\",\\\"firstName\\\":\\\"firstname\\\",\\\"something\\\":\\\"else\\\"}\",\n        \"payloadType\": \"json\",\n        \"x\": 653,\n        \"y\": 443,\n        \"wires\": [\n            [\n                \"2962c81629fa2ae6\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"f009328e2d544749\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"Validate entire msg object\",\n        \"property\": \"\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\",\n        \"schematitle\": \"Person\",\n        \"x\": 993,\n        \"y\": 502,\n        \"wires\": [\n            [\n                \"7fc092fa3249aeea\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"998e7272ec46678d\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"lastName\",\n                \"v\": \"lastName\",\n                \"vt\": \"str\"\n            },\n            {\n                \"p\": \"firstName\",\n                \"v\": \"firstName\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"x\": 651,\n        \"y\": 502,\n        \"wires\": [\n            [\n                \"f009328e2d544749\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"7fc092fa3249aeea\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"debug 42\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1336,\n        \"y\": 502,\n        \"wires\": []\n    }\n]","output":"str","x":1328,"y":865,"wires":[["d7d542898cd0217b"]]}]