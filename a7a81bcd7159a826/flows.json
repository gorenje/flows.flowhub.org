[{"id":"a7a81bcd7159a826","type":"tab","label":"[NodeDev] JSON Schema Validation + Documentation","disabled":false,"info":"::: aim\n\nJSON schema validation but on the top-level objects, other validation nodes only validate a property on `msg`.\n\n:::\n\n::: requirements\n\n- [nodedev package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-nodedev)\n- [development flow for Node-RED installation](https://flowhub.org/f/d0506e991d512ace) - can be installed by using <a class=\"ahl-group-only\" data-ids=\"2e6d2e0a780e52cb\">FlowHubPull node</a>.\n\n:::\n\n::: background\n\nThis is a fork of [node-red-contrib-full-msg-json-schema-validation](https://github.com/oarroyog/node-red-contrib-json-schema) with some changes:\n\n- validate on entire objects\n- generate documentation using [jsonschema2md](https://github.com/adobe/jsonschema2md)\n- validate the environment to ensure that specific values are set\n\n:::\n\n::: artifacts\n\n- [NPMjs Package page](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-validation-and-documentation)\n- [Node-RED node package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-validation-and-documentation)\n- [GitHub Repo](https://github.com/gorenje/node-red-contrib-json-schema)\n\n:::\n\n### Related Flows\n\n- [Schema validation comparison](https://flowhub.org/f/36690f145d5af6ca)\n\n","env":[]},{"id":"2e6d2e0a780e52cb","type":"group","z":"a7a81bcd7159a826","name":"Step 1: Install development flow","style":{"label":true},"nodes":["3ec773129868ccff"],"x":236,"y":278.3571710586548,"w":372,"h":82},{"id":"84a9e437660e4403","type":"group","z":"a7a81bcd7159a826","name":"Example flow to test node with","style":{"label":true},"nodes":["c2be3f2b969670f6"],"x":236,"y":481,"w":452,"h":82},{"id":"432bebdef03a3208","type":"group","z":"a7a81bcd7159a826","name":"Step 2: Install package locally","style":{"label":true,"fill":"#c8e7a7","fill-opacity":"0.62"},"nodes":["7ca4346867721458"],"x":236,"y":379.6785855293274,"w":272,"h":82},{"id":"590ac7b2f8d401c6","type":"PkgFile","z":"a7a81bcd7159a826","name":"package.json","filename":"package.json","format":"json","syntax":"mustache","template":"{\n  \"bugs\": {\n    \"url\": \"https://github.com/gorenje/node-red-contrib-json-schema/issues\"\n  },\n\n  \"bundleDependencies\": false,\n  \"dependencies\": {\n    \"ajv\": \"^8.12.0\",\n    \"global\": \"^4.3.2\",\n    \"@adobe/jsonschema2md\": \"^7.1.5\"\n  },\n\n  \"deprecated\": false,\n  \"description\": \"{{{ pdescription }}}\",\n  \"homepage\": \"https://github.com/gorenje/node-red-contrib-json-schema#readme\",\n  \"keywords\": [\n    \"json\",\n    \"node\",\n    \"node-red\",\n    \"schema\"\n  ],\n  \n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"name\": \"{{{ pname }}}\",\n  \"version\": \"{{ pversion }}\",\n  \"node-red\": {\n    \"version\": \">=3.0.0\",\n    \"nodes\": {\n      \"json-schema\": \"schema.js\"\n    }\n  },\n\n  \"engines\": {\n     \"node\": \">=8\"\n  },\n\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/gorenje/node-red-contrib-json-schema\"\n  },\n\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  }\n}\n","output":"str","x":1207,"y":569,"wires":[["f4aaf6c29b1a68e8"]]},{"id":"f4aaf6c29b1a68e8","type":"PkgFile","z":"a7a81bcd7159a826","name":"LICENSE","filename":"LICENSE","format":"text","syntax":"mustache","template":"The MIT License (MIT)\n\nCopyright (c) 2016 @AvilaCwb\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","output":"str","x":1207,"y":619,"wires":[["36f543090ff5acc5"]]},{"id":"36f543090ff5acc5","type":"PkgFile","z":"a7a81bcd7159a826","name":"README.md","filename":"README.md","format":"markdown","syntax":"mustache","template":"**Built upon [node-red-contrib-full-msg-json-schema-validation](https://github.com/oarroyog/node-red-contrib-json-schema), origial readme follows**\n\nThis validation node does two more things:\n\n- valid the *entire* object, previously it was only possible to validate a property on the object\n- generates documentation of the schema and replaces the info details of the node with the documentation\n\nSome more details are available at the comparison [flow](https://flowhub.org/f/36690f145d5af6ca) and the forum [discussion](https://discourse.nodered.org/t/requiring-a-msg-structure-enforcing-the-presence-of-fields-and-attributes/81432).\n\nUnlike the original, instead of two outputs this has only one. Previously the two outputs where used to diverge messages that where valid and those that weren't. Instead this throws an exception that can be caught if validation fails. For the author this makes more sense since a validation that fails represents an unknown state of the system, likely to cause failure - fail fast, fail early is the motto.\n\nDocumentation is created using [jsonschema2md](https://github.com/adobe/jsonschema2md) and stored in the nodes *info* box - **existing content will be replaced**. The intention is to copy and paste that documentation to somewhere else. The info box is a good place to put it in the first place, alternative would be a debug message of some sort.\n\nTo generate the documentation, use the button in the property panel:\n\n![img](https://cdn.openmindmap.org/content/1695920371650_Screen_Shot_2023-09-28_at_18.58.34.png)\n\nThe schema can be pasted into the editor pane also located in the property panel:\n\n![img](https://cdn.openmindmap.org/content/1695920460280_Screen_Shot_2023-09-28_at_19.00.38.png)\n\n## Documentation\n\nDocumentation can be found in the description panel and from there copied:\n\n![img](https://cdn.openmindmap.org/content/1695985694935_Screen_Shot_2023-09-29_at_13.07.16.png)\n\nThe markdown is rendered in the info box of the node:\n\n![img](https://cdn.openmindmap.org/content/1695985680328_Screen_Shot_2023-09-29_at_13.07.25.png)\n\n## Examples\n\nAn example flow is included and can also be viewed [here](https://flowhub.org/f/f21aed28a04a7fd0).\n\n## Validation methods\n\nAs with the original, validation is done using the [ajv](https://www.npmjs.com/package/ajv) library, just an updated version.\n\nValidation of `flow` and `global` is perhaps not the best since it makes a copy of [those two](https://github.com/gorenje/node-red-contrib-json-schema/blob/b648c215a79ca07c0df9ec0b1e4d92e579188dd5/schema.js#L44-L58). The environment is validating using [`process.env`](https://github.com/gorenje/node-red-contrib-json-schema/blob/b648c215a79ca07c0df9ec0b1e4d92e579188dd5/schema.js#L55) - this too might not be the best way.\n\n## Artifacts\n\n- [Flow that maintains this node](https://flowhub.org/f/a7a81bcd7159a826)\n- [GitHub repo](https://github.com/gorenje/node-red-contrib-json-schema)\n- [NPMjs node page](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-validation-and-documentation)\n- [Node-RED Node package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-validation-and-documentation)\n\n---\n\n# node-red-contrib-json-full-schema-validator\nJSON Full Schema validator for Node Red is pretty easy to use.\nJust open node properties and choose which property object wants to validate and paste JSON Schema\n- OK will returned in first response\n- KO will returned in second response. Error object with explanation will added in msg\n\n**JSON Schema:**\n\n{\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"required\":[\"lastName\"],\n  \"properties\": {\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's first name.\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's last name.\"\n    },\n    \"age\": {\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  }\n}\n\nExamples:\n- OK \nmsg.payload= \n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"age\": 1\n};\n\n- KO\nmsg.payload= \n{\n  \"firstName\": \"John\",\n  \"age\": 1\n};","output":"str","x":1207,"y":669,"wires":[["8f0ef46b0bd33ee7"]]},{"id":"8f0ef46b0bd33ee7","type":"PkgFile","z":"a7a81bcd7159a826","name":"schema.html","filename":"schema.html","format":"html","syntax":"plain","template":"<script type=\"text/javascript\">\n    RED.nodes.registerType('JsonSchemaValidatorWithDocu', {\n        category: 'function',\n        inputs: 1,\n        outputs: 1,\n        color: \"#addb7b\",\n        icon: \"font-awesome/fa-check-circle-o\",\n        paletteLabel: \"Json Schema Holistic Validator\",\n        defaults: {\n            name: {value: \"\" },\n            property: { value:\"payload\" },\n            propertyType: { value:\"msg\" },\n            checkentireobject: { value: false }, /* deprecated but siliently supported */\n            func: { value: \"\" },\n            schematitle: { value: \"\" },\n        },\n        \n        label: function() {\n            return this.name || this.schematitle || this._def.paletteLabel || this.type;\n        },\n\n        oneditprepare: function() {\n            var that = this;\n\n            var completeTypes = [\n                {\n                    value: \"fullmsg\",\n                    label: \"Complete msg object\",\n                    hasValue: false\n                },\n                {\n                    value: \"fullenv\",\n                    label: \"Complete Environment\",\n                    hasValue: false\n                },\n                {\n                    value: \"fullflow\",\n                    label: \"Complete Flow context\",\n                    hasValue: false\n                },\n                {\n                    value: \"fullglobal\",\n                    label: \"Complete Global context\",\n                    hasValue: false\n                },\n            ];\n\n            $(\"#node-input-property\").typedInput({\n                default:'msg',\n                types:['msg', 'flow', 'global', 'env'].concat(completeTypes).concat(['jsonata',]),\n                typeField: \"#node-input-propertyType\"\n            });\n\n            if ( that.property ) {\n                $(\"#node-input-property\").typedInput('value', that.property);\n            }\n            \n            if ( that.propertyType ) {\n                $(\"#node-input-property\").typedInput('type', that.propertyType);\n            }\n\n            if ( that.checkentireobject && !that.propertyType.startsWith(\"full\") ) {\n                $(\"#node-input-property\").typedInput('type', 'full' + that.propertyType);\n            }\n\n            $(\"#node-input-property\").on('change',function() {\n                if ( ['flow','env','global','msg'].indexOf($(\"#node-input-property\").typedInput('type')) > -1 &&\n                    $(\"#node-input-property\").typedInput('value') === ''\n                ) {\n                    $(\"#node-input-property\").typedInput('value','payload');\n                }\n            });\n\n            this.editor = RED.editor.createEditor({\n                id: 'node-input-func-editor',\n                mode: 'ace/mode/json',\n                value: $(\"#node-input-func\").val()\n            });\n\n            RED.library.create({\n                url: \"functions\", // where to get the data from\n                type: \"schema\", // the type of object the library is for\n                editor: this.editor, // the field name the main text body goes to\n                mode: \"ace/mode/json\",\n                fields: ['name']\n            });\n\n            this.editor.focus();\n\n            var nodeid = this.id;\n\n            $('#node-input-generate-md-but').on('click', (e) => {\n                e.preventDefault();\n                \n                $.ajax({\n                    url:         \"JsonSchemaValidatorWithDocu/\" + nodeid,\n                    type:        \"POST\",\n                    contentType: \"application/json; charset=utf-8\",\n                    data:        that.editor.getValue(),\n\n                    success: function (resp) {\n                      that.infoEditor.setValue(resp.md.markdown.map( (d) => { return d.content }).join(\"\\n---\\n\"));\n                      $(\"#node-input-schematitle\").val( resp.md.schema && resp.md.schema[0] && resp.md.schema[0].content && resp.md.schema[0].content.title );\n\n                      RED.notify(\"JsonSchemaValidatorWithDocu Schema update info field\", {\n                        type: \"success\",\n                        id: nodeid,\n                        timeout: 3000\n                      });\n                    },\n\n                    error: function (jqXHR, textStatus, errorThrown) {\n                        if (jqXHR.status == 404) {\n                            RED.notify(\"Node has not yet been deployed, please deploy.\", \"error\");\n                        } else if (jqXHR.status == 405) {\n                            RED.notify(\"Not Allowed.\", \"error\");\n                        } else {\n                          RED.notify(\"JsonSchemaValidatorWithDocu Schema Invalid: \" +\n                                textStatus, {\n                            type: \"error\",\n                            id: nodeid,\n                            timeout: 3000\n                          })\n                        }\n                    }\n                })\n            });\n        },\n\n        oneditsave: function() {\n            var annot = this.editor.getSession().getAnnotations();\n            this.noerr = 0;\n            \n            $(\"#node-input-noerr\").val(0);\n            for (var k = 0; k < annot.length; k++) {\n                if (annot[k].type === \"error\") {\n                    $(\"#node-input-noerr\").val(annot.length);\n                    this.noerr = annot.length;\n                }\n            }\n            \n            $(\"#node-input-func\").val(this.editor.getValue());\n            this.editor.destroy();\n            delete this.editor;\n\n            this.propertyType = $(\"#node-input-property\").typedInput('type');\n            $(\"#node-input-propertyType\").val(this.propertyType);\n            this.checkentireobject = this.propertyType.startsWith(\"full\")\n        },\n\n        oneditresize: function(size) {\n            var rows = $(\"#dialog-form>div:not(.node-text-editor-row)\");\n            var height = $(\"#dialog-form\").height();\n            for (var i = 0; i < rows.size(); i++) {\n                height -= $(rows[i]).outerHeight(true);\n            }\n            var editorRow = $(\"#dialog-form>div.node-text-editor-row\");\n            height -= (parseInt(editorRow.css(\"marginTop\")) + parseInt(editorRow.css(\"marginBottom\")));\n            $(\".node-text-editor\").css(\"height\", height + \"px\");\n            this.editor.resize();\n        }\n    });\n</script>\n\n<script type=\"text/x-red\" data-template-name=\"JsonSchemaValidatorWithDocu\">\n\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\"/>\n    </div>\n\n    <div class=\"form-row\">\n         <button id=\"node-input-generate-md-but\"\n                 class=\"red-ui-button\">Replace node Info with Schema Documentation</button>\n         <input type=\"hidden\" id=\"node-input-schematitle\"/>\n    </div>\n    \n    <div class=\"form-row\">\n        <label for=\"node-input-property\">Object or Property</label>\n        <input type=\"text\" id=\"node-input-property\" style=\"width: 100%\"/>\n\t\t<input type=\"hidden\" id=\"node-input-propertyType\"/>\n    </div>\n\n    <div class=\"form-row\" style=\"margin-bottom: 0px;\">\n        <label for=\"node-input-func\"><i class=\"fa fa-wrench\"></i> JSON Schema</label>\n        <input type=\"hidden\" id=\"node-input-func\" autofocus=\"autofocus\"/>\n        <input type=\"hidden\" id=\"node-input-noerr\"/>\n    </div>\n    \n    <div class=\"form-row node-text-editor-row\">\n        <div style=\"height: 250px;\" class=\"node-text-editor\" id=\"node-input-func-editor\"></div>\n    </div>\n</script>\n\n<script type=\"text/x-red\" data-help-name=\"JsonSchemaValidatorWithDocu\">\n    <p>JSON Schema validator</p>\n    <p>Validate input based on schema. Schema can also be passed in as JSON object on `msg.schema`. If validation fails, an exception is raised.</p>\n</script>","output":"str","x":1207,"y":719,"wires":[["991b28b4d086c904"]]},{"id":"991b28b4d086c904","type":"PkgFile","z":"a7a81bcd7159a826","name":"schema.js","filename":"schema.js","format":"javascript","syntax":"plain","template":"module.exports = function (RED) {\n    \"use strict\";\n    function JsonSchemaValidator(n) {\n        RED.nodes.createNode(this, n);\n        this.func = n.func;\n        this.name = n.name;\n        this.property = n.property;\n        this.propertyType = n.propertyType;\n        this.checkentireobject = n.checkentireobject;\n\n        var node = this;\n\n        var process = require('process');\n        var Ajv = require('ajv');\n\n\n        node.on('input', function (msg, send, done) {\n            try {\n                var schema = typeof node.func === 'string' && node.func.trim().length ? JSON.parse(node.func) : typeof msg.schema === 'string' ? JSON.parse(msg.schema) : msg.schema;                \n\n                var ajv = new Ajv({\n                    allErrors: true,\n                    messages: true,\n                    allowUnionTypes: true\n                });\n\n                var validate = ajv.compile(schema);\n\n                var runValidate = (prop) => {\n                    var valid = validate(prop);\n\n                    if (!valid) {\n                        msg['error'] = validate.errors;\n                        done(\"validation errors\", msg)\n                    }\n                    else {\n                        delete msg.schema;\n                        send(msg);\n                        done()\n                    }\n                };\n\n                if (node.checkentireobject || node.propertyType.startsWith(\"full\") ) {\n                    var obj = msg;\n\n                    var flowOrGlobalToHash = (ste) => {\n                        var rVal = {};\n\n                        ste.keys().forEach((nme) => {\n                            rVal[nme] = ste.get(nme)\n                        })\n\n                        return rVal;\n                    }\n\n                    switch (node.propertyType) {\n                        case \"env\":    \n                        case \"fullenv\":    \n                            obj = process.env;  \n                            break;\n                            \n                        case \"msg\":    \n                        case \"fullmsg\":    \n                            obj = msg;          \n                            break;\n\n                        case 'flow':   \n                        case 'fullflow':   \n                            obj = flowOrGlobalToHash(node.context().flow);   \n                            break;\n\n                        case 'global': \n                        case 'fullglobal': \n                            obj = flowOrGlobalToHash(node.context().global); \n                            break;\n\n                        default:\n                            done(\"unknown property type '\" + node.propertyType + \"' to be check entirely.\", msg);\n                            return;\n                    }\n\n                    runValidate(obj)\n                } else {\n                    var prop = RED.util.evaluateNodeProperty(node.property, node.propertyType, node, msg);\n\n                    if (prop !== undefined) {\n                        runValidate(prop)\n                    } else {\n                        done(\"prop undefined\", msg)\n                    }\n                }\n            } catch (err) {\n                msg.error = err\n                done(\"failed to scan schema\", msg);\n            }\n        });\n    }\n    RED.nodes.registerType(\"JsonSchemaValidatorWithDocu\", JsonSchemaValidator);\n\n    RED.httpAdmin.post(\"/JsonSchemaValidatorWithDocu/:id\",\n        RED.auth.needsPermission(\"JsonSchemaValidatorWithDocu.write\"),\n        (req, res) => {\n            var node = RED.nodes.getNode(req.params.id);\n            if (node != null) {\n                try {\n                    if (req.body && node.type == \"JsonSchemaValidatorWithDocu\") {\n                        import('@adobe/jsonschema2md').then( (module) => {\n                            const markdown = module.jsonschema2md(req.body, {\n                                includeReadme: false,\n                            });\n\n                            res.status(200).send({\n                                md: markdown\n                            })\n                        }).catch(err => {\n                            console.error(err);\n                            res.status(500).send(err.toString());\n                            node.error(\"SchemaDocu: Submission failed: \" +\n                                err.toString())\n                        })                    \n                    } else {\n                        res.sendStatus(404);\n                    }\n                } catch (err) {\n                    console.error(err);\n                    res.status(500).send(err.toString());\n                    node.error(\"JsonSchemaValid: Submission failed: \" +\n                        err.toString())\n                }\n            } else {\n                res.sendStatus(404);\n            }\n        });\n};\n","output":"str","x":1207,"y":769,"wires":[["fe9cb7392415adea"]]},{"id":"3ec773129868ccff","type":"FlowHubPull","z":"a7a81bcd7159a826","g":"2e6d2e0a780e52cb","name":"","notab":false,"flowid":"b92be5062203ff69","flowname":"[NodeDev] NodeDev Node-RED Package","flowrevision":"","x":422,"y":319.3571710586548,"wires":[[]]},{"id":"d7d542898cd0217b","type":"link out","z":"a7a81bcd7159a826","name":"link out 115","mode":"link","links":["963dfb765b0d9849"],"x":1849,"y":769,"wires":[]},{"id":"fe9cb7392415adea","type":"PkgFile","z":"a7a81bcd7159a826","name":"validate-test.json","filename":"examples/validate-test.json","format":"json","syntax":"plain","template":"[\n    {\n        \"id\": \"b1c6cabdf126dce9\",\n        \"type\": \"catch\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"\",\n        \"scope\": null,\n        \"uncaught\": true,\n        \"x\": 641,\n        \"y\": 261,\n        \"wires\": [\n            [\n                \"76de224d8d942715\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"76de224d8d942715\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"THIS EXCEPTION SHOULD NOT BE HERE\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 938,\n        \"y\": 260,\n        \"wires\": []\n    },\n    {\n        \"id\": \"03446b351d684afc\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Validate global object\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"62e022983d68c760\",\n            \"33064364f81d1760\",\n            \"3a50e82e36e9db6a\",\n            \"08130f8a829210c2\",\n            \"7e9c9f6807e4d84d\",\n            \"0c0744629fd5ba7d\",\n            \"6bf54b386241dc22\",\n            \"57021e27a8e4d376\",\n            \"c3355db89665f463\"\n        ],\n        \"x\": 555,\n        \"y\": 782.4999898274741,\n        \"w\": 1288,\n        \"h\": 148.000020345052\n    },\n    {\n        \"id\": \"62e022983d68c760\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 661,\n        \"y\": 823.5000101725261,\n        \"wires\": [\n            [\n                \"33064364f81d1760\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"33064364f81d1760\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"set value in the global context\",\n        \"rules\": [\n            {\n                \"t\": \"set\",\n                \"p\": \"lastName\",\n                \"pt\": \"global\",\n                \"to\": \"lastName\",\n                \"tot\": \"str\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"global\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 915,\n        \"y\": 823.5000101725261,\n        \"wires\": [\n            [\n                \"3a50e82e36e9db6a\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"3a50e82e36e9db6a\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"Validate entire global object\",\n        \"property\": \"\",\n        \"propertyType\": \"global\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 1223,\n        \"y\": 823.5000101725261,\n        \"wires\": [\n            [\n                \"08130f8a829210c2\"\n            ]\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"08130f8a829210c2\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"debug 44\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1704,\n        \"y\": 823.4999898274741,\n        \"wires\": []\n    },\n    {\n        \"id\": \"7e9c9f6807e4d84d\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 666,\n        \"y\": 889.5000101725261,\n        \"wires\": [\n            [\n                \"0c0744629fd5ba7d\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"0c0744629fd5ba7d\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"delete firstName and lastName from global context\",\n        \"rules\": [\n            {\n                \"t\": \"delete\",\n                \"p\": \"lastName\",\n                \"pt\": \"global\"\n            },\n            {\n                \"t\": \"delete\",\n                \"p\": \"firstName\",\n                \"pt\": \"global\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 980,\n        \"y\": 889.5000101725261,\n        \"wires\": [\n            [\n                \"6bf54b386241dc22\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"6bf54b386241dc22\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"Validate entire global object - INVALID\",\n        \"property\": \"\",\n        \"propertyType\": \"global\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 1418,\n        \"y\": 889.5000101725261,\n        \"wires\": [\n            []\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"57021e27a8e4d376\",\n        \"type\": \"catch\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"\",\n        \"scope\": [\n            \"6bf54b386241dc22\"\n        ],\n        \"uncaught\": false,\n        \"x\": 1487,\n        \"y\": 864.1666768391929,\n        \"wires\": [\n            [\n                \"c3355db89665f463\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"c3355db89665f463\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"03446b351d684afc\",\n        \"name\": \"should have one error\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"_error\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1697,\n        \"y\": 864.1666768391929,\n        \"wires\": [],\n        \"info\": \"```\\n\\\"must have required property 'lastName'\\\"\\n```\"\n    },\n    {\n        \"id\": \"431a6e063be5a041\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Validate flow object\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"d13b572d144c347a\",\n            \"7c49f7915f2a7be5\",\n            \"26f640f94183894f\",\n            \"b98dac021ab9283d\",\n            \"2798f0860e522384\",\n            \"952b9066362474c1\",\n            \"c322d887bf54ec1f\",\n            \"0e6e16a224f59e14\",\n            \"e22703513882e924\"\n        ],\n        \"x\": 555,\n        \"y\": 588.749994913737,\n        \"w\": 1156,\n        \"h\": 148\n    },\n    {\n        \"id\": \"d13b572d144c347a\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 661,\n        \"y\": 629.749994913737,\n        \"wires\": [\n            [\n                \"7c49f7915f2a7be5\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"7c49f7915f2a7be5\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"set value in the flow\",\n        \"rules\": [\n            {\n                \"t\": \"set\",\n                \"p\": \"lastName\",\n                \"pt\": \"flow\",\n                \"to\": \"lastName\",\n                \"tot\": \"str\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"flow\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 885,\n        \"y\": 629.749994913737,\n        \"wires\": [\n            [\n                \"26f640f94183894f\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"26f640f94183894f\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"Validate entire flow object\",\n        \"property\": \"\",\n        \"propertyType\": \"flow\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 1148,\n        \"y\": 629.749994913737,\n        \"wires\": [\n            [\n                \"b98dac021ab9283d\"\n            ]\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"b98dac021ab9283d\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"debug 43\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1560,\n        \"y\": 629.7500152587892,\n        \"wires\": []\n    },\n    {\n        \"id\": \"2798f0860e522384\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            },\n            {\n                \"p\": \"topic\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 666,\n        \"y\": 695.749994913737,\n        \"wires\": [\n            [\n                \"952b9066362474c1\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"952b9066362474c1\",\n        \"type\": \"change\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"delete lastName from flow context\",\n        \"rules\": [\n            {\n                \"t\": \"delete\",\n                \"p\": \"lastName\",\n                \"pt\": \"flow\"\n            },\n            {\n                \"t\": \"set\",\n                \"p\": \"firstName\",\n                \"pt\": \"flow\",\n                \"to\": \"firstName\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 930,\n        \"y\": 695.749994913737,\n        \"wires\": [\n            [\n                \"c322d887bf54ec1f\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"c322d887bf54ec1f\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"Validate entire flow object - INVALID\",\n        \"property\": \"\",\n        \"propertyType\": \"flow\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 1293,\n        \"y\": 695.749994913737,\n        \"wires\": [\n            []\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"0e6e16a224f59e14\",\n        \"type\": \"catch\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"\",\n        \"scope\": [\n            \"c322d887bf54ec1f\"\n        ],\n        \"uncaught\": false,\n        \"x\": 1319,\n        \"y\": 668.0833282470704,\n        \"wires\": [\n            [\n                \"e22703513882e924\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"e22703513882e924\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"431a6e063be5a041\",\n        \"name\": \"should have one error\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"_error\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1565,\n        \"y\": 668.0833282470704,\n        \"wires\": [],\n        \"info\": \"```\\n\\\"must have required property 'lastName'\\\"\\n```\"\n    },\n    {\n        \"id\": \"95cbe732c5e8768a\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Validate msg object\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"f52f20830c550361\",\n            \"6f78d32f39ac8f8b\",\n            \"872e6d95f5c29a0a\",\n            \"2962c81629fa2ae6\",\n            \"84698400fdd7b81e\",\n            \"f009328e2d544749\",\n            \"998e7272ec46678d\",\n            \"7fc092fa3249aeea\",\n            \"a41e585a1ffa2787\",\n            \"3c3def750e31d86a\"\n        ],\n        \"x\": 555,\n        \"y\": 332,\n        \"w\": 970,\n        \"h\": 211\n    },\n    {\n        \"id\": \"f52f20830c550361\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"Validate payload property\",\n        \"property\": \"payload\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": false,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 998,\n        \"y\": 374,\n        \"wires\": [\n            [\n                \"872e6d95f5c29a0a\"\n            ]\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"6f78d32f39ac8f8b\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"{\\\"lastName\\\":\\\"lastname\\\",\\\"firstName\\\":\\\"firstname\\\",\\\"something\\\":\\\"else\\\"}\",\n        \"payloadType\": \"json\",\n        \"x\": 656,\n        \"y\": 374,\n        \"wires\": [\n            [\n                \"f52f20830c550361\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"872e6d95f5c29a0a\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"debug 41\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"false\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1338,\n        \"y\": 373,\n        \"wires\": []\n    },\n    {\n        \"id\": \"2962c81629fa2ae6\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"Validate entire msg object - INVALID\",\n        \"property\": \"\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 1035,\n        \"y\": 443,\n        \"wires\": [\n            []\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"84698400fdd7b81e\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"{\\\"lastName\\\":\\\"lastname\\\",\\\"firstName\\\":\\\"firstname\\\",\\\"something\\\":\\\"else\\\"}\",\n        \"payloadType\": \"json\",\n        \"x\": 653,\n        \"y\": 443,\n        \"wires\": [\n            [\n                \"2962c81629fa2ae6\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"f009328e2d544749\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"Validate entire msg object\",\n        \"property\": \"\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 993,\n        \"y\": 502,\n        \"wires\": [\n            [\n                \"7fc092fa3249aeea\"\n            ]\n        ],\n        \"info\": \"## Person Type\\n\\n`object` ([Person](definition.md))\\n\\n# Person Properties\\n\\n| Property                | Type      | Required | Nullable       | Defined by                                                                     |\\n| :---------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------- |\\n| [firstName](#firstname) | `string`  | Optional | cannot be null | [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\") |\\n| [lastName](#lastname)   | `string`  | Required | cannot be null | [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")   |\\n| [age](#age)             | `integer` | Optional | cannot be null | [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")             |\\n\\n## firstName\\n\\nThe person's first name.\\n\\n`firstName`\\n\\n*   is optional\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-firstname.md \\\"undefined#/properties/firstName\\\")\\n\\n### firstName Type\\n\\n`string`\\n\\n## lastName\\n\\nThe person's last name.\\n\\n`lastName`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-lastname.md \\\"undefined#/properties/lastName\\\")\\n\\n### lastName Type\\n\\n`string`\\n\\n## age\\n\\nAge in years which must be equal to or greater than zero.\\n\\n`age`\\n\\n*   is optional\\n\\n*   Type: `integer`\\n\\n*   cannot be null\\n\\n*   defined in: [Person](definition-properties-age.md \\\"undefined#/properties/age\\\")\\n\\n### age Type\\n\\n`integer`\\n\\n### age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\\n---\\n## firstName Type\\n\\n`string`\\n\\n---\\n## lastName Type\\n\\n`string`\\n\\n---\\n## age Type\\n\\n`integer`\\n\\n## age Constraints\\n\\n**minimum**: the value of this number must greater than or equal to: `0`\\n\"\n    },\n    {\n        \"id\": \"998e7272ec46678d\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"lastName\",\n                \"v\": \"lastName\",\n                \"vt\": \"str\"\n            },\n            {\n                \"p\": \"firstName\",\n                \"v\": \"firstName\",\n                \"vt\": \"str\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"x\": 651,\n        \"y\": 502,\n        \"wires\": [\n            [\n                \"f009328e2d544749\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"7fc092fa3249aeea\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"debug 42\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1336,\n        \"y\": 502,\n        \"wires\": []\n    },\n    {\n        \"id\": \"a41e585a1ffa2787\",\n        \"type\": \"catch\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"\",\n        \"scope\": [\n            \"2962c81629fa2ae6\"\n        ],\n        \"uncaught\": false,\n        \"x\": 1136,\n        \"y\": 418,\n        \"wires\": [\n            [\n                \"3c3def750e31d86a\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"3c3def750e31d86a\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"95cbe732c5e8768a\",\n        \"name\": \"should have one error\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"_error\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1379,\n        \"y\": 418,\n        \"wires\": [],\n        \"info\": \"```\\n\\\"must have required property 'lastName'\\\"\\n```\"\n    },\n    {\n        \"id\": \"9f0f13c9cbf9a8a6\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"Generate documentation and view it in the info tab of the node\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"551470b20474ea8e\"\n        ],\n        \"x\": 555,\n        \"y\": 1274,\n        \"w\": 452,\n        \"h\": 82\n    },\n    {\n        \"id\": \"551470b20474ea8e\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"9f0f13c9cbf9a8a6\",\n        \"name\": \"Generate schema documentation by pressing button\",\n        \"property\": \"payload\",\n        \"propertyType\": \"msg\",\n        \"checkentireobject\": false,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Person\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"lastName\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"firstName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's first name.\\\"\\n        },\\n        \\\"lastName\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"The person's last name.\\\"\\n        },\\n        \\\"age\\\": {\\n            \\\"description\\\": \\\"Age in years which must be equal to or greater than zero.\\\",\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"minimum\\\": 0\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Person\",\n        \"x\": 781,\n        \"y\": 1315,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"39f145cbf8431f54\",\n        \"type\": \"group\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"name\": \"schema with refs and enum\",\n        \"style\": {\n            \"label\": true\n        },\n        \"nodes\": [\n            \"b801a8a63da1b1c6\",\n            \"800a0c28c604954c\",\n            \"11d6155578bb8f69\",\n            \"c2f4c9bf299340c0\",\n            \"d0803015754fdee1\",\n            \"5eaf53676c7f7bf7\",\n            \"77f1122408d7c9e3\",\n            \"e415a259e4c51a4f\"\n        ],\n        \"x\": 555,\n        \"y\": 976.2500050862632,\n        \"w\": 1207,\n        \"h\": 252\n    },\n    {\n        \"id\": \"b801a8a63da1b1c6\",\n        \"type\": \"JsonSchemaValidatorWithDocu\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"Reference within a schema\",\n        \"property\": \"\",\n        \"propertyType\": \"fullmsg\",\n        \"checkentireobject\": true,\n        \"func\": \"{\\n    \\\"title\\\": \\\"Schema with a reference within the schema.\\\",\\n    \\\"description\\\": \\\"For this to work, this schema requires an $id else the documentation won't be generated.\\\",\\n    \\\"$id\\\": \\\"docid\\\",\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": [\\n        \\\"value\\\",\\n        \\\"array_with_item_refs\\\"\\n    ],\\n    \\\"$defs\\\": {\\n        \\\"itemdef\\\": {\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"required\\\": [\\n                \\\"name\\\",\\n                \\\"enum\\\"\\n            ],\\n            \\\"properties\\\": {\\n                \\\"name\\\": {\\n                    \\\"type\\\": \\\"string\\\",\\n                    \\\"description\\\": \\\"Name of some value.\\\"\\n                },\\n                \\\"enum\\\": {\\n                    \\\"type\\\": \\\"string\\\",\\n                    \\\"description\\\": \\\"Enumeration of possible values.\\\",\\n                    \\\"enum\\\": [\\n                        \\\"text\\\",\\n                        \\\"utf-8\\\",\\n                        \\\"html\\\",\\n                        \\\"javascript\\\",\\n                        \\\"markdown\\\",\\n                        \\\"json\\\",\\n                        \\\"base64\\\"\\n                    ]\\n                }\\n            }\\n        }\\n    },\\n    \\\"properties\\\": {\\n        \\\"value\\\": {\\n            \\\"type\\\": \\\"boolean\\\",\\n            \\\"description\\\": \\\"This is a simple boolean value.\\\"\\n        },\\n        \\\"array_with_item_refs\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"description\\\": \\\"Array with a minimum of three entries\\\",\\n            \\\"minItems\\\": 3,\\n            \\\"items\\\": {\\n                \\\"$ref\\\": \\\"docid#/$defs/itemdef\\\"\\n            }\\n        }\\n    }\\n}\",\n        \"schematitle\": \"Schema with a reference within the schema.\",\n        \"x\": 1176,\n        \"y\": 1058.7500050862632,\n        \"wires\": [\n            [\n                \"e415a259e4c51a4f\"\n            ]\n        ],\n        \"info\": \"## Schema with a reference within the schema. Type\\n\\n`object` ([Schema with a reference within the schema.](definition.md))\\n\\n# Schema with a reference within the schema. Properties\\n\\n| Property                                         | Type      | Required | Nullable       | Defined by                                                                                                                           |\\n| :----------------------------------------------- | :-------- | :------- | :------------- | :----------------------------------------------------------------------------------------------------------------------------------- |\\n| [value](#value)                                  | `boolean` | Required | cannot be null | [Schema with a reference within the schema.](definition-properties-value.md \\\"docid#/properties/value\\\")                               |\\n| [array\\\\_with\\\\_item\\\\_refs](#array_with_item_refs) | `array`   | Required | cannot be null | [Schema with a reference within the schema.](definition-properties-array_with_item_refs.md \\\"docid#/properties/array_with_item_refs\\\") |\\n\\n## value\\n\\nThis is a simple boolean value.\\n\\n`value`\\n\\n*   is required\\n\\n*   Type: `boolean`\\n\\n*   cannot be null\\n\\n*   defined in: [Schema with a reference within the schema.](definition-properties-value.md \\\"docid#/properties/value\\\")\\n\\n### value Type\\n\\n`boolean`\\n\\n## array\\\\_with\\\\_item\\\\_refs\\n\\nArray with a minimum of three entries\\n\\n`array_with_item_refs`\\n\\n*   is required\\n\\n*   Type: `object[]` ([Details](definition-properties-array_with_item_refs-items.md))\\n\\n*   cannot be null\\n\\n*   defined in: [Schema with a reference within the schema.](definition-properties-array_with_item_refs.md \\\"docid#/properties/array_with_item_refs\\\")\\n\\n### array\\\\_with\\\\_item\\\\_refs Type\\n\\n`object[]` ([Details](definition-properties-array_with_item_refs-items.md))\\n\\n### array\\\\_with\\\\_item\\\\_refs Constraints\\n\\n**minimum number of items**: the minimum number of items for this array is: `3`\\n\\n# Schema with a reference within the schema. Definitions\\n\\n## Definitions group itemdef\\n\\nReference this group by using\\n\\n```json\\n{\\\"$ref\\\":\\\"docid#/$defs/itemdef\\\"}\\n```\\n\\n| Property      | Type     | Required | Nullable       | Defined by                                                                                                                      |\\n| :------------ | :------- | :------- | :------------- | :------------------------------------------------------------------------------------------------------------------------------ |\\n| [name](#name) | `string` | Required | cannot be null | [Schema with a reference within the schema.](definition-defs-itemdef-properties-name.md \\\"docid#/$defs/itemdef/properties/name\\\") |\\n| [enum](#enum) | `string` | Required | cannot be null | [Schema with a reference within the schema.](definition-defs-itemdef-properties-enum.md \\\"docid#/$defs/itemdef/properties/enum\\\") |\\n\\n### name\\n\\nName of some value.\\n\\n`name`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Schema with a reference within the schema.](definition-defs-itemdef-properties-name.md \\\"docid#/$defs/itemdef/properties/name\\\")\\n\\n#### name Type\\n\\n`string`\\n\\n### enum\\n\\nEnumeration of possible values.\\n\\n`enum`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Schema with a reference within the schema.](definition-defs-itemdef-properties-enum.md \\\"docid#/$defs/itemdef/properties/enum\\\")\\n\\n#### enum Type\\n\\n`string`\\n\\n#### enum Constraints\\n\\n**enum**: the value of this property must be equal to one of the following values:\\n\\n| Value          | Explanation |\\n| :------------- | :---------- |\\n| `\\\"text\\\"`       |             |\\n| `\\\"utf-8\\\"`      |             |\\n| `\\\"html\\\"`       |             |\\n| `\\\"javascript\\\"` |             |\\n| `\\\"markdown\\\"`   |             |\\n| `\\\"json\\\"`       |             |\\n| `\\\"base64\\\"`     |             |\\n\\n---\\n## $defs Type\\n\\nunknown\\n\\n---\\n## items Type\\n\\n`object` ([Details](definition-defs-itemdef.md))\\n\\n# items Properties\\n\\n| Property      | Type     | Required | Nullable       | Defined by                                                                                                                      |\\n| :------------ | :------- | :------- | :------------- | :------------------------------------------------------------------------------------------------------------------------------ |\\n| [name](#name) | `string` | Required | cannot be null | [Schema with a reference within the schema.](definition-defs-itemdef-properties-name.md \\\"docid#/$defs/itemdef/properties/name\\\") |\\n| [enum](#enum) | `string` | Required | cannot be null | [Schema with a reference within the schema.](definition-defs-itemdef-properties-enum.md \\\"docid#/$defs/itemdef/properties/enum\\\") |\\n\\n## name\\n\\nName of some value.\\n\\n`name`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Schema with a reference within the schema.](definition-defs-itemdef-properties-name.md \\\"docid#/$defs/itemdef/properties/name\\\")\\n\\n### name Type\\n\\n`string`\\n\\n## enum\\n\\nEnumeration of possible values.\\n\\n`enum`\\n\\n*   is required\\n\\n*   Type: `string`\\n\\n*   cannot be null\\n\\n*   defined in: [Schema with a reference within the schema.](definition-defs-itemdef-properties-enum.md \\\"docid#/$defs/itemdef/properties/enum\\\")\\n\\n### enum Type\\n\\n`string`\\n\\n### enum Constraints\\n\\n**enum**: the value of this property must be equal to one of the following values:\\n\\n| Value          | Explanation |\\n| :------------- | :---------- |\\n| `\\\"text\\\"`       |             |\\n| `\\\"utf-8\\\"`      |             |\\n| `\\\"html\\\"`       |             |\\n| `\\\"javascript\\\"` |             |\\n| `\\\"markdown\\\"`   |             |\\n| `\\\"json\\\"`       |             |\\n| `\\\"base64\\\"`     |             |\\n\\n---\\n## name Type\\n\\n`string`\\n\\n---\\n## enum Type\\n\\n`string`\\n\\n## enum Constraints\\n\\n**enum**: the value of this property must be equal to one of the following values:\\n\\n| Value          | Explanation |\\n| :------------- | :---------- |\\n| `\\\"text\\\"`       |             |\\n| `\\\"utf-8\\\"`      |             |\\n| `\\\"html\\\"`       |             |\\n| `\\\"javascript\\\"` |             |\\n| `\\\"markdown\\\"`   |             |\\n| `\\\"json\\\"`       |             |\\n| `\\\"base64\\\"`     |             |\\n\\n---\\n## value Type\\n\\n`boolean`\\n\\n---\\n## array\\\\_with\\\\_item\\\\_refs Type\\n\\n`object[]` ([Details](definition-defs-itemdef.md))\\n\\n## array\\\\_with\\\\_item\\\\_refs Constraints\\n\\n**minimum number of items**: the minimum number of items for this array is: `3`\\n\"\n    },\n    {\n        \"id\": \"800a0c28c604954c\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"invalid msg object\",\n        \"props\": [],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"x\": 691,\n        \"y\": 1058.7500050862632,\n        \"wires\": [\n            [\n                \"11d6155578bb8f69\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"11d6155578bb8f69\",\n        \"type\": \"function\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"setup msg object\",\n        \"func\": \"msg.value = \\\"some string\\\";\\n\\nmsg.array_with_item_refs = [\\n    {\\n        name: \\\"somer name\\\",\\n        enum: \\\"some value\\\"\\n    }\\n]\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"libs\": [],\n        \"x\": 895,\n        \"y\": 1058.7500050862632,\n        \"wires\": [\n            [\n                \"b801a8a63da1b1c6\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"c2f4c9bf299340c0\",\n        \"type\": \"catch\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"\",\n        \"scope\": [\n            \"b801a8a63da1b1c6\"\n        ],\n        \"uncaught\": false,\n        \"x\": 1260,\n        \"y\": 1019.2500050862632,\n        \"wires\": [\n            [\n                \"d0803015754fdee1\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"d0803015754fdee1\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"should have 3 errors\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"_error\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1616,\n        \"y\": 1017.2500050862632,\n        \"wires\": [],\n        \"info\": \"1. \\\"must be boolean\\\"\\n2. \\\"must NOT have fewer than 3 items\\\"\\n3. \\\"must be equal to one of the allowed values\\\"\"\n    },\n    {\n        \"id\": \"5eaf53676c7f7bf7\",\n        \"type\": \"inject\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"valid msg object\",\n        \"props\": [],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"x\": 688,\n        \"y\": 1187.2500050862632,\n        \"wires\": [\n            [\n                \"77f1122408d7c9e3\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"77f1122408d7c9e3\",\n        \"type\": \"function\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"setup msg object\",\n        \"func\": \"msg.value = true;\\n\\nmsg.array_with_item_refs = [\\n    {\\n        name: \\\"somer name\\\",\\n        enum: \\\"utf-8\\\"\\n    },\\n    {\\n        name: \\\"somer name\\\",\\n        enum: \\\"javascript\\\"\\n    },\\n    {\\n        name: \\\"somer name\\\",\\n        enum: \\\"base64\\\"\\n    },\\n]\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"libs\": [],\n        \"x\": 902,\n        \"y\": 1187.2500050862632,\n        \"wires\": [\n            [\n                \"b801a8a63da1b1c6\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"e415a259e4c51a4f\",\n        \"type\": \"debug\",\n        \"z\": \"f21aed28a04a7fd0\",\n        \"g\": \"39f145cbf8431f54\",\n        \"name\": \"debug 45\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": false,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"auto\",\n        \"x\": 1460,\n        \"y\": 1182.2500050862632,\n        \"wires\": []\n    }\n]","output":"str","x":1328,"y":865,"wires":[["d7d542898cd0217b"]]},{"id":"c2be3f2b969670f6","type":"FlowHubPull","z":"a7a81bcd7159a826","g":"84a9e437660e4403","name":"","notab":false,"flowid":"f21aed28a04a7fd0","flowname":"[NodeDev] Example of Json Schema Holistic Validator","flowrevision":"","x":462,"y":522,"wires":[[]]},{"id":"7ca4346867721458","type":"NodeDevOps","z":"a7a81bcd7159a826","g":"432bebdef03a3208","name":"Install package locally","pname":"@gregoriusrippenstein/node-red-contrib-validation-and-documentation","pversion":"0.1.0","pauthorname":"Gerrit Riessen","pauthoremail":"gerrit@openmindmap.org","pdescription":"JSON Schema validator for Node Red","noderedinstall":true,"randompackagename":false,"ignore_package_check":false,"gitcommit":false,"gitcheckforchange":false,"githubowner":"gorenje","githubrepo":"node-red-contrib-json-schema","githubbranch":"main","githubauthor":"Gerrit Riessen","githubauthoremail":"gerrit@openmindmap.org","githubmessage":"version bump to 0.1.0","npmpublish":false,"npmunpublish":false,"npmotp":"111999","x":382,"y":420.6785855293274,"wires":[["590ac7b2f8d401c6"]]}]