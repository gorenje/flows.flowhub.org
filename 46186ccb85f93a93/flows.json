[{"id":"46186ccb85f93a93","type":"tab","label":"[Test] Testing, one two, one two...","disabled":false,"info":"::: aim\n\nTest flow from this [github issue](https://github.com/gorenje/node-red-flowviewer-js/issues/1)\n\n:::\n\n","env":[]},{"id":"1eabd31a6d56d2e1","type":"inject","z":"46186ccb85f93a93","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":383,"y":463,"wires":[["8a6906e458a34bf1"]]},{"id":"6563b868847ca78a","type":"debug","z":"46186ccb85f93a93","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":367,"y":141,"wires":[]},{"id":"84d8ec6a231380d3","type":"FlowHubPull","z":"46186ccb85f93a93","name":"","notab":false,"flowid":"d0506e991d512ace","flowname":"[Introspection] Develop Node-RED nodes in Node-RED","x":394,"y":95,"wires":[[]]},{"id":"fc816d277543e726","type":"FlowHubPull","z":"46186ccb85f93a93","name":"","notab":false,"flowid":"390ee0021ded4910","flowname":"[GitHub] base functionality","x":384,"y":510,"wires":[[]]},{"id":"992dea9edfe05367","type":"JsonSchemaValidatorWithDocu","z":"46186ccb85f93a93","name":"","property":"","propertyType":"fullmsg","checkentireobject":true,"func":"{\n    \"title\": \"Basic requirements for `msg` object to utilise this flow.\",\n    \"$id\": \"docid\",\n    \"type\": \"object\",\n    \"required\": [\n        \"noderedinstall\",\n        \"gitcommit\",\n        \"npmpublish\",\n        \"npmunpublish\",\n        \"contents\"\n    ],\n    \"$defs\": {\n        \"content\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"contents\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the file to be included in the package.\"\n                },\n                \"contents\": {\n                    \"type\": \"string\",\n                    \"description\": \"Contents of the file to be included in the package. Binary data should be encoded in base64.\"\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"Value describes the type of the content, default is utf-8.\",\n                    \"enum\": [\n                        \"text\",\n                        \"utf-8\",\n                        \"html\",\n                        \"javascript\",\n                        \"markdown\",\n                        \"json\",\n                        \"base64\"\n                    ]\n                }\n            }\n        }\n    },\n    \"properties\": {\n        \"noderedinstall\": {\n            \"type\": \"boolean\",\n            \"description\": \"Install the node into Node-RED.\"\n        },\n        \"gitcommit\": {\n            \"type\": \"boolean\",\n            \"description\": \"Perform a GitHub commit with the package files.\"\n        },\n        \"npmpublish\": {\n            \"type\": \"boolean\",\n            \"description\": \"Publish package to NPM.\"\n        },\n        \"npmunpublish\": {\n            \"type\": \"boolean\",\n            \"description\": \"Unpublish package to NPM.\"\n        },\n        \"contents\": {\n            \"type\": \"array\",\n            \"description\": \"Contents of the package, all names should be prefixed with package/. Minimum: LICENSE, README and package.json --> 3.\",\n            \"minItems\": 3,\n            \"items\": {\n                \"$ref\": \"docid#/$defs/content\"\n            }\n        }\n    }\n}","schematitle":"Basic requirements for `msg` object to utilise this flow.","x":384,"y":627,"wires":[[]],"info":"## Basic requirements for \\`msg\\` object to utilise this flow. Type\n\n`object` ([Basic requirements for \\`msg\\` object to utilise this flow.](definition.md))\n\n# Basic requirements for \\`msg\\` object to utilise this flow. Properties\n\n| Property                          | Type      | Required | Nullable       | Defined by                                                                                                                                |\n| :-------------------------------- | :-------- | :------- | :------------- | :---------------------------------------------------------------------------------------------------------------------------------------- |\n| [noderedinstall](#noderedinstall) | `boolean` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-noderedinstall.md \"docid#/properties/noderedinstall\") |\n| [gitcommit](#gitcommit)           | `boolean` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-gitcommit.md \"docid#/properties/gitcommit\")           |\n| [npmpublish](#npmpublish)         | `boolean` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-npmpublish.md \"docid#/properties/npmpublish\")         |\n| [npmunpublish](#npmunpublish)     | `boolean` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-npmunpublish.md \"docid#/properties/npmunpublish\")     |\n| [contents](#contents)             | `array`   | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-contents.md \"docid#/properties/contents\")             |\n\n## noderedinstall\n\nInstall the node into Node-RED.\n\n`noderedinstall`\n\n*   is required\n\n*   Type: `boolean`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-noderedinstall.md \"docid#/properties/noderedinstall\")\n\n### noderedinstall Type\n\n`boolean`\n\n## gitcommit\n\nPerform a GitHub commit with the package files.\n\n`gitcommit`\n\n*   is required\n\n*   Type: `boolean`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-gitcommit.md \"docid#/properties/gitcommit\")\n\n### gitcommit Type\n\n`boolean`\n\n## npmpublish\n\nPublish package to NPM.\n\n`npmpublish`\n\n*   is required\n\n*   Type: `boolean`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-npmpublish.md \"docid#/properties/npmpublish\")\n\n### npmpublish Type\n\n`boolean`\n\n## npmunpublish\n\nUnpublish package to NPM.\n\n`npmunpublish`\n\n*   is required\n\n*   Type: `boolean`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-npmunpublish.md \"docid#/properties/npmunpublish\")\n\n### npmunpublish Type\n\n`boolean`\n\n## contents\n\nContents of the package, all names should be prefixed with package/. Minimum: LICENSE, README and package.json --> 3.\n\n`contents`\n\n*   is required\n\n*   Type: `object[]` ([Details](definition-properties-contents-items.md))\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-properties-contents.md \"docid#/properties/contents\")\n\n### contents Type\n\n`object[]` ([Details](definition-properties-contents-items.md))\n\n### contents Constraints\n\n**minimum number of items**: the minimum number of items for this array is: `3`\n\n# Basic requirements for \\`msg\\` object to utilise this flow. Definitions\n\n## Definitions group content\n\nReference this group by using\n\n```json\n{\"$ref\":\"docid#/$defs/content\"}\n```\n\n| Property                | Type     | Required | Nullable       | Defined by                                                                                                                                               |\n| :---------------------- | :------- | :------- | :------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [name](#name)           | `string` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-name.md \"docid#/$defs/content/properties/name\")         |\n| [contents](#contents-1) | `string` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-contents.md \"docid#/$defs/content/properties/contents\") |\n| [type](#type)           | `string` | Optional | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-type.md \"docid#/$defs/content/properties/type\")         |\n\n### name\n\nName of the file to be included in the package.\n\n`name`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-name.md \"docid#/$defs/content/properties/name\")\n\n#### name Type\n\n`string`\n\n### contents\n\nContents of the file to be included in the package. Binary data should be encoded in base64.\n\n`contents`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-contents.md \"docid#/$defs/content/properties/contents\")\n\n#### contents Type\n\n`string`\n\n### type\n\nValue describes the type of the content, default is utf-8.\n\n`type`\n\n*   is optional\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-type.md \"docid#/$defs/content/properties/type\")\n\n#### type Type\n\n`string`\n\n#### type Constraints\n\n**enum**: the value of this property must be equal to one of the following values:\n\n| Value          | Explanation |\n| :------------- | :---------- |\n| `\"text\"`       |             |\n| `\"utf-8\"`      |             |\n| `\"html\"`       |             |\n| `\"javascript\"` |             |\n| `\"markdown\"`   |             |\n| `\"json\"`       |             |\n| `\"base64\"`     |             |\n\n---\n## $defs Type\n\nunknown\n\n---\n## items Type\n\n`object` ([Details](definition-defs-content.md))\n\n# items Properties\n\n| Property              | Type     | Required | Nullable       | Defined by                                                                                                                                               |\n| :-------------------- | :------- | :------- | :------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [name](#name)         | `string` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-name.md \"docid#/$defs/content/properties/name\")         |\n| [contents](#contents) | `string` | Required | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-contents.md \"docid#/$defs/content/properties/contents\") |\n| [type](#type)         | `string` | Optional | cannot be null | [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-type.md \"docid#/$defs/content/properties/type\")         |\n\n## name\n\nName of the file to be included in the package.\n\n`name`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-name.md \"docid#/$defs/content/properties/name\")\n\n### name Type\n\n`string`\n\n## contents\n\nContents of the file to be included in the package. Binary data should be encoded in base64.\n\n`contents`\n\n*   is required\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-contents.md \"docid#/$defs/content/properties/contents\")\n\n### contents Type\n\n`string`\n\n## type\n\nValue describes the type of the content, default is utf-8.\n\n`type`\n\n*   is optional\n\n*   Type: `string`\n\n*   cannot be null\n\n*   defined in: [Basic requirements for \\`msg\\` object to utilise this flow.](definition-defs-content-properties-type.md \"docid#/$defs/content/properties/type\")\n\n### type Type\n\n`string`\n\n### type Constraints\n\n**enum**: the value of this property must be equal to one of the following values:\n\n| Value          | Explanation |\n| :------------- | :---------- |\n| `\"text\"`       |             |\n| `\"utf-8\"`      |             |\n| `\"html\"`       |             |\n| `\"javascript\"` |             |\n| `\"markdown\"`   |             |\n| `\"json\"`       |             |\n| `\"base64\"`     |             |\n\n---\n## name Type\n\n`string`\n\n---\n## contents Type\n\n`string`\n\n---\n## type Type\n\n`string`\n\n## type Constraints\n\n**enum**: the value of this property must be equal to one of the following values:\n\n| Value          | Explanation |\n| :------------- | :---------- |\n| `\"text\"`       |             |\n| `\"utf-8\"`      |             |\n| `\"html\"`       |             |\n| `\"javascript\"` |             |\n| `\"markdown\"`   |             |\n| `\"json\"`       |             |\n| `\"base64\"`     |             |\n\n---\n## noderedinstall Type\n\n`boolean`\n\n---\n## gitcommit Type\n\n`boolean`\n\n---\n## npmpublish Type\n\n`boolean`\n\n---\n## npmunpublish Type\n\n`boolean`\n\n---\n## contents Type\n\n`object[]` ([Details](definition-defs-content.md))\n\n## contents Constraints\n\n**minimum number of items**: the minimum number of items for this array is: `3`\n"},{"id":"8a6906e458a34bf1","type":"link out","z":"46186ccb85f93a93","name":"link out 117","mode":"link","links":["9cb8f598af9cbf03"],"x":478,"y":463,"wires":[]},{"id":"9cb8f598af9cbf03","type":"link in","z":"46186ccb85f93a93","name":"link in 1","links":["8a6906e458a34bf1"],"x":272,"y":141,"wires":[["6563b868847ca78a"]]},{"id":"5c5d34a1dc1fe07b","type":"http in","z":"46186ccb85f93a93","name":"","url":"/entrypoint","method":"post","upload":false,"swaggerDoc":"","x":328,"y":850,"wires":[["9d4e138818b0c708","8d4461e043791b74"]]},{"id":"80859fede34e1ecc","type":"http response","z":"46186ccb85f93a93","name":"","statusCode":"","headers":{"content-type":"application/json"},"x":963,"y":1035,"wires":[]},{"id":"9d4e138818b0c708","type":"debug","z":"46186ccb85f93a93","name":"debug 2","active":true,"tosidebar":false,"console":true,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":791,"y":844,"wires":[]},{"id":"8d4461e043791b74","type":"change","z":"46186ccb85f93a93","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\t    \"text\": $$.payload.text & \" another test\"\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":645,"y":934,"wires":[["80859fede34e1ecc"]]}]