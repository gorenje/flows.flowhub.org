[{"id":"91197129247b83b8","type":"tab","label":"[Txt2Visual] Password Generator","disabled":false,"info":"::: aim\n\nConvert a piece of textual code to visual code, in this case some Python code.\n\n:::\n\n::: background\n\nThe idea for this came from a [hacker news](https://news.ycombinator.com/item?id=37297759) comment. So I thought I might try. Admittedly I picked something that had nothing to do with file systems, which my bash scripts all seemed to be about.\n\nThe code I picked was some Python code for generating a random password using an external site:\n\n```python\nimport time, subprocess, types, math, sys, re, optparse, os\nimport socket, json, base64, threading, uuid, requests, urllib\nimport types, math, sys, re\n\nfrom bs4 import BeautifulSoup\n\nPageUrl = \"https://www.gaijin.at/de/tools/password-generator-extended\"\n\ndef main(opts):\n    # create an instance of the class\n    forms = BeautifulSoup(requests.get( PageUrl ).content,features=\"html.parser\" ).find_all( \"form\" )\n\n    if len(forms) != 1:\n        print( \"Too many forms found: {} != 1\".format(len(forms)))\n        exit(1)\n\n    form = forms[0]\n    if form.attrs[\"method\"] != \"post\":\n        print(\"Form no longer post: {}\".format(form.attr[\"method\"]))\n        exit(1)\n\n    data = dict([ [e.attrs[\"name\"], e.attrs[\"value\"]]\n                  for e in form.findAll(\"input\")])\n\n    data[\"p_pre_method\"] = \"PWMGR2\"\n    data[\"p_usr_len\"] = str(opts.max_length)\n    data[\"p_usr_count\"] = str(opts.count)\n    data[\"p_pre_count\"] = '8'\n    data[\"tab\"] = 'U'\n\n    if not opts.symbols:\n        data.pop(\"p_usr_fspc\", None)\n        data.pop(\"p_usr_lspc\", None)\n        data.pop(\"p_usr_spc\", None)\n\n    if opts.downcase:\n        data.pop(\"p_usr_fupper\", None)\n        data.pop(\"p_usr_lupper\", None)\n        data.pop(\"p_usr_upper\", None)\n\n    if opts.no_numbers:\n        data.pop(\"p_usr_num\", None)\n        data.pop(\"p_usr_lnum\", None)\n        data.pop(\"p_usr_fnum\", None)\n        data.pop(\"p_usr_nul\", None)\n        data.pop(\"p_usr_lnul\", None)\n        data.pop(\"p_usr_fnul\", None)\n\n    pr = urllib.parse.urlparse(PageUrl)\n    resp = requests.post( pr.scheme + \"://\" + pr.netloc + form.attrs[\"action\"],\n                   data=data )\n    tx = BeautifulSoup( resp.content,\n                        features=\"html.parser\" ).find_all( \"textarea\" )\n\n    print(tx[0].contents[0])\n\nif __name__ == '__main__':\n    parser = optparse.OptionParser()\n    parser.add_option(\n        '-c', '--count',\n        help=\"number of passwords\",\n        type=\"int\", default=16)\n    parser.add_option(\n        '-l', '--max-length',\n        help=\"max length of the passwords\",\n        type='int', default=32)\n    parser.add_option(\n        '-s', '--symbols',\n        help=\"request special characters (i.e. unicode) in passwords\",\n        action=\"store_true\", default=False)\n    parser.add_option(\n        '-d', '--downcase',\n        help=\"request password to be downcase only\",\n        action=\"store_true\", default=False)\n\n    parser.add_option(\n        '-n', '--no-numbers',\n        help=\"request password to contain no numbers\",\n        action=\"store_true\", default=False)\n\n    opts, args = parser.parse_args()\n\n    main(opts)\n```\n\n:::\n\n","env":[]},{"id":"c3d8aef2675d937f","type":"group","z":"91197129247b83b8","name":"Parse form data to obtain all inputs and POST endpoint","style":{"label":true},"nodes":["4bd022809eb21cf5","eeba010f7b62c4f7","c4b110693a7303ca","3f6ad8acdd210647","a21fc2f1f2628c96","20130d6510cec834","9b9925da67c8618b","56cb5e695f77808d","fcec60190dd5e0df","c3e97495143d5d1a"],"x":610,"y":69,"w":1123,"h":296},{"id":"707772b034e40e91","type":"group","z":"91197129247b83b8","name":"Setup post request with all required inputs","style":{"label":true},"nodes":["863a9b9613c790b8","9af0851af8116864","e57abf0e4a6a3517","6541db96eaa38aa4","773fba9ce53f0740"],"x":1919,"y":150,"w":736,"h":215},{"id":"b939ec3a32f8ec87","type":"inject","z":"91197129247b83b8","name":"password settings","props":[{"p":"pword_length","v":"32","vt":"num"},{"p":"pword_symbols","v":"true","vt":"bool"},{"p":"pword_count","v":"32","vt":"num"},{"p":"pword_numbers","v":"true","vt":"bool"},{"p":"pword_downcase","v":"false","vt":"bool"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":163,"y":112,"wires":[["26a66059e7a5838a"]]},{"id":"6830c04383494ff3","type":"http request","z":"91197129247b83b8","name":"get form details","method":"GET","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":452,"y":275,"wires":[["9b9925da67c8618b","56cb5e695f77808d"]]},{"id":"26a66059e7a5838a","type":"function","z":"91197129247b83b8","name":"set request url and headers","func":"msg.base_url = \"https://www.gaijin.at\";\n\nmsg.url = msg.base_url + \"/de/tools/password-generator-extended\";\n\nmsg.headers = {\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/525.28.3 (KHTML, like Gecko) Version/3.2.3 Safari/525.28.3\"\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":309,"y":197,"wires":[["6830c04383494ff3"]]},{"id":"4bd022809eb21cf5","type":"switch","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"ensure there is only 1 form","property":"payload.length","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"num"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1019,"y":117,"wires":[["3f6ad8acdd210647"],["c4b110693a7303ca"]]},{"id":"eeba010f7b62c4f7","type":"debug","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1588,"y":253,"wires":[]},{"id":"c4b110693a7303ca","type":"change","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"","rules":[{"t":"set","p":"error","pt":"msg","to":"{\t    \"message\": \"Form count not 1 was \" & $count(msg.payload)\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1251,"y":189,"wires":[["20130d6510cec834"]]},{"id":"3f6ad8acdd210647","type":"switch","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"ensure form method is post","property":"payload[0].method","propertyType":"msg","rules":[{"t":"eq","v":"post","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1419,"y":110,"wires":[["9b91a0b1d132954a"],["a21fc2f1f2628c96"]]},{"id":"a21fc2f1f2628c96","type":"change","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"","rules":[{"t":"set","p":"error","pt":"msg","to":"{\t    \"message\": \"Form method assumed to be post, was: \" & msg.payload[0].method\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1569,"y":205,"wires":[["eeba010f7b62c4f7"]]},{"id":"20130d6510cec834","type":"debug","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1278,"y":243,"wires":[]},{"id":"863a9b9613c790b8","type":"function","z":"91197129247b83b8","g":"707772b034e40e91","name":"setup form post request","func":"msg.url = msg.base_url + msg.payload[0][0].action;\n\nvar formContent = {}\n\nfor (var idx = 0; idx < msg.payload[1].length; idx++ ) {\n    formContent[msg.payload[1][idx].name] = msg.payload[1][idx].value\n}\n\nformContent[\"p_pre_method\"] = \"PWMGR2\"\nformContent[\"p_usr_len\"] = msg.pword_length\nformContent[\"p_usr_count\"] = msg.pword_count\nformContent[\"p_pre_count\"] = '8'\nformContent[\"tab\"] = 'U'\n\nmsg.payload = formContent;\n\nif (!msg.pword_symbols) {\n    msg.payload = {\n        ...msg.payload,\n        \"p_usr_fspc\": 0,\n        \"p_usr_lspc\": 0,\n        \"p_usr_spc\": 0,\n    }\n}\n\nif ( !msg.pword_numbers ) {\n    msg.payload = {\n        ...msg.payload,\n        \"p_usr_num\": 0,\n        \"p_usr_lnum\": 0,\n        \"p_usr_fnum\": 0,\n        \"p_usr_nul\": 0,\n        \"p_usr_lnul\": 0,\n        \"p_usr_fnul\": 0,\n    }\n}\n\nif ( msg.pword_downcase ) {\n    msg.payload = {\n        ...msg.payload,\n        \"p_usr_fupper\": 0,\n        \"p_usr_lupper\": 0,\n        \"p_usr_upper\":0,\n    }\n}\n\nmsg.headers = {\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/525.28.3 (KHTML, like Gecko) Version/3.2.3 Safari/525.28.3\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2510,"y":324,"wires":[["9af0851af8116864"]]},{"id":"9af0851af8116864","type":"http request","z":"91197129247b83b8","g":"707772b034e40e91","name":"http POST request","method":"POST","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":2539,"y":191,"wires":[["38008ad7ab77e6ef"]]},{"id":"9b9925da67c8618b","type":"html","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"obtain form element","property":"payload","outproperty":"payload","tag":"form","ret":"attr","as":"single","x":736,"y":175,"wires":[["4bd022809eb21cf5"]]},{"id":"56cb5e695f77808d","type":"html","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"obtain all input elements in the form","property":"payload","outproperty":"payload","tag":"form","ret":"html","as":"single","x":829,"y":324,"wires":[["c3e97495143d5d1a"]]},{"id":"fcec60190dd5e0df","type":"html","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"all input elements in form","property":"payload","outproperty":"payload","tag":"input","ret":"attr","as":"single","x":1597,"y":323,"wires":[["9b91a0b1d132954a"]]},{"id":"c3e97495143d5d1a","type":"change","z":"91197129247b83b8","g":"c3d8aef2675d937f","name":"payload should be string not array","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload[0]","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1163,"y":324,"wires":[["fcec60190dd5e0df"]]},{"id":"9b91a0b1d132954a","type":"join","z":"91197129247b83b8","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"1","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1854,"y":104,"wires":[["6541db96eaa38aa4"]]},{"id":"e57abf0e4a6a3517","type":"switch","z":"91197129247b83b8","g":"707772b034e40e91","name":"ensure ordering of payload: form element first","property":"payload[0].length","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"num"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":2129,"y":259,"wires":[["863a9b9613c790b8"],["773fba9ce53f0740"]]},{"id":"6541db96eaa38aa4","type":"switch","z":"91197129247b83b8","g":"707772b034e40e91","name":"ensure there was no error, need to have 2 payloads","property":"payload.length","propertyType":"msg","rules":[{"t":"eq","v":"2","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":2137,"y":201,"wires":[["e57abf0e4a6a3517"]]},{"id":"773fba9ce53f0740","type":"change","z":"91197129247b83b8","g":"707772b034e40e91","name":"swap payload contents","rules":[{"t":"set","p":"p1","pt":"msg","to":"payload[0]","tot":"msg","dc":true},{"t":"set","p":"p2","pt":"msg","to":"payload[1]","tot":"msg","dc":true},{"t":"set","p":"payload","pt":"msg","to":"[ [$$.p2], [$$.p1] ]","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":2055,"y":324,"wires":[["863a9b9613c790b8"]]},{"id":"38008ad7ab77e6ef","type":"html","z":"91197129247b83b8","name":"find the passwords in response","property":"payload","outproperty":"payload","tag":"textarea","ret":"text","as":"single","x":2878,"y":191,"wires":[["e5a2f63937a7694e"]]},{"id":"e5a2f63937a7694e","type":"debug","z":"91197129247b83b8","name":"Dump passwords to debug pane","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload[0]","targetType":"msg","statusVal":"","statusType":"auto","x":3090,"y":340,"wires":[]}]