[{"id":"d5b88fb479895490","type":"tab","label":"[Introspection] obtain all nodes in a flow tab","disabled":false,"info":"### Aim\n\nGenerate a list of all nodes defined in a particular flow tab.\n\n### Input\n\n- `msg.flid` is the flow tab ID found in the Node-RED URL. If this is not defined, the flow assumes the flow tab in which it is defined is meant.\n\n### Output \n\nHtml commented code with all all node details.\n\n### Prerequiste\n\n- GetFlows node from the [introspection](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection) Node-RED package. Can be installed via the palette manager.\n\n","env":[]},{"id":"d3a853a462874680","type":"group","z":"d5b88fb479895490","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["57cb2c9232eabfe3","89bed628deb64df6","2d32a243613fa75a","39639d71ce7583f6","decb892d0194e97a","244cc9ce8b06feb2"],"x":150.2857666015625,"y":201.5714111328125,"w":880.7142333984375,"h":188.857177734375},{"id":"57cb2c9232eabfe3","type":"function","z":"d5b88fb479895490","g":"d3a853a462874680","name":"only nodes from flow","func":"msg.flid = msg.flid || path.dirname(node.path);\n\nmsg.payload = msg.payload.filter(function (obj) {\n    return (obj.id == msg.flid || obj.z == msg.flid )\n});\n\nvar flow_node = msg.payload.filter( (obj) => {\n    return obj.id == msg.flid \n})[0];\n\nmsg.payload = msg.payload.map((nde) => {\n    return {\n        flow: flow_node.name || flow_node.label,\n        name: nde.name || nde.label,\n        type: nde.type,\n        id:   nde.id\n    }\n})\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"path","module":"path"}],"x":659.5714111328125,"y":349.4285888671875,"wires":[["244cc9ce8b06feb2"]]},{"id":"89bed628deb64df6","type":"json","z":"d5b88fb479895490","g":"d3a853a462874680","name":"","property":"payload","action":"","pretty":false,"x":500.5714111328125,"y":242.5714111328125,"wires":[["57cb2c9232eabfe3"]]},{"id":"2d32a243613fa75a","type":"GetFlows","z":"d5b88fb479895490","g":"d3a853a462874680","name":"","flowVersion":"v1","useAuthentication":false,"apiUsername":"","apiUsernameType":"env","apiPassword":"","apiPasswordType":"env","x":371.2857666015625,"y":349.4285888671875,"wires":[["89bed628deb64df6"]]},{"id":"39639d71ce7583f6","type":"inject","z":"d5b88fb479895490","g":"d3a853a462874680","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":246.2857666015625,"y":242.5714111328125,"wires":[["2d32a243613fa75a"]]},{"id":"decb892d0194e97a","type":"debug","z":"d5b88fb479895490","g":"d3a853a462874680","name":"debug 22","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":925,"y":349.4285888671875,"wires":[]},{"id":"244cc9ce8b06feb2","type":"template","z":"d5b88fb479895490","g":"d3a853a462874680","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!--\n{{#payload}}\n// [{{flow}}] [{{type}}] \"{{name}}\" - {{id}}\n{{/payload}}\n-->\n","output":"str","x":817,"y":242.5714111328125,"wires":[["decb892d0194e97a"]]}]