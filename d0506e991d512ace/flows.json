[{"id":"d0506e991d512ace","type":"tab","label":"[Introspection] Develop Node-RED nodes in Node-RED","disabled":false,"info":"::: aim\n\nCreate a setup whereby I can create, edit and install Node-RED nodes within Node-RED.\n\n:::\n\n::: requirements\n\n- GITHUB_TOKEN set in the env, details described in the [GitHub Base functionality](https://flowhub.org/f/390ee0021ded4910)\n- [GitHub Base funtionality](https://flowhub.org/f/390ee0021ded4910) flow\n- [introspection node package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection) for the ClientCode node\n\n- For GitHub commits, the repository needs to be created and one commit needs to have been done.\n\n- For NPM publish, there needs to be an env variable `NPM_AUTH_TOKEN` that needs to be defined.\n\nNpm packages used but should be installed by Node-RED:\n\n- [libnpmpublish](https://www.npmjs.com/package/libnpmpublish)\n- [tar-stream](https://www.npmjs.com/package/tar-stream)\n- [pako](https://www.npmjs.com/package/pako)\n- [memory-streams](https://www.npmjs.com/package/memory-streams)\n\n::: \n\n\n### Assumption\n\nThat the package name is scoped with a username, i.e. `@username/node-red-contrib-XYZ`.\n\nThe registry to publish to is assumed to be `https://registry.npmjs.org`.\n\n::: discussion \n\nIf I want to extend my Emacs, I don't open Vi to create my extensions, I do this in Emacs. I extend Emacs *with* Emacs.\n\nWhy should this be any different in Node-RED?\n\nHence this flow to demonstrate that idea.\n\n:::\n\n::: explanation\n\nWork In Progress.\n\nThis will install a new Node called TarBall for creating tar balls, gzipped. These tarballs can then be installed as new nodes within Node-RED.\n\n:::\n\n","env":[]},{"id":"3808a12e8d5d8a41","type":"group","z":"d0506e991d512ace","name":"Change GitHub details here","style":{"fill":"#e3f3d3","label":true,"fill-opacity":"0.67"},"nodes":["52c9d2dbb39a90ed"],"x":1176.77783203125,"y":896.2222290039062,"w":292,"h":82},{"id":"993d4ac49c363916","type":"group","z":"d0506e991d512ace","name":"Update if files added to the package","style":{"fill":"#c8e7a7","label":true,"fill-opacity":"0.42"},"nodes":["98976c80f379fd02"],"x":615.7778854370117,"y":1008.2222423553467,"w":252,"h":82},{"id":"e7faebf7a2b2746c","type":"function","z":"d0506e991d512ace","name":"generate .tgz","func":"const pack = tarStream.pack()\n\nmsg.contents.forEach( (elem) => {\n  pack.entry({ name: elem.name }, elem.contents)\n})\n\npack.finalize()\n\nvar writer = new memoryStreams.WritableStream();\n\npack.pipe(writer);\n\nwriter.on('finish', function () {\n  var buf = Buffer.from(pakoGzip.gzip(writer.toBuffer()))\n\n  msg.payload = buf;\n  \n  node.send(msg);\n  node.done();\n});\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"tarStream","module":"tar-stream"},{"var":"memoryStreams","module":"memory-streams"},{"var":"pakoGzip","module":"pako"}],"x":1013.7778930664062,"y":924.2222290039062,"wires":[["a0c584653c9b9f50"]]},{"id":"2a6775a8c79c806f","type":"template","z":"d0506e991d512ace","name":"LICENSE","field":"contents.license","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"## LICENSE\n\nAdapted from JSON.org, http://www.json.org/license.html\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe Software shall be used for Good, not Evil.\n\nRemember the curse of the evil-doer upon whose blood the devil does drink and upon whose flesh the devil does feast. For eternity will the evil-doer bear this Sisyphean burden, only to be relieved of their suffering upon the apocalyptic end of it all including the foundations of the internet, computers, technology and mice. Only after the last AI enters the blue-screen-of-death modus, only then will the evil-doer be freed of their rightful and justified punishment for doing evil.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nTHE CURSE IS PROVIDED \"AS IS\" OR \"WORSE\", NO SOFTENING OF ANY KIND IS HEREBY EXPRESSED, IMPLIED OR OFFERED. MAY ALL EVIL-DOERS SUFFER IN ETERNITY.\n","output":"str","x":440.7778854370117,"y":749.2222423553467,"wires":[["afcb5f0634d9c8ed"]]},{"id":"afcb5f0634d9c8ed","type":"template","z":"d0506e991d512ace","name":"README.md","field":"contents.readme_md","fieldType":"msg","format":"markdown","syntax":"mustache","template":"## TarBall for Node-RED\n\nWork in progress\n","output":"str","x":430.7778854370117,"y":790.2222423553467,"wires":[["510df0dc73cc31f0"]]},{"id":"510df0dc73cc31f0","type":"template","z":"d0506e991d512ace","name":"package.json","field":"contents.package_json","fieldType":"msg","format":"json","syntax":"mustache","template":"{\n  \"name\" : \"@gregoriusrippenstein/node-red-contrib-tarball\",\n  \"version\": \"{{ pversion }}\",\n  \"dependencies\": {\n    \"pako\": \"latest\",\n    \"memory-streams\": \"latest\",\n    \"tar-stream\": \"latest\"\n  },\n\n  \"keywords\": [\n    \"node-red\", \"tar\", \"ball\", \"tarball\"\n  ],\n\n  \"homepage\": \"https://flowhub.org\",\n  \"license\": \"Don't do evil.\",\n  \"author\": \"Gerrit Riessen <stupidity@spreads-the.love> (https://spread-the.love)\",\n  \"engines\": {\n    \"node\": \">=16\"\n  },\n\n  \"node-red\" : {\n    \"version\": \">=2.0.0\",\n    \"nodes\": {\n      \"tarball\":   \"nodes/90-tarball.js\"\n    }\n  },\n\n  \"description\": \"Generate a tarball from a bunch of files.\",\n  \"repository\": {\n    \"type\": \"flowhub\",\n    \"url\": \"git+https://github.com/gorenje/node-red-contrib-flowhub.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://flowhub.org\"\n  }\n}\n","output":"str","x":430.7778854370117,"y":829.2222423553467,"wires":[["8c064319f0461453"]]},{"id":"8c064319f0461453","type":"template","z":"d0506e991d512ace","name":"90-taball.html","field":"contents.tarball_html","fieldType":"msg","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n    RED.nodes.registerType('TarBall',{\n        category: 'function',\n        color:\"#DEBD5C\",\n        defaults: {\n        name: {value:\"\"}\n        },\n        inputs:1,\n        outputs:1,\n        icon: \"font-awesome/fa-trademark\",\n        label: function() {\n            return this.name || this._def.paletteLabel;\n        },\n        labelStyle: function() {\n            return this.name?\"node_label_italic\":\"\";\n        }\n});\n</script>\n\n<script type=\"text/html\" data-template-name=\"TarBall\">\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> <span data-i18n=\"node-red:common.label.name\"></span></label>\n        <input type=\"text\" id=\"node-input-name\" data-i18n=\"[placeholder]node-red:common.label.name\">\n    </div>\n</script>\n\n<script type=\"text/html\" data-help-name=\"TarBall\">\n    <p>\n        Tarballirise msg content.\n    </p>\n</script>","output":"str","x":464.77789306640625,"y":911.2222290039062,"wires":[["b5ad22fbced928c8"]]},{"id":"b5ad22fbced928c8","type":"template","z":"d0506e991d512ace","name":"90-tarball.js","field":"contents.tarball_js","fieldType":"msg","format":"javascript","syntax":"mustache","template":"module.exports = function (RED) {\n    function TarBallFunctionality(config) {\n        RED.nodes.createNode(this, config);\n\n        var node = this;\n        var cfg = config;\n\n        const tarStream = require('tar-stream');\n        const memoryStreams = require('memory-streams');\n        const pakoGzip = require('pako')\n\n        node.on('close', function () {\n            node.status({});\n        });\n\n        node.on(\"input\", function (msg, send, done) {\n            const pack = tarStream.pack()\n\n            msg.contents.forEach((elem) => {\n                pack.entry({ name: elem.name }, elem.contents)\n            })\n\n            pack.finalize()\n\n            var writer = new memoryStreams.WritableStream();\n\n            pack.pipe(writer);\n\n            writer.on('finish', function () {\n                msg.payload = Buffer.from(pakoGzip.gzip(writer.toBuffer()));\n                send(msg)\n                done()\n            });\n        });\n    };\n\n    RED.nodes.registerType(\"TarBall\", TarBallFunctionality);\n}","output":"str","x":474.77789306640625,"y":955.2222290039062,"wires":[["98976c80f379fd02"]]},{"id":"2b18be6bbfbd26a5","type":"inject","z":"d0506e991d512ace","name":"set package detials and actions here","props":[{"p":"pversion","v":"0.0.5","vt":"str"},{"p":"gitcommit","v":"false","vt":"bool"},{"p":"commit_message","v":"testing","vt":"str"},{"p":"noderedinstall","v":"false","vt":"bool"},{"p":"npmpush","v":"false","vt":"bool"},{"p":"npmotp","v":"723564","vt":"str"},{"p":"contents","v":"{}","vt":"json"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":470.77789306640625,"y":360.22222900390625,"wires":[["2a6775a8c79c806f"]]},{"id":"a0c584653c9b9f50","type":"ClientCode","z":"d0506e991d512ace","name":"Node-RED Install ","clientcode":"var f = new File([new Blob([new Uint8Array(payload.data)])], \"tarball.tgz\", { type: \"application/x-gzip\" });\n\nvar data = new FormData();\ndata.append(\"tarball\", f);\nvar filename = f.name;\n\n$.ajax({\n    url: 'nodes',\n    data: data,\n    cache: false,\n    contentType: false,\n    processData: false,\n    method: 'POST',\n}).always(function (data, textStatus, xhr) {\n}).success(function() {\n    RED.notify(\"Installed new package\", { type: \"success\"})\n}).fail(function (xhr, textStatus, err) {\n    var message = textStatus;\n    if (xhr.responseJSON) {\n        message = xhr.responseJSON.message;\n    }\n    var notification = RED.notify(RED._('palette.editor.errors.installFailed', { module: filename, message: message }), {\n        type: 'error',\n        modal: true,\n        fixed: true,\n        buttons: [\n            {\n                text: RED._(\"common.label.close\"),\n                click: function () {\n                    notification.close();\n                }\n            }, {\n                text: RED._(\"eventLog.view\"),\n                click: function () {\n                    notification.close();\n                    RED.actions.invoke(\"core:show-event-log\");\n                }\n            }\n        ]\n    });\n})","format":"javascript","x":1011.7778930664062,"y":839.2222290039062,"wires":[[]]},{"id":"98976c80f379fd02","type":"function","z":"d0506e991d512ace","g":"993d4ac49c363916","name":"package dir structure","func":"msg.contents = [\n    { name: 'package/LICENSE', contents: msg.contents.license },\n    { name: 'package/README.md', contents: msg.contents.readme_md },\n    { name: 'package/package.json', contents: msg.contents.package_json},\n    { name: 'package/nodes/90-tarball.html', contents: msg.contents.tarball_html},\n    { name: 'package/nodes/90-tarball.js', contents: msg.contents.tarball_js},\n]\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":741.7778854370117,"y":1049.2222423553467,"wires":[["2683d81e8a4b64ab","8b5643cf5e2dccc4","0951d8657919ec86"]]},{"id":"2683d81e8a4b64ab","type":"switch","z":"d0506e991d512ace","name":"noderedinstall","property":"noderedinstall","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1016.7778930664062,"y":992.2222290039062,"wires":[["e7faebf7a2b2746c"]]},{"id":"8b5643cf5e2dccc4","type":"switch","z":"d0506e991d512ace","name":"gitcommit","property":"gitcommit","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1312.77783203125,"y":1019.2222290039062,"wires":[["52c9d2dbb39a90ed"]]},{"id":"0951d8657919ec86","type":"switch","z":"d0506e991d512ace","name":"npmpush","property":"npmpush","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1724.77783203125,"y":1045.2222900390625,"wires":[["7e05060ad0c4b0ae"]]},{"id":"b49254be1ffd7f40","type":"function","z":"d0506e991d512ace","name":"prepare tree","func":"msg.payload = msg.contents.map( (elem) => {\n    elem.name = elem.name.replace(\"package/\",\"\")\n    // @ts-ignore\n    elem.contents = RED.util.ensureBuffer(elem.contents).toString('base64')\n    return elem;\n})\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1306.77783203125,"y":692.2222290039062,"wires":[["b1ad2d6f00cd4476"]]},{"id":"52c9d2dbb39a90ed","type":"change","z":"d0506e991d512ace","g":"3808a12e8d5d8a41","name":"owner, repo, branch, author","rules":[{"t":"set","p":"owner","pt":"msg","to":"gorenje","tot":"str"},{"t":"set","p":"repo","pt":"msg","to":"node-red-contrib-tarball","tot":"str"},{"t":"set","p":"branch","pt":"msg","to":"main","tot":"str"},{"t":"set","p":"author","pt":"msg","to":"{\t    \"name\": \"Gerrit Riessen\",\t    \"email\": \"gerrit@openmindmap.org\"\t}","tot":"jsonata"},{"t":"set","p":"message","pt":"msg","to":"commit_message","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1322.77783203125,"y":937.2222290039062,"wires":[["8468193a6084d4f4"]]},{"id":"b1ad2d6f00cd4476","type":"split","z":"d0506e991d512ace","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1301.77783203125,"y":631.2222290039062,"wires":[["c37193279bcb55cd"]]},{"id":"66e209a52688542c","type":"link call","z":"d0506e991d512ace","name":"","links":["08d2d7135f31a878"],"linkType":"static","timeout":"30","x":1305.77783203125,"y":486.22222900390625,"wires":[["b522a5152706ad07"]]},{"id":"c37193279bcb55cd","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"filename","pt":"msg","to":"payload.name","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"payload.contents","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1305.7777786254883,"y":562.2222156524658,"wires":[["66e209a52688542c"]]},{"id":"b522a5152706ad07","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\t    \"path\": $$.filename,\t    \"sha\": $$.payload\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1302.77783203125,"y":424.22222900390625,"wires":[["4de77b4ed267a790"]]},{"id":"4de77b4ed267a790","type":"join","z":"d0506e991d512ace","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","reduceRight":false,"x":1300.77783203125,"y":354.22222900390625,"wires":[["da866da706b3a30c"]]},{"id":"da866da706b3a30c","type":"link call","z":"d0506e991d512ace","name":"","links":["78d886e3f8af26b7"],"linkType":"static","timeout":"30","x":1300.7777786254883,"y":289.2222156524658,"wires":[["315595ae0c04e23c"]]},{"id":"63b835932b76b439","type":"link call","z":"d0506e991d512ace","name":"","links":["2df1a9a310e8a9fd"],"linkType":"static","timeout":"30","x":1288.77783203125,"y":188.22222900390625,"wires":[["42b6d95993c54b76"]]},{"id":"8468193a6084d4f4","type":"link call","z":"d0506e991d512ace","name":"","links":["c90bd91e45e1ac7e"],"linkType":"static","timeout":"30","x":1326.77783203125,"y":821.2222290039062,"wires":[["bb3ee2c3d46386a3"]]},{"id":"bb3ee2c3d46386a3","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"parent_sha","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1319.77783203125,"y":762.2222290039062,"wires":[["b49254be1ffd7f40"]]},{"id":"315595ae0c04e23c","type":"link call","z":"d0506e991d512ace","name":"","links":["ab95f13fbc3a2d5b"],"linkType":"static","timeout":"30","x":1299,"y":238.99998474121094,"wires":[["63b835932b76b439"]]},{"id":"854adf12ebe2ccd9","type":"function","z":"d0506e991d512ace","name":"npm publish","func":"var manifest = JSON.parse( msg.contents.filter( (d) => {\n    return d.name == \"package/package.json\"\n})[0].contents);\n\nconst libpub = libnpmpublish;\n\nvar opts = {\n    userAgent: \"node-red@1.1.1\",\n    access: \"public\",\n    otp: msg.npmotp,\n    authToken: process.env.NPM_AUTH_TOKEN,\n    '//registry.npmjs.org/:_authToken': process.env.NPM_AUTH_TOKEN,\n};\n\nvar userscope = manifest.name.split(\"/\")[0];\nopts[userscope +\":registry\"] = \"https://registry.npmjs.org\"\n\nlibpub.publish(\n    manifest, msg.tarball, opts\n).then( (data) => {\n    msg.payload = JSON.stringify(data);\n    node.send(msg)\n}).catch( (exp) => {\n    msg.error = exp;\n    node.error( \"publish failed\", msg)\n})\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"libnpmpublish","module":"libnpmpublish"},{"var":"process","module":"process"}],"x":1728,"y":839,"wires":[["f956743524141d8e"]]},{"id":"7e05060ad0c4b0ae","type":"function","z":"d0506e991d512ace","name":"generate .tgz","func":"const pack = tarStream.pack()\n\nmsg.contents.forEach( (elem) => {\n  pack.entry({ name: elem.name }, elem.contents)\n})\n\npack.finalize()\n\nvar writer = new memoryStreams.WritableStream();\n\npack.pipe(writer);\n\nwriter.on('finish', function () {\n  var buf = Buffer.from(pakoGzip.gzip(writer.toBuffer()))\n\n  msg.payload = buf;\n  \n  node.send(msg);\n  node.done();\n});\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"tarStream","module":"tar-stream"},{"var":"memoryStreams","module":"memory-streams"},{"var":"pakoGzip","module":"pako"}],"x":1751,"y":992,"wires":[["1d3c814d4b31393e"]]},{"id":"1d3c814d4b31393e","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"tarball","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1720,"y":932,"wires":[["854adf12ebe2ccd9","0f51c7a761800234"]]},{"id":"f956743524141d8e","type":"debug","z":"d0506e991d512ace","name":"result of npm push","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1747,"y":761,"wires":[]},{"id":"42b6d95993c54b76","type":"debug","z":"d0506e991d512ace","name":"new github commit revision","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1285,"y":126,"wires":[]},{"id":"0f51c7a761800234","type":"debug","z":"d0506e991d512ace","name":"debug 42","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2042,"y":927,"wires":[]},{"id":"5e278729dd34c761","type":"catch","z":"d0506e991d512ace","name":"","scope":null,"uncaught":false,"x":1739,"y":75,"wires":[["21d595e59335c518"]]},{"id":"21d595e59335c518","type":"debug","z":"d0506e991d512ace","name":"exception happened","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1985,"y":76,"wires":[]}]