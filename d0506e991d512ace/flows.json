[{"id":"d0506e991d512ace","type":"tab","label":"[Introspection] Develop Node-RED nodes in Node-RED","disabled":false,"info":"::: aim\n\nCreate a setup whereby I can create, edit and install Node-RED nodes within Node-RED.\n\n:::\n\n::: requirements\n\n- GITHUB_TOKEN set in the env, details described in the [GitHub Base functionality](https://flowhub.org/f/390ee0021ded4910)\n- [GitHub Base funtionality](https://flowhub.org/f/390ee0021ded4910) flow\n- [nodedev node package](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-nodedev) that ironically needs this flow.\n\n- For GitHub commits, the repository needs to be created and one commit needs to have been done.\n\n- For NPM publish, there needs to be an env variable `NPM_AUTH_TOKEN` that needs to be defined.\n\n- For NPM publish, authentication is assumed to be OTP (one time password) and the OTP has to be entered, the flow deployed and then the button pressed. So an OTP with longer expiry might be good.\n\nNpm packages used but should be installed by Node-RED:\n\n- [libnpmpublish](https://www.npmjs.com/package/libnpmpublish)\n- [tar-stream](https://www.npmjs.com/package/tar-stream)\n- [pako](https://www.npmjs.com/package/pako)\n- [ajv](https://www.npmjs.com/package/ajv)\n\n::: \n\n\n### Assumption\n\nThat the package name is scoped with a username, i.e. `@username/node-red-contrib-XYZ`.\n\nThe registry to publish to is assumed to be `https://registry.npmjs.org`.\n\n::: discussion \n\nIf I want to extend my Emacs, I don't open Vi to create my extensions, I do this in Emacs. I extend Emacs *with* Emacs.\n\nWhy should this be any different in Node-RED?\n\nHence this flow to demonstrate that idea.\n\n:::\n\n::: explanation\n\nWork In Progress.\n\nThis will install a new Node called TarBall for creating tar balls, gzipped. These tarballs can then be installed as new nodes within Node-RED.\n\n:::\n\n### Related flows\n\n- [NodeDev node development](https://flowhub.org/f/b92be5062203ff69)","env":[]},{"id":"aba9a5d741241f1c","type":"group","z":"d0506e991d512ace","name":"entry point","style":{"label":true,"fill":"#c8e7a7","fill-opacity":"0.83"},"nodes":["963dfb765b0d9849"],"x":334.0001220703125,"y":636.0000219345093,"w":82,"h":82},{"id":"84dc95060331b2f1","type":"group","z":"d0506e991d512ace","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a38e9190036ffc69","19a96d433724fbe5","fe5932e108106566"],"x":460,"y":158.5,"w":408,"h":130},{"id":"f3879ed58795ea91","type":"group","z":"d0506e991d512ace","name":"example message","style":{"fill":"#addb7b","label":true},"nodes":["9c62729b0ebd76ad"],"x":228,"y":409,"w":332,"h":82},{"id":"893f316ea815e2b1","type":"junction","z":"d0506e991d512ace","x":808.7144047021866,"y":1195.857177734375,"wires":[["2683d81e8a4b64ab","8b5643cf5e2dccc4","0951d8657919ec86","3e9ac86aba852cdc"]]},{"id":"2683d81e8a4b64ab","type":"switch","z":"d0506e991d512ace","name":"noderedinstall","property":"noderedinstall","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1070.4247131347656,"y":1138.0794677734375,"wires":[["3a0d53eb62336e62"]]},{"id":"8b5643cf5e2dccc4","type":"switch","z":"d0506e991d512ace","name":"gitcommit","property":"gitcommit","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1381.8891220092773,"y":1148.6720110575359,"wires":[["4b7ff9296a6d9bc0"]]},{"id":"0951d8657919ec86","type":"switch","z":"d0506e991d512ace","name":"npmpublish","property":"npmpublish","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1744.1428833007812,"y":1165.2646484375,"wires":[["b0cf59b6f0477186"]]},{"id":"b49254be1ffd7f40","type":"function","z":"d0506e991d512ace","name":"prepare tree","func":"msg.payload = msg.contents.map( (elem) => {\n    var newelem = { ...elem};\n    \n    if ( elem.type != \"base64\") {\n        // @ts-ignore\n        newelem.contents = RED.util.ensureBuffer(elem.contents).toString('base64')\n    }\n\n    delete newelem.type;\n    return newelem;\n})\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1381.8891220092773,"y":692.1428418159485,"wires":[["b1ad2d6f00cd4476"]]},{"id":"52c9d2dbb39a90ed","type":"change","z":"d0506e991d512ace","name":"owner, repo, branch, author","rules":[{"t":"set","p":"owner","pt":"msg","to":"githubowner","tot":"msg"},{"t":"set","p":"repo","pt":"msg","to":"githubrepo","tot":"msg"},{"t":"set","p":"branch","pt":"msg","to":"githubbranch","tot":"msg"},{"t":"set","p":"author","pt":"msg","to":"{\t    \"name\": $$.githubauthor,\t    \"email\": $$.githubauthoremail\t}","tot":"jsonata"},{"t":"set","p":"message","pt":"msg","to":"commit_message","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1381.8891220092773,"y":879,"wires":[["8468193a6084d4f4"]]},{"id":"b1ad2d6f00cd4476","type":"split","z":"d0506e991d512ace","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1381.8891220092773,"y":629.8571224212646,"wires":[["c37193279bcb55cd"]]},{"id":"66e209a52688542c","type":"link call","z":"d0506e991d512ace","name":"","links":["08d2d7135f31a878"],"linkType":"static","timeout":"30","x":1381.8891220092773,"y":505.285683631897,"wires":[["b522a5152706ad07"]]},{"id":"c37193279bcb55cd","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"filename","pt":"msg","to":"payload.name","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"payload.contents","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1381.8891220092773,"y":567.5714030265808,"wires":[["66e209a52688542c"]]},{"id":"b522a5152706ad07","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\t    \"path\": $$.filename,\t    \"sha\": $$.payload\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1381.8891220092773,"y":442.99996423721313,"wires":[["4de77b4ed267a790"]]},{"id":"4de77b4ed267a790","type":"join","z":"d0506e991d512ace","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","reduceRight":false,"x":1381.8891220092773,"y":380.7142448425293,"wires":[["da866da706b3a30c"]]},{"id":"da866da706b3a30c","type":"link call","z":"d0506e991d512ace","name":"","links":["78d886e3f8af26b7"],"linkType":"static","timeout":"30","x":1381.8891220092773,"y":318.42852544784546,"wires":[["315595ae0c04e23c"]]},{"id":"63b835932b76b439","type":"link call","z":"d0506e991d512ace","name":"","links":["2df1a9a310e8a9fd"],"linkType":"static","timeout":"30","x":1381.8891220092773,"y":193.85708665847778,"wires":[["42b6d95993c54b76"]]},{"id":"8468193a6084d4f4","type":"link call","z":"d0506e991d512ace","name":"","links":["c90bd91e45e1ac7e"],"linkType":"static","timeout":"30","x":1381.8891220092773,"y":818.7142944335938,"wires":[["bb3ee2c3d46386a3"]]},{"id":"bb3ee2c3d46386a3","type":"change","z":"d0506e991d512ace","name":"","rules":[{"t":"set","p":"parent_sha","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1381.8891220092773,"y":754.4285612106323,"wires":[["b49254be1ffd7f40"]]},{"id":"315595ae0c04e23c","type":"link call","z":"d0506e991d512ace","name":"","links":["ab95f13fbc3a2d5b"],"linkType":"static","timeout":"30","x":1381.8891220092773,"y":256.1428060531616,"wires":[["63b835932b76b439"]]},{"id":"42b6d95993c54b76","type":"debug","z":"d0506e991d512ace","name":"new github commit revision","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1381.8891220092773,"y":131.57136726379395,"wires":[]},{"id":"3e9ac86aba852cdc","type":"switch","z":"d0506e991d512ace","name":"npmunpublish","property":"npmunpublish","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":2077.571533203125,"y":1195.857177734375,"wires":[["322c935769b095ce"]]},{"id":"1ee5da0dca96b684","type":"debug","z":"d0506e991d512ace","name":"result of npm unpublish","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2077.571533203125,"y":818.7142944335938,"wires":[]},{"id":"28cf42d94ce33b87","type":"template","z":"d0506e991d512ace","name":"msg - schema","field":"msgschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"Basic requirements for this flow.\",\n    \"type\": \"object\",\n    \"required\": [\n        \"noderedinstall\",\n        \"gitcommit\",\n        \"npmpublish\",\n        \"npmunpublish\",\n        \"contents\"\n    ],\n    \"$defs\": {\n        \"content\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"contents\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the file to be included in the package.\"\n                },\n                \"contents\": {\n                    \"type\": \"string\",\n                    \"description\": \"Contents of the file to be included in the package. Binary data should be encoded in base64.\"\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"Value describes the type of the content, default is utf-8.\",\n                    \"enum\": [\"text\", \"utf-8\", \"html\", \"javascript\", \"markdown\", \"json\", \"base64\"]\n                }\n            }            \n        }\n    },\n    \"properties\": {\n        \"noderedinstall\": {\n            \"type\": \"boolean\",\n            \"description\": \"Install the node into Node-RED.\"\n        },\n        \"gitcommit\": {\n            \"type\": \"boolean\",\n            \"description\": \"Perform a GitHub commit with the package files.\"\n        },\n        \"npmpublish\": {\n            \"type\": \"boolean\",\n            \"description\": \"Publish package to NPM.\"\n        },\n        \"npmunpublish\": {\n            \"type\": \"boolean\",\n            \"description\": \"Unpublish package to NPM.\"\n        },\n        \"contents\": {\n            \"type\": \"array\",\n            \"description\": \"Contents of the package, all names should be prefixed with package/. Minimum: LICENSE, README and package.json --> 3.\",\n            \"minItems\": 3,\n            \"items\": {\n                \"$ref\": \"#/$defs/content\"\n            }\n        }\n    }\n}","output":"json","x":512.5715179443359,"y":922.142783164978,"wires":[["53b14ae388748261"]]},{"id":"963dfb765b0d9849","type":"link in","z":"d0506e991d512ace","g":"aba9a5d741241f1c","name":"[nodedev-backend] entry point","links":["240f4b9098531b8e","6713609873f293c7","328f51ddaf7f2798","dca7abf167c0e5dd"],"x":375.0001220703125,"y":677.0000219345093,"wires":[["28cf42d94ce33b87"]]},{"id":"2a7132258cbcf313","type":"function","z":"d0506e991d512ace","name":"Package.json validator","func":"/* must have a package.json */\n\nvar pkgjson = msg.contents.filter((d) => {\n    return d.name == \"package.json\"\n});\n\nif ( pkgjson.length != 1 ) {\n    if ( pkgjson.length > 1 ) {\n      node.error(\"multiple package.json files found\", msg)\n    } else {\n      node.error(\"no package.json file found\", msg)\n    }\n    node.done();\n    return;\n}\n\n/* name must be scoped */\n\nvar manifest = JSON.parse(pkgjson[0].contents);\n\nvar pdetails = manifest.name.split(\"/\")\n\nif (pdetails.length < 2 || pdetails[0][0] != '@') {\n    node.error(\"package name not scoped: \" + manifest.name, msg)\n    node.done();\n    return\n}\n\n/* ensure contents is not empty */\n\nmsg.contents.forEach( (d) => {\n  if ( !d.contents || d.contents.trim() == \"\" ) {\n    node.error(\"file empty: \" + d.name, msg)\n    node.done();\n    return\n  }\n});\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"Ajv","module":"ajv"}],"x":725.1430130004883,"y":1077.5714178085327,"wires":[["893f316ea815e2b1"]],"outputLabels":["ok"]},{"id":"4b7ff9296a6d9bc0","type":"template","z":"d0506e991d512ace","name":"msg - schema","field":"msgschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"Propperties required on the msg for GitHub commit.\",\n    \"type\": \"object\",\n    \"required\": [\n        \"commit_message\",\n        \"githubowner\",\n        \"githubrepo\",\n        \"githubbranch\",\n        \"githubauthor\",\n        \"githubauthoremail\"\n    ],\n    \"properties\": {\n        \"commit_message\": {\n            \"type\": \"string\",\n            \"description\": \"Message for the commit.\"\n        },\n        \"githubowner\": {\n            \"type\": \"string\",\n            \"description\": \"GitHub username.\"\n        },\n        \"githubrepo\": {\n            \"type\": \"string\",\n            \"description\": \"Repository upon which we are acting.\"\n        },\n        \"githubbranch\": {\n            \"type\": \"string\",\n            \"description\": \"The branch on which the commit should be done.\"\n        },\n        \"githubauthor\": {\n            \"type\": \"string\",\n            \"description\": \"Full name of the author of the commit.\"\n        },\n        \"githubauthoremail\": {\n            \"type\": \"string\",\n            \"description\": \"Email of the author for the commit message.\"\n        }\n    }\n}","output":"json","x":1381.8891220092773,"y":1072.857177734375,"wires":[["2b7d94607f1d3dc4"]]},{"id":"2b7d94607f1d3dc4","type":"template","z":"d0506e991d512ace","name":"env - schema","field":"envschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"Environment check for GitHub\",\n    \"type\": \"object\",\n    \"required\": [\n        \"GITHUB_TOKEN\"\n    ],\n    \"properties\": {\n        \"GITHUB_TOKEN\": {\n            \"type\": \"string\",\n            \"description\": \"GitHub authentication token.\"\n        }\n    }\n}\n","output":"json","x":1381.8891220092773,"y":1021.5714111328125,"wires":[["4ab72fdeb28fb58a"]]},{"id":"7b3964f488b8b6f5","type":"template","z":"d0506e991d512ace","name":"env - schema","field":"envschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"Environment check for NPM\",\n    \"type\": \"object\",\n    \"required\": [\n        \"NPM_AUTH_TOKEN\"\n    ],\n    \"properties\": {\n        \"NPM_AUTH_TOKEN\": {\n            \"type\": \"string\",\n            \"description\": \"NPM authentication token.\"\n        }\n    }\n}\n","output":"json","x":2077.571533203125,"y":1021.5714111328125,"wires":[["7eab30457112c8db"]]},{"id":"8bf5f88c81fb6681","type":"template","z":"d0506e991d512ace","name":"env - schema","field":"envschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"Environment check for NPM\",\n    \"type\": \"object\",\n    \"required\": [\n        \"NPM_AUTH_TOKEN\"\n    ],\n    \"properties\": {\n        \"NPM_AUTH_TOKEN\": {\n            \"type\": \"string\",\n            \"description\": \"NPM authentication token.\"\n        }\n    }\n}\n","output":"json","x":1744.1428833007812,"y":1021.5714111328125,"wires":[["5e2d73c95dbfae8c"]]},{"id":"a38e9190036ffc69","type":"function","z":"d0506e991d512ace","g":"84dc95060331b2f1","name":"JSON Schema validator","func":"var validator = new Ajv({\n    allErrors: true,\n    messages: true,\n    allowUnionTypes: true\n})\n\nvar validate;\nvar result;\n\n/* First validate the msg object */\n\nif (msg.msgschema) {\n    validate = validator.compile(msg.msgschema)\n\n    result = validate(msg);\n\n    if (!result) {\n        msg.errors = validate.errors;\n        node.error(\"msg validation failed\", msg)\n        node.done();\n        return;\n    } else {\n        delete msg.msgschema;\n    }\n}\n\n/* validate the environment */\n\nif (msg.envschema) {\n    validate = validator.compile(msg.envschema)\n\n    result = validate(process.env);\n\n    if (!result) {\n        msg.errors = validate.errors;\n        node.error(\"env validation failed\", msg)\n        node.done();\n        return;\n    } else {\n        delete msg.envschema;\n    }\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"Ajv","module":"ajv"},{"var":"process","module":"process"}],"x":663,"y":247.5,"wires":[["fe5932e108106566"]],"outputLabels":["ok"]},{"id":"19a96d433724fbe5","type":"link in","z":"d0506e991d512ace","g":"84dc95060331b2f1","name":"[schema] validator","links":[],"x":501,"y":199.5,"wires":[["a38e9190036ffc69"]]},{"id":"fe5932e108106566","type":"link out","z":"d0506e991d512ace","g":"84dc95060331b2f1","name":"link out 114","mode":"return","links":[],"x":827,"y":199.5,"wires":[]},{"id":"53b14ae388748261","type":"link call","z":"d0506e991d512ace","name":"","links":["19a96d433724fbe5"],"linkType":"static","timeout":"30","x":637.2858581542969,"y":1000.7142086029053,"wires":[["2a7132258cbcf313"]]},{"id":"4ab72fdeb28fb58a","type":"link call","z":"d0506e991d512ace","name":"","links":["19a96d433724fbe5"],"linkType":"static","timeout":"30","x":1381.8891220092773,"y":969,"wires":[["52c9d2dbb39a90ed"]]},{"id":"5e2d73c95dbfae8c","type":"link call","z":"d0506e991d512ace","name":"","links":["19a96d433724fbe5"],"linkType":"static","timeout":"30","x":1744.1428833007812,"y":969,"wires":[["fbe982a35d27d99b"]]},{"id":"7eab30457112c8db","type":"link call","z":"d0506e991d512ace","name":"","links":["19a96d433724fbe5"],"linkType":"static","timeout":"30","x":2077.571533203125,"y":969,"wires":[["3f9377f9c6c4572b"]]},{"id":"b0cf59b6f0477186","type":"template","z":"d0506e991d512ace","name":"msg - schema","field":"msgschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"NPM requires an OTP\",\n    \"type\": \"object\",\n    \"required\": [\n        \"npmotp\"\n    ],\n    \"properties\": {\n        \"npmotp\": {\n            \"type\": \"string\",\n            \"description\": \"One Time Password for NPM.\"\n        }\n    }\n}","output":"json","x":1744.1428833007812,"y":1072.857177734375,"wires":[["8bf5f88c81fb6681"]]},{"id":"322c935769b095ce","type":"template","z":"d0506e991d512ace","name":"msg - schema","field":"msgschema","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"title\": \"NPM requires an OTP\",\n    \"type\": \"object\",\n    \"required\": [\n        \"npmotp\"\n    ],\n    \"properties\": {\n        \"npmotp\": {\n            \"type\": \"string\",\n            \"description\": \"One Time Password for NPM.\"\n        }\n    }\n}","output":"json","x":2077.571533203125,"y":1072.857177734375,"wires":[["7b3964f488b8b6f5"]]},{"id":"8d90825de93a4fa0","type":"catch","z":"d0506e991d512ace","name":"","scope":null,"uncaught":false,"x":522,"y":123,"wires":[["750dfdf64f5d1216"]]},{"id":"750dfdf64f5d1216","type":"debug","z":"d0506e991d512ace","name":"Exceptions Will Happen","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":758,"y":123,"wires":[]},{"id":"9c62729b0ebd76ad","type":"inject","z":"d0506e991d512ace","g":"f3879ed58795ea91","name":"example contents for message","props":[{"p":"pname","v":"@gregoriusrippenstein/node-red-contrib-nodedev","vt":"str"},{"p":"pversion","v":"0.0.3","vt":"str"},{"p":"noderedinstall","v":"true","vt":"bool"},{"p":"gitcommit","v":"false","vt":"bool"},{"p":"githubowner","v":"gorenje","vt":"str"},{"p":"githubrepo","v":"node-red-contrib-nodedev","vt":"str"},{"p":"githubbranch","v":"main","vt":"str"},{"p":"commit_message","v":"nice commit message","vt":"str"},{"p":"githubauthor","v":"Gerrit Riessen","vt":"str"},{"p":"githubauthoremail","v":"gerrit@openmindmap.org","vt":"str"},{"p":"npmpublish","v":"false","vt":"bool"},{"p":"npmunpublish","v":"false","vt":"bool"},{"p":"npmotp","v":"123456","vt":"str"},{"p":"contents","v":"{}","vt":"json"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":404,"y":450,"wires":[[]]},{"id":"f07d2d09465ca725","type":"NodeRedInstall","z":"d0506e991d512ace","name":"","x":1070.4247131347656,"y":818.7142944335938,"wires":[[]]},{"id":"3a0d53eb62336e62","type":"NpmTarBall","z":"d0506e991d512ace","name":"","x":1070.4247131347656,"y":879,"wires":[["f07d2d09465ca725"]]},{"id":"fbe982a35d27d99b","type":"NpmTarBall","z":"d0506e991d512ace","name":"","x":1744.1428833007812,"y":879,"wires":[["33093265f4dfec9d"]]},{"id":"33093265f4dfec9d","type":"NpmPublish","z":"d0506e991d512ace","name":"","otp":"","action":"publish","authToken":"NPM_AUTH_TOKEN","authTokenType":"env","x":1744.1428833007812,"y":818.7142944335938,"wires":[["2f4b14f27919dfab"]]},{"id":"2f4b14f27919dfab","type":"debug","z":"d0506e991d512ace","name":"result of npm publish","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1744.1428833007812,"y":754.4285612106323,"wires":[]},{"id":"3f9377f9c6c4572b","type":"NpmPublish","z":"d0506e991d512ace","name":"Npm Unpublish","otp":"","action":"unpublish","authToken":"NPM_AUTH_TOKEN","authTokenType":"env","x":2077.571533203125,"y":879,"wires":[["1ee5da0dca96b684"]]},{"id":"c9495a6fc736d704","type":"FlowHubPull","z":"d0506e991d512ace","name":"","notab":false,"flowid":"390ee0021ded4910","flowname":"[GitHub] base functionality","x":580,"y":331,"wires":[[]]}]