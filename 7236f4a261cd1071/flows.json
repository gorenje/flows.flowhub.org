[{"id":"7236f4a261cd1071","type":"tab","label":"[Util] Generate self-encapsulated iframe for embedding flows","disabled":false,"info":"::: aim\n\nThis uses the `srcdoc` attribute on iframes to create a self-encapsulated iframe snippet that incorporates the current flow.\n\n:::\n\n### Examples\n\n<iframe width=\"90%\" height=\"100%\" src=\"https://flowhub.org/s/7236f4a261cd1071\" allow=\"clipboard-read; clipboard-write\" style=\"border: none; min-height: 480px;\"></iframe>\n\n\n\n<iframe width=\"100%\" height=\"100%\" srcdoc=\"&amp;lt;!DOCTYPE html&amp;gt;\n&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;\n&amp;lt;head&amp;gt;\n\t&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt;\n\t&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;\n\t&amp;lt;link rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/x-icon&amp;quot; href=&amp;quot;/favicon.ico&amp;quot;/&amp;gt;\n\t&amp;lt;title&amp;gt;FlowHub - Flow Sharing&amp;lt;/title&amp;gt;\n\n    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://cdn.openmindmap.org/embed/flowviewer.css&amp;quot;/&amp;gt;\n    &amp;lt;script src=&amp;quot;https://cdn.openmindmap.org/embed/jquery-3.7.0.min.js&amp;quot; crossorigin=&amp;quot;anonymous&amp;quot; referrerpolicy=&amp;quot;no-referrer&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n    \n    &amp;lt;style&amp;gt;\n        .flowviewer svg {\n            min-height: 450px;\n        }\n    &amp;lt;/style&amp;gt;\n&amp;lt;/head&amp;gt;\n&amp;lt;body class=&amp;quot;flowviewer-share&amp;quot;&amp;gt;\n&amp;lt;style&amp;gt;\n.flowviewer {\n    position: relative;\n}\n.flowviewer svg {\n    --red-ui-view-grid-color: #eee;\n    --red-ui-view-border: 1px solid #bbbbbb;\n    --red-ui-node-border: #999;\n    --red-ui-node-background-default: #eee;\n    --red-ui-node-icon-background-color-fill: black;\n    --red-ui-node-icon-background-color-opacity: 0.1;\n    --red-ui-node-label-color: #333;\n    --red-ui-node-port-background: #d9d9d9;\n    --red-ui-link-color: #999;\n    background-color: white;\n    min-height: 450px;\n    border: var(--red-ui-view-border);\n    border-radius: 3px;\n    position: relative;\n}\n\n.flowviewer svg {\n    width: 100%;\n    height: 100%;\n    min-height: 450px;\n    margin: auto;\n    display: block;\n    border-radius: 2px;\n}\n\n.flowviewer svg {\n    cursor: move;\n    cursor: grab;\n}\n\n.flowviewer .dragging {\n    cursor: grabbing;\n}\n\n.flowviewer-tabs {\n    display: flex;\n}\n.flowviewer-tab {\n    padding: 6px 12px;\n    box-sizing: border-box;\n    display: inline-block;\n    border: 1px solid #bbbbbb;\n    border-right: none;\n    background-color: #f0f0f0;\n    max-width: 200px;\n    width: 14%;\n    overflow: hidden;\n    white-space: nowrap;\n    position: relative;\n    margin-top: -1px;\n    transition: 0.2s background-color;\n}\n.flowviewer-tab.active {\n    background-color: white;\n    border-top-color: white;\n}\n.flowviewer-tab:hover {\n    cursor: pointer;\n    background-color: white;\n}\n.flowviewer-tab:last-child {\n    border-right: 1px solid #bbbbbb;\n}\n\n.flowviewer-note {\n    margin-top: 12px;\n    font-size: 0.875rem;\n    font-style: italic;\n}\n\nbody.flowviewer-share {\n    background-color: inherit;\n}\n\n\n.group-text-label {\n    font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\n\tfont-size: 14px;\n}\n\n.node-text-label {\n\tfont-family: Helvetica Neue, Arial, Helvetica, sans-serif;\n\tfont-size: 14px;\n\tdominant-baseline: middle;\n}\n\n.subflow-node-text-label {\n    color: rgb(85, 85, 85);\n    dominant-baseline: middle;\n    font-family: Helvetica Neue, Arial, Helvetica, sans - serif;\n    font-size: 10px;\n    line-height: 20px;\n    pointer-events: none;\n    text-anchor: middle;\n    user-select: none\n}\n\n.subflow-node-text-label-number {\n    color: rgb(85, 85, 85);\n    dominant-baseline: middle;\n    font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\n    font-size: 16px;\n    line-height: 20px;\n    pointer-events: none;\n    text-anchor: middle;\n    user-select: none\n}\n\n.flow-download-link {\n    font-size: 70%;\n}\n\n.flow-copy-to-clipboard-link {\n    font-size: 70%;\n}\n\n.node {\n    fill-opacity: 1;\n    stroke-width: 1px;\n}\n\n.link {\n    stroke: #999;\n    stroke-width: 3;\n    fill: none;\n}\n\n.link-highlight, .node-highlight {\n    stroke: rgb(255, 127, 14);\n}\n.node-highlight {\n    stroke-width: 3px;\n}\n\n.node-disabled {\n\tstroke-dasharray: 8,3;\n\tfill-opacity: 0.5;\n}\n\n.group-highlight {\n    stroke: rgb(255, 127, 14);\n    stroke-width: 4px;\n    fill: rgb(255, 127, 14);\n    fill-opacity: 0.2;\n}\n\n.link-disabled {\n\tstroke-dasharray: 10,8 !important;\n\tstroke-width: 2 !important;\n\tstroke: rgb(204, 204, 204);\n}\n\n.grid-line {\n    shape-rendering: crispedges;\n    stroke: rgb(238, 238, 238);\n    stroke-width: 1px;\n    fill: none;\n}\n.output-deco {\n    stroke-width: 2px;\n    stroke-miterlimit: 4;\n}\n\n.input-deco {\n    stroke-width: 2px;\n    stroke-miterlimit: 4;\n}\n\n.flow-render-error {\n    background-color: rgb(54, 52, 52);\n    color: rgb(196, 59, 59);\n    width: 100%;\n}\n.flowviewer-share-details {\n    padding: 5px;\n    border: 1px solid #aa6767;\n    background: white;\n    border-bottom-right-radius: 3px;\n    border-top-left-radius: 3px;\n    font-size: 0.8em;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n&amp;lt;/style&amp;gt;\n\n&amp;lt;div&amp;gt;\n    &amp;lt;div class=&amp;quot;flowviewer&amp;quot;&amp;gt;\n        &amp;lt;div style=&amp;quot;position: relative&amp;quot;&amp;gt;\n            &amp;lt;svg&amp;gt;\n                &amp;lt;g class=&amp;quot;flowGridlines&amp;quot;&amp;gt;&amp;lt;/g&amp;gt;\n                &amp;lt;g class=&amp;quot;containerGroup&amp;quot;&amp;gt;\n                    &amp;lt;g class=&amp;quot;flowGroups&amp;quot;&amp;gt;&amp;lt;/g&amp;gt;\n                    &amp;lt;g class=&amp;quot;flowWires&amp;quot;&amp;gt;&amp;lt;/g&amp;gt;\n                    &amp;lt;g class=&amp;quot;flowNodes&amp;quot;&amp;gt;&amp;lt;/g&amp;gt;\n                &amp;lt;/g&amp;gt;\n            &amp;lt;/svg&amp;gt;\n            &amp;lt;button id=&amp;quot;copy-flow&amp;quot; class=&amp;quot;copy-button&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;Copy JSON&amp;lt;/button&amp;gt;\n        &amp;lt;/div&amp;gt;\n        &amp;lt;div style=&amp;quot;display: none;&amp;quot; class=&amp;quot;flowviewer-tabs&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;\n\n\n&amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/d3/7.8.5/d3.min.js&amp;quot; integrity=&amp;quot;sha512-M7nHCiNUOwFt6Us3r8alutZLm9qMt4s9951uo8jqO4UwJ1hziseL6O3ndFyigx6+LREfZqnhHxYjKRJ8ZQ69DQ==&amp;quot; crossorigin=&amp;quot;anonymous&amp;quot; referrerpolicy=&amp;quot;no-referrer&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n\n&amp;lt;head&amp;gt;\n    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://cdn.openmindmap.org/embed/flowviewer.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;/head&amp;gt;\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;\n    (function () {\n\n        var atobUtf8 = (content) =&amp;gt; {\n            function base64ToBytes(base64) {\n              const binString = atob(base64);\n              return Uint8Array.from(binString, (m) =&amp;gt; m.codePointAt(0));\n            }\n            return new TextDecoder().decode(base64ToBytes(content));\n        };\n\n        // pull Flow into JS\n        const flow = ( window.frameElement &amp;amp;&amp;amp; window.frameElement.getAttribute(&amp;#039;data-flow&amp;#039;) &amp;amp;&amp;amp; JSON.parse(atobUtf8(window.frameElement.getAttribute(&amp;#039;data-flow&amp;#039;))) ) || [{&amp;quot;id&amp;quot;:&amp;quot;ec554278a5afbd2f&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;comment&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;b8a44ab3f9a85b8b&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;No flow data found, ensure `data-flow` is set on the containing iframe&amp;quot;,&amp;quot;info&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;x&amp;quot;:785,&amp;quot;y&amp;quot;:294,&amp;quot;wires&amp;quot;:[]}];\n\n        /**\n         * Parse the flow.json to get the details on the tabs/subflows present\n         */\n        const processFlow = function (flow) {\n            const tabids = []\n            const tabs = []\n            flow.forEach((d) =&amp;gt; {\n                if (d.type === &amp;#039;subflow&amp;#039;) {\n                    tabids.push(d.id)\n                    tabs.push({\n                        id: d.id,\n                        label: d.name,\n                        type: &amp;#039;subslow&amp;#039;\n                    })\n                } else if (d.z) {\n                    if (tabids.indexOf(d.z) === -1) {\n                        tabids.push(d.z)\n                        tabs.push({\n                            id: d.z,\n                            label: d.z,\n                            type: &amp;#039;tab&amp;#039;,\n                        })\n                    }\n                }\n            })\n            return tabs\n        }\n\n        function addPanZoom () {\n            var svgs = d3.selectAll(&amp;#039;.flowviewer svg&amp;#039;);\n\n            var svg = $(&amp;quot;.flowviewer svg&amp;quot;);\n\n            svg.attr(&amp;#039;width&amp;#039;,&amp;#039;&amp;#039;);\n            svg.attr(&amp;#039;height&amp;#039;,&amp;#039;&amp;#039;);\n            svg.css(&amp;#039;width&amp;#039;, $(&amp;#039;.flowviewer&amp;#039;).width() + &amp;quot;px&amp;quot;);\n            svg.css(&amp;#039;height&amp;#039;, $(&amp;#039;.flowviewer&amp;#039;).height() + &amp;quot;px&amp;quot;);\n            var bbx = $(&amp;quot;.flowviewer svg .containerGroup&amp;quot;)[0].getBBox();\n            svg.attr(&amp;#039;viewBox&amp;#039;, bbx.x + &amp;quot; &amp;quot; + bbx.y + &amp;quot; &amp;quot; + (bbx.width * 1.1) + &amp;quot; &amp;quot; + (bbx.height * 1.1) )\n\n            svgs.each(function() {\n                var svg = d3.select(this);\n\n                svg.html(&amp;#039;&amp;lt;g&amp;gt;&amp;#039; + svg.html() + &amp;#039;&amp;lt;/g&amp;gt;&amp;#039;);\n                var inner = svg.select(&amp;#039;g&amp;#039;);\n                var zoom = d3.zoom()\n                    .scaleExtent([0.3, 100])\n                    .on(&amp;quot;start&amp;quot;, function () {\n                        svg.classed(&amp;quot;dragging&amp;quot;, true);\n                    })\n                    .on(&amp;#039;zoom&amp;#039;, function(event) {\n                        inner.attr(&amp;#039;transform&amp;#039;, event.transform);\n                    })\n                    .on(&amp;quot;end&amp;quot;, function () {\n                        svg.classed(&amp;quot;dragging&amp;quot;, false);\n                    });\n                svg.call(zoom);\n            });\n        }\n\n        const clearFlow = function () {\n            $(&amp;#039;.flowviewer svg .flowGridlines&amp;#039;).empty()\n            $(&amp;#039;.flowviewer svg .flowGroups&amp;#039;).empty()\n            $(&amp;#039;.flowviewer svg .flowWires&amp;#039;).empty()\n            $(&amp;#039;.flowviewer svg .flowNodes&amp;#039;).empty()\n        }\n        // get the tabs/subflows for our provided flow\n        const tabs = processFlow(flow)\n        // sort them such that tabs render first\n        tabs.sort((a, b) =&amp;gt; {\n            return a.type &amp;gt; b.type ? -1 : (a.type &amp;lt; b.type) ? 1 : 0\n        })\n\n        function openTab (id) {\n            // clear any existing flow\n            clearFlow()\n            // draw the new flow - uses function from `public/js/flowviewer.js`\n            renderFlow(id, flow, $(&amp;#039;.flowviewer svg&amp;#039;), {\n               &amp;quot;arrows&amp;quot;: false,\n               &amp;quot;gridlines&amp;quot;: false,\n               &amp;quot;zoom&amp;quot;: false,\n               &amp;quot;images&amp;quot;: true,\n               &amp;quot;linklines&amp;quot;: false,\n               &amp;quot;dllink&amp;quot;: false,\n               &amp;quot;labels&amp;quot;: true,\n            });\n            addPanZoom()\n        }\n\n        function addTab (tab, index) {\n            const classes = &amp;#039;flowviewer-tab flowviewer-&amp;#039; + tab.type\n            const name = tab.type === &amp;#039;tab&amp;#039; ? &amp;#039;Flow &amp;#039; + (index + 1) : tab.label\n            const tabDOM = $(&amp;#039;.flowviewer-tabs&amp;#039;)\n                .append(`&amp;lt;div id=&amp;quot;flowviewer-tab-${index}&amp;quot; class=&amp;quot;${classes}&amp;quot;&amp;gt;${name}&amp;lt;/div&amp;gt;`)\n                .on(&amp;#039;click&amp;#039;, `#flowviewer-tab-${index}`, function () {\n                    // add on click to each new tab\n                    $(&amp;#039;.flowviewer-tab&amp;#039;).removeClass(&amp;#039;active&amp;#039;)\n                    $(this).addClass(&amp;#039;active&amp;#039;)\n                    openTab(tab.id)\n                })\n        }\n\n        tabs.forEach((tab, index) =&amp;gt; {\n            addTab(tab, index)\n        })\n\n        clearFlow();\n        renderFlow(tabs[0].id, flow, $(&amp;#039;.flowviewer svg&amp;#039;), {\n            &amp;quot;arrows&amp;quot;: false,\n            &amp;quot;gridlines&amp;quot;: false,\n            &amp;quot;zoom&amp;quot;: false,\n            &amp;quot;images&amp;quot;: true,\n            &amp;quot;linklines&amp;quot;: true,\n            &amp;quot;dllink&amp;quot;: false,\n            &amp;quot;labels&amp;quot;: true,\n        });\n        \n        addPanZoom();\n        $(&amp;#039;#flowviewer-tab-0&amp;#039;).addClass(&amp;#039;active&amp;#039;)\n        $(&amp;#039;#copy-flow&amp;#039;).on(&amp;#039;click&amp;#039;, function() {\n            navigator.clipboard.writeText(JSON.stringify(flow));\n        })\n    })()\n&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;\n\" allow=\"clipboard-read; clipboard-write\" style=\"border: none; min-height: 480px;\" data-flow=\"\"></iframe>","env":[]},{"id":"9862bd73e0604af1","type":"group","z":"7236f4a261cd1071","name":"This group is removed from diagram","style":{"label":true},"nodes":["1022cf699914e2b8","f528bb797ce383a9","27907cdacc4fb8bf","cb4121cd28c1a2a6","e58926309a683a97","63222661b47844e7","6350e110c28cac3d","38eddf11e45666b9","25a6b6b1e833312c","8aa3a81a7923e7d0","e2a63bd14f6739d6"],"x":595,"y":728.5,"w":994,"h":407.5},{"id":"d09a3165fc1e0529","type":"junction","z":"7236f4a261cd1071","x":1094.9183914661407,"y":112.57143032550812,"wires":[["12295b584063c9ca"]]},{"id":"1022cf699914e2b8","type":"ClientCode","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"Obtain Frontend Flow","clientcode":"(function () {\n    var activeWorkspace = RED.workspaces.active();\n    var nodes = RED.nodes.groups(activeWorkspace);\n\n    nodes = nodes.concat(RED.nodes.junctions(activeWorkspace));\n    nodes = nodes.concat(RED.nodes.filterNodes({ z: activeWorkspace }));\n\n    RED.nodes.eachConfig(function (n) {\n        if (n.z === RED.workspaces.active() && n._def.hasUsers === false) {\n            // Grab any config nodes scoped to this flow that don't\n            // require any flow-nodes to use them\n            nodes.push(n);\n        }\n    });\n\n    var parentNode = RED.nodes.workspace(\n        activeWorkspace\n    ) || RED.nodes.subflow(activeWorkspace);\n\n    nodes.unshift(parentNode);\n    \n    var expNodes = RED.nodes.createExportableNodeSet(nodes)\n\n    try {\n        var removeGrpId = RED.nodes.node(node.id || nodeid).g;\n\n        expNodes = expNodes.filter( (n) => { return n.g != removeGrpId && n.id != removeGrpId } )\n    } catch (ex) {}\n\n    node.send({ payload: expNodes })    \n})();\n","format":"javascript","x":816,"y":987,"wires":[["cb4121cd28c1a2a6"]]},{"id":"f528bb797ce383a9","type":"debug","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"iframe share code","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1449,"y":1005.5,"wires":[]},{"id":"27907cdacc4fb8bf","type":"inject","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"generate iframe share","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":741,"y":769.5,"wires":[["e2a63bd14f6739d6"]]},{"id":"cb4121cd28c1a2a6","type":"function","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"create iframe string with flow payload","func":"const escapeHtml = (unsafe) => {\n    return unsafe.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\"', '&quot;').replaceAll(\"'\", '&#039;');\n}\n\n/*\nmsg.payload = '<iframe width=\"100%\" height=\"100%\" srcdoc=\"' +\n    msg.original_html.replaceAll('\"','&quot;') +\n    '\" src=\"data:text/html;base64,' +\n    msg.html_base64 +\n    '\" allow=\"clipboard-read; clipboard-write\" style=\"border: none; min-height: 450px;\" data-flow=\"' + Buffer.from(JSON.stringify(msg.payload)).toString('base64') +\n    '\"></iframe>';\n*/\n\nmsg.payload = '<iframe width=\"100%\" height=\"100%\" srcdoc=\"' +\n    escapeHtml(msg.original_html).replaceAll('&', '&amp;') +\n    '\" allow=\"clipboard-read; clipboard-write\" style=\"border: none; min-height: 480px;\" data-flow=\"' + Buffer.from(JSON.stringify(msg.payload)).toString('base64') +\n    '\"></iframe>';\n\nreturn msg","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1013,"y":1061.5,"wires":[["f528bb797ce383a9","6350e110c28cac3d"]]},{"id":"e58926309a683a97","type":"catch","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"","scope":["cb4121cd28c1a2a6"],"uncaught":false,"x":1076,"y":1090,"wires":[["63222661b47844e7"]]},{"id":"63222661b47844e7","type":"debug","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"error","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1382,"y":1095,"wires":[]},{"id":"6350e110c28cac3d","type":"ClientCode","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"copy to clipboard","clientcode":"(function(pload) {\n    function fallbackCopyTextToClipboard(text, cb) {\n        var textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n\n        // Avoid scrolling to bottom\n        textArea.style.top = \"0\";\n        textArea.style.left = \"0\";\n        textArea.style.position = \"fixed\";\n\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n\n        try {\n            var successful = document.execCommand('copy');\n            var msg = successful ? 'successful' : 'unsuccessful';\n\n            if (successful && cb && typeof cb == \"function\") { cb(); }\n\n            console.log('Fallback: Copying text command was ' + msg);\n        } catch (err) {\n            console.error('Fallback: Oops, unable to copy', err);\n        }\n\n        document.body.removeChild(textArea);\n    }\n\n    function copyTextToClipboard(text, cb) {\n        if (!navigator.clipboard) {\n            fallbackCopyTextToClipboard(text,cb);\n            return;\n        }\n\n        navigator.clipboard.writeText(text).then(\n            function () {\n                if (cb && typeof cb == \"function\") { cb(); }\n                console.log('Async: Copying to clipboard was successful!');\n            }, function (err) {\n                console.error('Async: Could not copy text: ', err);\n            }\n        );\n    }\n\n    function copyToClipboard(msg) {\n        copyTextToClipboard(msg.payload, () => {\n            alert('Copied iframe code to clipboard')\n        });\n    }\n\n    copyToClipboard({\n        payload: pload\n    });\n})(payload);\n\nnode.send({ payload: payload })","format":"javascript","x":1473,"y":917.3570556640625,"wires":[[]]},{"id":"a05d92aad7254f48","type":"function","z":"7236f4a261cd1071","name":"function 4","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":814,"y":459,"wires":[["c9e53b6055f7afbb","df8c5957841b30f5"]]},{"id":"c9e53b6055f7afbb","type":"switch","z":"7236f4a261cd1071","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":983,"y":617,"wires":[["079080f37621b7a4","12295b584063c9ca"]]},{"id":"079080f37621b7a4","type":"change","z":"7236f4a261cd1071","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1181,"y":692,"wires":[["1ceb7994cf06ef46"]]},{"id":"df8c5957841b30f5","type":"template","z":"7236f4a261cd1071","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"This is the payload: {{payload}} !","output":"str","x":1536,"y":446,"wires":[[]]},{"id":"1ceb7994cf06ef46","type":"trigger","z":"7236f4a261cd1071","name":"","op1":"1","op2":"0","op1type":"val","op2type":"val","duration":"250","extend":"false","overrideDelay":"false","units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":1369,"y":578,"wires":[["df8c5957841b30f5"]]},{"id":"38eddf11e45666b9","type":"base64","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"","action":"","property":"payload","x":1255,"y":863,"wires":[["25a6b6b1e833312c"]]},{"id":"25a6b6b1e833312c","type":"change","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"","rules":[{"t":"set","p":"html_base64","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1081,"y":924,"wires":[["1022cf699914e2b8"]]},{"id":"8aa3a81a7923e7d0","type":"change","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"","rules":[{"t":"set","p":"original_html","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1118,"y":786,"wires":[["38eddf11e45666b9"]]},{"id":"12295b584063c9ca","type":"html","z":"7236f4a261cd1071","name":"","property":"payload","outproperty":"payload","tag":"","ret":"html","as":"single","x":1090,"y":55,"wires":[["1ceb7994cf06ef46","d09a3165fc1e0529"]]},{"id":"e2a63bd14f6739d6","type":"template","z":"7236f4a261cd1071","g":"9862bd73e0604af1","name":"share.html","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\"/>\n\t<title>FlowHub - Flow Sharing</title>\n\n    <link rel=\"stylesheet\" href=\"https://cdn.openmindmap.org/embed/flowviewer.css\"/>\n    <script src=\"https://cdn.openmindmap.org/embed/jquery-3.7.0.min.js\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n    \n    <style>\n        .flowviewer svg {\n            min-height: 450px;\n        }\n    </style>\n</head>\n<body class=\"flowviewer-share\">\n<style>\n.flowviewer {\n    position: relative;\n}\n.flowviewer svg {\n    --red-ui-view-grid-color: #eee;\n    --red-ui-view-border: 1px solid #bbbbbb;\n    --red-ui-node-border: #999;\n    --red-ui-node-background-default: #eee;\n    --red-ui-node-icon-background-color-fill: black;\n    --red-ui-node-icon-background-color-opacity: 0.1;\n    --red-ui-node-label-color: #333;\n    --red-ui-node-port-background: #d9d9d9;\n    --red-ui-link-color: #999;\n    background-color: white;\n    min-height: 450px;\n    border: var(--red-ui-view-border);\n    border-radius: 3px;\n    position: relative;\n}\n\n.flowviewer svg {\n    width: 100%;\n    height: 100%;\n    min-height: 450px;\n    margin: auto;\n    display: block;\n    border-radius: 2px;\n}\n\n.flowviewer svg {\n    cursor: move;\n    cursor: grab;\n}\n\n.flowviewer .dragging {\n    cursor: grabbing;\n}\n\n.flowviewer-tabs {\n    display: flex;\n}\n.flowviewer-tab {\n    padding: 6px 12px;\n    box-sizing: border-box;\n    display: inline-block;\n    border: 1px solid #bbbbbb;\n    border-right: none;\n    background-color: #f0f0f0;\n    max-width: 200px;\n    width: 14%;\n    overflow: hidden;\n    white-space: nowrap;\n    position: relative;\n    margin-top: -1px;\n    transition: 0.2s background-color;\n}\n.flowviewer-tab.active {\n    background-color: white;\n    border-top-color: white;\n}\n.flowviewer-tab:hover {\n    cursor: pointer;\n    background-color: white;\n}\n.flowviewer-tab:last-child {\n    border-right: 1px solid #bbbbbb;\n}\n\n.flowviewer-note {\n    margin-top: 12px;\n    font-size: 0.875rem;\n    font-style: italic;\n}\n\nbody.flowviewer-share {\n    background-color: inherit;\n}\n\n\n.group-text-label {\n    font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\n\tfont-size: 14px;\n}\n\n.node-text-label {\n\tfont-family: Helvetica Neue, Arial, Helvetica, sans-serif;\n\tfont-size: 14px;\n\tdominant-baseline: middle;\n}\n\n.subflow-node-text-label {\n    color: rgb(85, 85, 85);\n    dominant-baseline: middle;\n    font-family: Helvetica Neue, Arial, Helvetica, sans - serif;\n    font-size: 10px;\n    line-height: 20px;\n    pointer-events: none;\n    text-anchor: middle;\n    user-select: none\n}\n\n.subflow-node-text-label-number {\n    color: rgb(85, 85, 85);\n    dominant-baseline: middle;\n    font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\n    font-size: 16px;\n    line-height: 20px;\n    pointer-events: none;\n    text-anchor: middle;\n    user-select: none\n}\n\n.flow-download-link {\n    font-size: 70%;\n}\n\n.flow-copy-to-clipboard-link {\n    font-size: 70%;\n}\n\n.node {\n    fill-opacity: 1;\n    stroke-width: 1px;\n}\n\n.link {\n    stroke: #999;\n    stroke-width: 3;\n    fill: none;\n}\n\n.link-highlight, .node-highlight {\n    stroke: rgb(255, 127, 14);\n}\n.node-highlight {\n    stroke-width: 3px;\n}\n\n.node-disabled {\n\tstroke-dasharray: 8,3;\n\tfill-opacity: 0.5;\n}\n\n.group-highlight {\n    stroke: rgb(255, 127, 14);\n    stroke-width: 4px;\n    fill: rgb(255, 127, 14);\n    fill-opacity: 0.2;\n}\n\n.link-disabled {\n\tstroke-dasharray: 10,8 !important;\n\tstroke-width: 2 !important;\n\tstroke: rgb(204, 204, 204);\n}\n\n.grid-line {\n    shape-rendering: crispedges;\n    stroke: rgb(238, 238, 238);\n    stroke-width: 1px;\n    fill: none;\n}\n.output-deco {\n    stroke-width: 2px;\n    stroke-miterlimit: 4;\n}\n\n.input-deco {\n    stroke-width: 2px;\n    stroke-miterlimit: 4;\n}\n\n.flow-render-error {\n    background-color: rgb(54, 52, 52);\n    color: rgb(196, 59, 59);\n    width: 100%;\n}\n.flowviewer-share-details {\n    padding: 5px;\n    border: 1px solid #aa6767;\n    background: white;\n    border-bottom-right-radius: 3px;\n    border-top-left-radius: 3px;\n    font-size: 0.8em;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n</style>\n\n<div>\n    <div class=\"flowviewer\">\n        <div style=\"position: relative\">\n            <svg>\n                <g class=\"flowGridlines\"></g>\n                <g class=\"containerGroup\">\n                    <g class=\"flowGroups\"></g>\n                    <g class=\"flowWires\"></g>\n                    <g class=\"flowNodes\"></g>\n                </g>\n            </svg>\n            <button id=\"copy-flow\" class=\"copy-button\" style=\"display: none;\">Copy JSON</button>\n        </div>\n        <div style=\"display: none;\" class=\"flowviewer-tabs\"></div>\n    </div>\n</div>\n\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/7.8.5/d3.min.js\" integrity=\"sha512-M7nHCiNUOwFt6Us3r8alutZLm9qMt4s9951uo8jqO4UwJ1hziseL6O3ndFyigx6+LREfZqnhHxYjKRJ8ZQ69DQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n\n<head>\n    <script type=\"text/javascript\" src=\"https://cdn.openmindmap.org/embed/flowviewer.js\"></script>\n</head>\n<script type=\"text/javascript\">\n    (function () {\n\n        var atobUtf8 = (content) => {\n            function base64ToBytes(base64) {\n              const binString = atob(base64);\n              return Uint8Array.from(binString, (m) => m.codePointAt(0));\n            }\n            return new TextDecoder().decode(base64ToBytes(content));\n        };\n\n        // pull Flow into JS\n        const flow = ( window.frameElement && window.frameElement.getAttribute('data-flow') && JSON.parse(atobUtf8(window.frameElement.getAttribute('data-flow'))) ) || [{\"id\":\"ec554278a5afbd2f\",\"type\":\"comment\",\"z\":\"b8a44ab3f9a85b8b\",\"name\":\"No flow data found, ensure `data-flow` is set on the containing iframe\",\"info\":\"\",\"x\":785,\"y\":294,\"wires\":[]}];\n\n        /**\n         * Parse the flow.json to get the details on the tabs/subflows present\n         */\n        const processFlow = function (flow) {\n            const tabids = []\n            const tabs = []\n            flow.forEach((d) => {\n                if (d.type === 'subflow') {\n                    tabids.push(d.id)\n                    tabs.push({\n                        id: d.id,\n                        label: d.name,\n                        type: 'subslow'\n                    })\n                } else if (d.z) {\n                    if (tabids.indexOf(d.z) === -1) {\n                        tabids.push(d.z)\n                        tabs.push({\n                            id: d.z,\n                            label: d.z,\n                            type: 'tab',\n                        })\n                    }\n                }\n            })\n            return tabs\n        }\n\n        function addPanZoom () {\n            var svgs = d3.selectAll('.flowviewer svg');\n\n            var svg = $(\".flowviewer svg\");\n\n            svg.attr('width','');\n            svg.attr('height','');\n            svg.css('width', $('.flowviewer').width() + \"px\");\n            svg.css('height', $('.flowviewer').height() + \"px\");\n            var bbx = $(\".flowviewer svg .containerGroup\")[0].getBBox();\n            svg.attr('viewBox', bbx.x + \" \" + bbx.y + \" \" + (bbx.width * 1.1) + \" \" + (bbx.height * 1.1) )\n\n            svgs.each(function() {\n                var svg = d3.select(this);\n\n                svg.html('<g>' + svg.html() + '</g>');\n                var inner = svg.select('g');\n                var zoom = d3.zoom()\n                    .scaleExtent([0.3, 100])\n                    .on(\"start\", function () {\n                        svg.classed(\"dragging\", true);\n                    })\n                    .on('zoom', function(event) {\n                        inner.attr('transform', event.transform);\n                    })\n                    .on(\"end\", function () {\n                        svg.classed(\"dragging\", false);\n                    });\n                svg.call(zoom);\n            });\n        }\n\n        const clearFlow = function () {\n            $('.flowviewer svg .flowGridlines').empty()\n            $('.flowviewer svg .flowGroups').empty()\n            $('.flowviewer svg .flowWires').empty()\n            $('.flowviewer svg .flowNodes').empty()\n        }\n        // get the tabs/subflows for our provided flow\n        const tabs = processFlow(flow)\n        // sort them such that tabs render first\n        tabs.sort((a, b) => {\n            return a.type > b.type ? -1 : (a.type < b.type) ? 1 : 0\n        })\n\n        function openTab (id) {\n            // clear any existing flow\n            clearFlow()\n            // draw the new flow - uses function from `public/js/flowviewer.js`\n            renderFlow(id, flow, $('.flowviewer svg'), {\n               \"arrows\": false,\n               \"gridlines\": false,\n               \"zoom\": false,\n               \"images\": true,\n               \"linklines\": false,\n               \"dllink\": false,\n               \"labels\": true,\n            });\n            addPanZoom()\n        }\n\n        function addTab (tab, index) {\n            const classes = 'flowviewer-tab flowviewer-' + tab.type\n            const name = tab.type === 'tab' ? 'Flow ' + (index + 1) : tab.label\n            const tabDOM = $('.flowviewer-tabs')\n                .append(`<div id=\"flowviewer-tab-${index}\" class=\"${classes}\">${name}</div>`)\n                .on('click', `#flowviewer-tab-${index}`, function () {\n                    // add on click to each new tab\n                    $('.flowviewer-tab').removeClass('active')\n                    $(this).addClass('active')\n                    openTab(tab.id)\n                })\n        }\n\n        tabs.forEach((tab, index) => {\n            addTab(tab, index)\n        })\n\n        clearFlow();\n        renderFlow(tabs[0].id, flow, $('.flowviewer svg'), {\n            \"arrows\": false,\n            \"gridlines\": false,\n            \"zoom\": false,\n            \"images\": true,\n            \"linklines\": true,\n            \"dllink\": false,\n            \"labels\": true,\n        });\n        \n        addPanZoom();\n        $('#flowviewer-tab-0').addClass('active')\n        $('#copy-flow').on('click', function() {\n            navigator.clipboard.writeText(JSON.stringify(flow));\n        })\n    })()\n</script></body>\n","output":"str","x":918,"y":831,"wires":[["8aa3a81a7923e7d0"]]}]