[{"id":"291e3f0b7f652839","type":"tab","label":"[Experimental] Auto-layout using Elkjs & dagre","disabled":false,"info":"::: aim\n\nAim is to do autolayout in Node-RED. In this case, using [elkjs](https://github.com/kieler/elkjs) and [dagre](https://github.com/dagrejs/dagre).\n\n:::\n\n::: warning\n\nThis flow does script injecting of the following javascripts:\n\n- [elk.bundled.js](https://cdn.openmindmap.org/thirdparty/elk.bundled.js) \n- [dagre.min.js](https://cdn.openmindmap.org/thirdparty/dagre.min.js) \n\nboth from cdn.openmindmap.org.\n\n:::\n\n::: requirements\n\nThis requirements the following Node-RED nodes:\n\n- [introspection](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection), version >= 0.4.2\n\n:::\n\n\n::: explanation\n\nAlways remember: undo works - ctrl/cmd-Z is your friend!\n\nFirst have a look at all the <a class=\"ahl-group-only\" data-ids=\"b837d7ebd1ec9e0a\">configuration options</a>. There are 198 (at time of writing) layout options which apply separately to 12 layout algorithms!\n\nAlso included is the code from [#2267](https://github.com/node-red/node-red/pull/2267/files).\n\nAll layout algorithms work the same way: select a node from an <a class=\"ahl-group-only\" data-ids=\"9627a81dfee55c3b,1059d74265ae2cc0,e282398ceb42270c,b837d7ebd1ec9e0a\">example flow</a> and then press a button <a class=\"ahl-group-only\" data-ids=\"\">from the algorithm</a>.\n\n:::\n\n### Resources\n\n- [Examples using Elk](https://rtsys.informatik.uni-kiel.de/elklive/examples.html)\n- [How to use dagre](https://github.com/dagrejs/dagre/wiki)\n\n### Thanks\n\n- Thanks to [lizzardguki](https://discourse.nodered.org/u/lizzardguki/summary) for leaving this [pastebin](https://pastebin.com/TJRFD3mg) for dagre\n\n- Thanks to [TotallyInformation](https://discourse.nodered.org/u/totallyinformation/summary) for leaving this [list of node layouters](https://discourse.nodered.org/t/noisecraft-anyone-heard-of-it/79813/26?u=gregorius)\n","env":[]},{"id":"b837d7ebd1ec9e0a","type":"group","z":"291e3f0b7f652839","name":"obtain all possible elkjs configuration settings","style":{"label":true},"nodes":["a286b57446e4e2ba","6651c4800ee8569e","4ba8fd83db2b2fe3","22f45a5b47b1a6ef","ddab9c692f5f0527","88d0f0188a94d75c"],"x":933,"y":41.71428298950195,"w":854,"h":242},{"id":"05f319888f871426","type":"group","z":"291e3f0b7f652839","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["aa6bd255356743e5","1d892eeadf2046dc"],"x":53.28570556640625,"y":1077.523694038391,"w":561.8572387695312,"h":157.285888671875},{"id":"9627a81dfee55c3b","type":"group","z":"291e3f0b7f652839","name":"Straight down the line","style":{"label":true},"nodes":["05534e3b006dad20","3e4f153eee015ca8","80878b57a4a7b987","d9dbc40774430342","d09f478e227e15cb","df39eeb7ede52617","f904e5d7dfd0929c","c6d8a513b8218670","0c8bccda071ba88a"],"x":933,"y":330.5237846374512,"w":599.75,"h":263},{"id":"1059d74265ae2cc0","type":"group","z":"291e3f0b7f652839","name":"Loop","style":{"label":true},"nodes":["81cdb6951e28a533","2311db7f7f3f92bc","3915a4ad0d80b378","47a8630e66c56d1e","6524da4caef87042"],"x":933,"y":862,"w":259,"h":198},{"id":"e282398ceb42270c","type":"group","z":"291e3f0b7f652839","name":"forky straight line","style":{"label":true},"nodes":["cb5a53e2b8051b25","302d5bde5f51fabc","548748b07b087147","f193184dcf8253dc","c6ff5dc4cfdf9523","826586b2b14b3ca0","d7dbb37676cc0893","4e630cd39c715037"],"x":933,"y":640.3332862854004,"w":424.8571529388428,"h":174.8572120666504},{"id":"bf3abc46a67a19e2","type":"group","z":"291e3f0b7f652839","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["38e96bc44d6425fe","2f815def5c9ceee8","7bc2c8b4fef8a87e","22700e7f448da34e","232bf0375d8c6524"],"x":53.28570556640625,"y":731.0951175689697,"w":696.7142944335938,"h":291.2381591796875},{"id":"ec6a0a7b1a678666","type":"group","z":"291e3f0b7f652839","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["8535a96673f361eb","f91e1b2a862bad35","0dd7c25686d797b2","14f57f7ede25c325","eda34b8a5ade3dd0"],"x":53.28570556640625,"y":385.90470027923584,"w":591,"h":290},{"id":"475ad727dc4b78b0","type":"group","z":"291e3f0b7f652839","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a49fd18a78ee194b","e258faac0b3c11b3","dea2e4ec5dd18b46","d6f87fa650de0afd","42b75c3703c152dc"],"x":53.28570556640625,"y":41.71428298950195,"w":610.7142944335938,"h":289},{"id":"8b9a71f205e03c83","type":"group","z":"291e3f0b7f652839","name":"always the same","style":{"label":true},"nodes":["1e7f8b2c254e4d60","821ed929c72480b8","4396339926a3894b","314340aa366d6beb","c3a1fd7da8e38825","6bf7abf7d244f8dc","e5587a8f162ae32a","ebe29205544f1399","22363d408e13a802"],"x":2181.8570556640625,"y":41.71428298950195,"w":387,"h":267},{"id":"7c15cd1f7fb94dff","type":"group","z":"291e3f0b7f652839","name":"using dagre","style":{"label":true},"nodes":["895257df2cc7e5f1","3832d3d2244417b5","3eb0410558d7f77d","6408a8bbedc62d4c","045de17fcd02dc99"],"x":53.28570556640625,"y":1290,"w":650,"h":291},{"id":"38e96bc44d6425fe","type":"ClientCode","z":"291e3f0b7f652839","g":"bf3abc46a67a19e2","name":"using elkjs - algorithm: mrtree","clientcode":"var allnodes = payload.allnodes;\nvar alledges = payload.alledges;\nvar fixedNodeId = payload.fixedNodeId;\n\n// see https://github.com/kieler/elkjs#api for more details\nvar graph = {\n    id: \"root\",\n    layoutOptions: {\n        'algorithm': 'mrtree',\n        'childAreaHeight': 4500,\n        'childAreaWidth': 4500,\n        \"org.eclipse.elk.direction\": \"RIGHT\",\n    },\n    children: allnodes,\n    edges: alledges\n};\n\nconst elk = new ELK();\n\nelk.layout(graph)\n    .then((g) => {       \n        node.send({ payload: {\n            fixedNodeId: fixedNodeId,\n            nodes: g.children\n        }})\n    })\n    .catch((g) => { node.send({ type: \"error\", payload: g }) });\n","format":"javascript","x":362.28570556640625,"y":981.0951175689697,"wires":[["232bf0375d8c6524"]]},{"id":"2f815def5c9ceee8","type":"inject","z":"291e3f0b7f652839","g":"bf3abc46a67a19e2","name":"2. press me","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":169.28570556640625,"y":772.0951175689697,"wires":[["7bc2c8b4fef8a87e"]]},{"id":"05534e3b006dad20","type":"inject","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"set RSS url","props":[{"p":"url","v":"https://flows.flowhub.org/feed.xml","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1039,"y":430.5237846374512,"wires":[["3e4f153eee015ca8"]]},{"id":"3e4f153eee015ca8","type":"http request","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"","persist":false,"insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":1381,"y":455.5237846374512,"wires":[["80878b57a4a7b987"]]},{"id":"80878b57a4a7b987","type":"xml","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"parse feed.xml","property":"payload","attr":"","chr":"","x":1338,"y":515.5237846374512,"wires":[["d09f478e227e15cb"]]},{"id":"d9dbc40774430342","type":"split","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1279,"y":371.5237846374512,"wires":[["df39eeb7ede52617"]]},{"id":"d09f478e227e15cb","type":"change","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"set payload and define fake tab Z id","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.feed.entry","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1240,"y":552.5237846374512,"wires":[["d9dbc40774430342"]]},{"id":"df39eeb7ede52617","type":"function","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"convert xml object to flow object","func":"msg.payload = {\n    \"id\": msg.payload.id[0].match(/.{16}$/)[0],\n    \"type\": \"comment\",\n    \"name\": msg.payload.title[0][\"_\"],\n    \"info\": msg.payload.id[0],\n    \"x\": 801 * Math.random(),\n    \"y\": 699 * Math.random(),\n    \"wires\": [\n    ]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1347,"y":493.5237846374512,"wires":[["f904e5d7dfd0929c"]]},{"id":"f904e5d7dfd0929c","type":"join","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1336,"y":521.5237846374512,"wires":[["c6d8a513b8218670"]]},{"id":"c6d8a513b8218670","type":"function","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"prepend the subflow to the nodes array","func":"msg.payload = {\n    flowContent: msg.payload,\n    removeduplicates: true,\n    autoimport: false\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1343,"y":471.5237846374512,"wires":[["0c8bccda071ba88a"]]},{"id":"0c8bccda071ba88a","type":"ClientCode","z":"291e3f0b7f652839","g":"9627a81dfee55c3b","name":"Open import dialog","clientcode":"function doIt() {\n  var content = payload.flowContent;\n\n  if (payload.removeduplicates) {\n    content = content.filter((elem) => {\n      return RED.nodes.node(elem.id) == undefined\n    });\n  }\n\n  if (content.length == 0) {\n    RED.notify(\"No new content\", {\n      type: \"ok\",\n      id: \"TriggerImport\",\n      timeout: 2000\n    });\n    return;\n  }\n  RED.clipboard.import();\n\n  setTimeout(() => {\n    $('#red-ui-clipboard-dialog-import-text').val(\n      JSON.stringify(content)\n    ).trigger(\"paste\");\n\n    if (payload.autoimport) {\n      setTimeout(() => {\n        $('#red-ui-clipboard-dialog-ok').trigger('click');\n      }, 435);\n    }\n  }, 300);\n};\n\ndoIt();\n","format":"javascript","x":1416.75,"y":484.7322807312012,"wires":[[]]},{"id":"a286b57446e4e2ba","type":"inject","z":"291e3f0b7f652839","g":"b837d7ebd1ec9e0a","name":"layout options","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1049,"y":139.71428298950195,"wires":[["22f45a5b47b1a6ef"]]},{"id":"6651c4800ee8569e","type":"ClientCode","z":"291e3f0b7f652839","g":"b837d7ebd1ec9e0a","name":"elkjs: possible layout options","clientcode":"const elk = new ELK();\n\nelk.knownLayoutOptions().then( (pload) => {\n    node.send({\n        topic: \"Layout options\",\n        payload: pload\n    })\n});","format":"javascript","x":1357,"y":150.71428298950195,"wires":[["4ba8fd83db2b2fe3"]]},{"id":"4ba8fd83db2b2fe3","type":"debug","z":"291e3f0b7f652839","g":"b837d7ebd1ec9e0a","name":"debug 27","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1681,"y":149.71428298950195,"wires":[]},{"id":"1e7f8b2c254e4d60","type":"link in","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"load elkjs","links":[],"x":2222.8570556640625,"y":214.71428298950195,"wires":[["821ed929c72480b8"]]},{"id":"821ed929c72480b8","type":"ClientCode","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"load elkjs","clientcode":"/* \n    Source:\n    https://stackoverflow.com/questions/14644558/call-javascript-function-after-script-is-loaded\n*/\nfunction loadScript(url, callback) {\n    var script = document.createElement(\"script\")\n    script.type = \"text/javascript\";\n\n    if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n                script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {  //Others\n        script.onload = function () {\n            callback();\n        };\n    }\n\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n}\n\nloadScript(\"https://cdn.openmindmap.org/thirdparty/elk.bundled.js\", () => {\n    node.send({\n        topic: topic,\n        payload: payload\n    })\n})\n","format":"javascript","x":2385.8570556640625,"y":214.71428298950195,"wires":[["4396339926a3894b"]]},{"id":"4396339926a3894b","type":"link out","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"link out 2","mode":"return","links":[],"x":2527.8570556640625,"y":214.71428298950195,"wires":[]},{"id":"22f45a5b47b1a6ef","type":"link call","z":"291e3f0b7f652839","g":"b837d7ebd1ec9e0a","name":"","links":["1e7f8b2c254e4d60"],"linkType":"static","timeout":"30","x":1096,"y":82.71428298950195,"wires":[["6651c4800ee8569e","ddab9c692f5f0527","88d0f0188a94d75c"]]},{"id":"ddab9c692f5f0527","type":"ClientCode","z":"291e3f0b7f652839","g":"b837d7ebd1ec9e0a","name":"elkjs: possible known layout algorithm","clientcode":"const elk = new ELK();\n\nelk.knownLayoutAlgorithms().then( (pload) => {\n    node.send({\n        topic: \"Layout Algorithm\",\n        payload: pload\n    })\n});","format":"javascript","x":1359,"y":200.71428298950195,"wires":[["4ba8fd83db2b2fe3"]]},{"id":"88d0f0188a94d75c","type":"ClientCode","z":"291e3f0b7f652839","g":"b837d7ebd1ec9e0a","name":"elkjs: possible known Layout Categories","clientcode":"const elk = new ELK();\n\nelk.knownLayoutCategories().then( (pload) => {\n    node.send({\n        payload: pload\n    })\n});","format":"javascript","x":1356,"y":242.71428298950195,"wires":[["4ba8fd83db2b2fe3"]]},{"id":"7bc2c8b4fef8a87e","type":"link call","z":"291e3f0b7f652839","g":"bf3abc46a67a19e2","name":"","links":["1e7f8b2c254e4d60"],"linkType":"static","timeout":"30","x":432.28570556640625,"y":868.095158259074,"wires":[["22700e7f448da34e"]]},{"id":"a49fd18a78ee194b","type":"ClientCode","z":"291e3f0b7f652839","g":"475ad727dc4b78b0","name":"using elkjs - algorithm: layered - Direction: DOWN","clientcode":"var allnodes = payload.allnodes;\nvar alledges = payload.alledges;\nvar fixedNodeId = payload.fixedNodeId;\n\n// see https://github.com/kieler/elkjs#api for more details\nvar graph = {\n    id: \"root\",\n    layoutOptions: {\n        'algorithm': 'org.eclipse.elk.layered',\n        \"elk.direction\": \"DOWN\",\n        \"cycleBreaking.strategy\": \"INTERACTIVE\",\n        \"layering.strategy\": \"INTERACTIVE\",\n        \"crossingMinimization.semiInteractive\": true,\n        \"separateConnectedComponents\": true,\n        \"nodePlacement.strategy\": \"NETWORK_SIMPLEX\",\n        \"spacing.nodeNode\": 70,\n        \"spacing.nodeNodeBetweenLayers\": 25,\n        \"spacing.edgeNode\": 25,\n        \"spacing.edgeNodeBetweenLayers\": 20,\n        \"spacing.edgeEdge\": 20,\n        \"spacing.edgeEdgeBetweenLayers\": 15,\n    },\n    children: allnodes,\n    edges: alledges\n};\n\nconst elk = new ELK();\n\nelk.layout(graph)\n    .then((g) => {\n        node.send({\n            payload: {\n                fixedNodeId: fixedNodeId,\n                nodes: g.children\n            }\n        })\n    })\n    .catch((g) => { node.send({ type: \"error\", payload: g }) });\n\n","format":"javascript","x":390.28564453125,"y":289.71428298950195,"wires":[["42b75c3703c152dc"]]},{"id":"e258faac0b3c11b3","type":"inject","z":"291e3f0b7f652839","g":"475ad727dc4b78b0","name":"2. press me","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":169.28570556640625,"y":82.71428298950195,"wires":[["dea2e4ec5dd18b46"]]},{"id":"dea2e4ec5dd18b46","type":"link call","z":"291e3f0b7f652839","g":"475ad727dc4b78b0","name":"","links":["1e7f8b2c254e4d60"],"linkType":"static","timeout":"30","x":390.28564453125,"y":185.71428298950195,"wires":[["d6f87fa650de0afd"]]},{"id":"cb5a53e2b8051b25","type":"inject","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"don't press me","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1059,"y":749.9047679901123,"wires":[["302d5bde5f51fabc"]]},{"id":"aa6bd255356743e5","type":"ClientCode","z":"291e3f0b7f652839","g":"05f319888f871426","name":"layout selection - https://github.com/node-red/node-red/pull/2267/files","clientcode":"function layoutFlow() {\n\n    var selection = RED.view.selection();\n    \n    if (!selection.nodes || selection.nodes.length !== 1) {\n        RED.notify(\"Select exactly one node\");\n        return;\n    }\n    var ns = RED.nodes.getAllFlowNodes(selection.nodes[0]);\n\n    // Find Input node\n\n    var nodes = {};\n    var minRank = 0;\n    var stack = [];\n    var candidateInputs = {};\n    var candidateOutputs = {};\n    ns.forEach(function (n) {\n        candidateInputs[n.id] = n;\n        candidateOutputs[n.id] = n;\n        nodes[n.id] = {\n            n: n,\n            i: [],\n            o: [],\n            d: -1, // depth from start\n            r: -1, // rank order at that depth\n            downstream: 0\n        }\n    });\n    RED.nodes.eachLink(function (link) {\n        if (nodes[link.source.id] || nodes[link.target.id]) {\n            nodes[link.source.id].o.push(link.target.id);\n            nodes[link.target.id].i.push(link.source.id);\n            delete candidateInputs[link.target.id]\n            delete candidateOutputs[link.source.id]\n        }\n    })\n\n    var inputs = Object.keys(candidateInputs);\n    var outputs = Object.keys(candidateOutputs);\n\n    if (inputs.length > 1) {\n        RED.notify(\"Multiple start points - bailing\")\n        return;\n    }\n\n    if (outputs.length === 0) {\n        RED.notify(\"No outputs - is this a big loop? Bailing\");\n        return;\n    }\n\n    function applyDepth(id, d) {\n        if (nodes[id].d < d) {\n            nodes[id].d = d;\n            nodes[id].o.forEach(function (nid) {\n                applyDepth(nid, d + 1);\n            })\n        }\n    }\n    applyDepth(inputs[0], 0)\n\n    function calculateDownstream(id, downstream) {\n        nodes[id].downstream += downstream;\n        nodes[id].i.forEach(function (nid) {\n            calculateDownstream(nid, nodes[id].downstream + 1);\n        })\n    }\n    outputs.forEach(function (id) {\n        calculateDownstream(id, 0)\n    })\n\n    var ranks = {};\n    function rankNodes(node) {\n        if (node.r === -1) {\n            ranks[node.d] = ranks[node.d] || [];\n            node.r = ranks[node.d].length;\n            ranks[node.d].push(node);\n            node.o.sort(function (a, b) {\n                return nodes[b].downstream - nodes[a].downstream\n            })\n            node.o.forEach(function (nid) {\n                rankNodes(nodes[nid])\n            })\n        }\n    }\n    rankNodes(nodes[inputs[0]]);\n    function shuffleRanks(node) {\n        var pushed = false;\n        if (node.o.length > 1) {\n            var outputs = node.o.slice(0);\n            outputs.sort(function (a, b) {\n                if (nodes[a].d === nodes[b].d) {\n                    return nodes[a].r - nodes[b].r;\n                } else {\n                    return nodes[b].d - nodes[a].d;\n                }\n            })\n            // outputs.forEach(function(o,i) { console.log(\" \",i,\" + \"+nodes[o].n.type,\" d:\",nodes[o].d,\" r:\",nodes[o].r)});\n            var rank = nodes[outputs[0]].r;\n            var depth = nodes[outputs[0]].d;\n            for (var i = 1; i < outputs.length; i++) {\n                // console.log(outputs[i]);\n                var n = nodes[outputs[i]];\n                if (n.d !== depth && n.r === rank) {\n                    // need to move n down one.\n                    var r = n.r;\n                    ns.forEach(function (_n) {\n                        var nn = nodes[_n.id];\n                        if (nn.d >= n.d && nn.d < depth && nn.r >= r) {\n                            pushed = true;\n                            nn.r++;\n                        }\n                    })\n                }\n                depth = n.d;\n                rank = n.r;\n            }\n        }\n        node.o.forEach(function (n) {\n            pushed = pushed || shuffleRanks(nodes[n])\n        })\n        return pushed;\n    }\n    var shuffle = function () {\n        if (shuffleRanks(nodes[inputs[0]])) {\n            shuffle();\n        }\n    }\n    shuffle();\n\n\n    var x = nodes[inputs[0]].n.x;\n    var y = nodes[inputs[0]].n.y;\n    var changedNodes = [];\n    ns.forEach(function (n) {\n        var d = nodes[n.id].d;\n        var r = nodes[n.id].r;\n\n        changedNodes.push({\n            n: n,\n            ox: n.x,\n            oy: n.y,\n            moved: n.moved\n        });\n\n        n.x = x + d * 200;\n        n.y = y + r * 50;\n        n.dirty = true;\n        // n.dirtyStatus = true;\n        // n.status = {\n        //     text:\"d\"+d+\" : r\"+r+\" : ds\"+nodes[n.id].downstream\n        // }\n    });\n\n    if (changedNodes.length > 0) {\n        RED.history.push({ t: \"move\", nodes: changedNodes, dirty: RED.nodes.dirty() });\n        RED.nodes.dirty(true);\n        RED.view.redraw(true);\n    }\n\n}\n\nlayoutFlow();","format":"javascript","x":339.1429443359375,"y":1193.809582710266,"wires":[[]]},{"id":"1d892eeadf2046dc","type":"inject","z":"291e3f0b7f652839","g":"05f319888f871426","name":"2. press me","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":169.28570556640625,"y":1118.523694038391,"wires":[["aa6bd255356743e5"]]},{"id":"302d5bde5f51fabc","type":"switch","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1171.857126235962,"y":711.3333568572998,"wires":[["548748b07b087147","f193184dcf8253dc","826586b2b14b3ca0"]]},{"id":"548748b07b087147","type":"change","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1244.7143077850342,"y":772.7619638442993,"wires":[["c6ff5dc4cfdf9523","d7dbb37676cc0893"]]},{"id":"f193184dcf8253dc","type":"debug","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"debug 29","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1206.1428356170654,"y":681.3332862854004,"wires":[]},{"id":"c6ff5dc4cfdf9523","type":"switch","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1254.7142581939697,"y":725.6190714836121,"wires":[["4e630cd39c715037"]]},{"id":"826586b2b14b3ca0","type":"link out","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"link out 3","mode":"link","links":[],"x":1298.999984741211,"y":724.1904630661011,"wires":[]},{"id":"d7dbb37676cc0893","type":"debug","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"debug 30","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1251.8571529388428,"y":774.1904983520508,"wires":[]},{"id":"4e630cd39c715037","type":"template","z":"291e3f0b7f652839","g":"e282398ceb42270c","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"This is the payload: {{payload}} !","output":"str","x":1227.5714168548584,"y":698.4762315750122,"wires":[[]]},{"id":"81cdb6951e28a533","type":"function","z":"291e3f0b7f652839","g":"1059d74265ae2cc0","name":"function 16","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1092,"y":978,"wires":[["2311db7f7f3f92bc"]]},{"id":"2311db7f7f3f92bc","type":"function","z":"291e3f0b7f652839","g":"1059d74265ae2cc0","name":"function 17","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1064,"y":988,"wires":[["81cdb6951e28a533"]]},{"id":"3915a4ad0d80b378","type":"function","z":"291e3f0b7f652839","g":"1059d74265ae2cc0","name":"function 18","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1029,"y":962,"wires":[["6524da4caef87042"]]},{"id":"47a8630e66c56d1e","type":"function","z":"291e3f0b7f652839","g":"1059d74265ae2cc0","name":"function 19","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1096,"y":1019,"wires":[["3915a4ad0d80b378"]]},{"id":"6524da4caef87042","type":"function","z":"291e3f0b7f652839","g":"1059d74265ae2cc0","name":"THE LOOP!","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1068,"y":903,"wires":[["2311db7f7f3f92bc","47a8630e66c56d1e"]]},{"id":"314340aa366d6beb","type":"ClientCode","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"obtain nodes for selection","clientcode":"function doIt() {\n    var selection = RED.view.selection();\n    \n    if (!selection.nodes || selection.nodes.length !== 1) {\n        RED.notify(\"Select exactly one node\");\n        return;\n    }\n\n    // These values will be used to move everything around our selected node but\n    // not move everything into the top left hand corner as Elkjs would like us\n    // to do.\n    var fixedNodeId = selection.nodes[0].id;\n\n    var ns = RED.nodes.getAllFlowNodes(selection.nodes[0]);\n\n    // Convert nodes to flows.json format since all the wires, i.e. links, are \n    // contained in one simple json format.\n    var allnodes = RED.nodes.createExportableNodeSet(ns).filter((n) => {\n        return n.type != \"tab\" && n.type != 'subflow' && n.type != \"group\"\n    });\n\n    var alledges = [];\n    allnodes.forEach((n) => {\n        for (var widx = 0; widx < n.wires.length; widx++) {\n            for (var xidx = 0; xidx < n.wires[widx].length; xidx++) {\n                alledges.push({\n                    id: n.id + n.wires[widx][xidx],\n                    sources: [n.id],\n                    targets: [n.wires[widx][xidx]]\n                });\n            }\n        }\n    })\n\n    allnodes = allnodes.map((n) => {\n        return {\n            id: n.id,\n            width: document.getElementById(n.id).getBBox().width + 3,\n            height: document.getElementById(n.id).getBBox().height + 3,\n        }\n    });\n\n    node.send({\n        payload: {\n            allnodes: allnodes,\n            alledges: alledges,\n            fixedNodeId: fixedNodeId\n        }\n    })\n\n}\n\ndoIt()\n","format":"javascript","x":2396.8570556640625,"y":267.71428298950195,"wires":[["4396339926a3894b"]]},{"id":"8535a96673f361eb","type":"inject","z":"291e3f0b7f652839","g":"ec6a0a7b1a678666","name":"2. press me","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":169.28570556640625,"y":426.90470027923584,"wires":[["f91e1b2a862bad35"]]},{"id":"f91e1b2a862bad35","type":"link call","z":"291e3f0b7f652839","g":"ec6a0a7b1a678666","name":"","links":["1e7f8b2c254e4d60"],"linkType":"static","timeout":"30","x":280.28570556640625,"y":519.9047002792358,"wires":[["0dd7c25686d797b2"]]},{"id":"c3a1fd7da8e38825","type":"link in","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"obtain nodes for selection","links":[],"x":2222.8570556640625,"y":267.71428298950195,"wires":[["314340aa366d6beb"]]},{"id":"0dd7c25686d797b2","type":"link call","z":"291e3f0b7f652839","g":"ec6a0a7b1a678666","name":"","links":["c3a1fd7da8e38825"],"linkType":"static","timeout":"30","x":330.28570556640625,"y":573.9047002792358,"wires":[["14f57f7ede25c325"]]},{"id":"14f57f7ede25c325","type":"ClientCode","z":"291e3f0b7f652839","g":"ec6a0a7b1a678666","name":"using elkjs - algorithm: layered, Direction: UP","clientcode":"var allnodes = payload.allnodes;\nvar alledges = payload.alledges;\nvar fixedNodeId = payload.fixedNodeId;\n\n// see https://github.com/kieler/elkjs#api for more details\nvar graph = {\n    id: \"root\",\n    layoutOptions: {\n        'algorithm': 'org.eclipse.elk.layered',\n        \"elk.direction\": \"UP\",\n        \"cycleBreaking.strategy\": \"INTERACTIVE\",\n        \"layering.strategy\": \"INTERACTIVE\",\n        \"crossingMinimization.semiInteractive\": true,\n        \"separateConnectedComponents\": true,\n        \"nodePlacement.strategy\": \"NETWORK_SIMPLEX\",\n        \"spacing.nodeNode\": 70,\n        \"spacing.nodeNodeBetweenLayers\": 25,\n        \"spacing.edgeNode\": 25,\n        \"spacing.edgeNodeBetweenLayers\": 20,\n        \"spacing.edgeEdge\": 20,\n        \"spacing.edgeEdgeBetweenLayers\": 15,\n\n\n        \"elk.hierarchyHandling\": \"INCLUDE_CHILDREN\",\n        \"elk.layered.spacing.edgeNodeBetweenLayers\": 40,\n        \"elk.layered.nodePlacement.bk.fixedAlignment\": \"BALANCED\",\n        \"layering.layerConstraint\": \"FIRST\",\n    },\n    children: allnodes,\n    edges: alledges\n};\n\nconst elk = new ELK();\n\nelk.layout(graph)\n    .then((g) => {\n        node.send({\n            payload: {\n                fixedNodeId: fixedNodeId,\n                nodes: g.children\n            }\n        })\n    })\n    .catch((g) => { node.send({ type: \"error\", payload: g }) });\n","format":"javascript","x":390.28570556640625,"y":634.9047002792358,"wires":[["eda34b8a5ade3dd0"]]},{"id":"d6f87fa650de0afd","type":"link call","z":"291e3f0b7f652839","g":"475ad727dc4b78b0","name":"","links":["c3a1fd7da8e38825"],"linkType":"static","timeout":"30","x":390.28564453125,"y":238.71428298950195,"wires":[["a49fd18a78ee194b"]]},{"id":"22700e7f448da34e","type":"link call","z":"291e3f0b7f652839","g":"bf3abc46a67a19e2","name":"","links":["c3a1fd7da8e38825"],"linkType":"static","timeout":"30","x":382.28570556640625,"y":923.3332767486572,"wires":[["38e96bc44d6425fe"]]},{"id":"6bf7abf7d244f8dc","type":"ClientCode","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"load dagre.js","clientcode":"/* \n    Source:\n    https://stackoverflow.com/questions/14644558/call-javascript-function-after-script-is-loaded\n*/\nfunction loadScript(url, callback) {\n    var script = document.createElement(\"script\")\n    script.type = \"text/javascript\";\n\n    if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n                script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {  //Others\n        script.onload = function () {\n            callback();\n        };\n    }\n\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n}\n\nloadScript(\"https://cdn.openmindmap.org/thirdparty/dagre.min.js\", () => {\n    node.send({\n        topic: topic,\n        payload: payload\n    })\n})\n","format":"javascript","x":2392.8570556640625,"y":146.71428298950195,"wires":[["4396339926a3894b"]]},{"id":"e5587a8f162ae32a","type":"link in","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"load dagre.js","links":[],"x":2222.8570556640625,"y":146.71428298950195,"wires":[["6bf7abf7d244f8dc"]]},{"id":"895257df2cc7e5f1","type":"ClientCode","z":"291e3f0b7f652839","g":"7c15cd1f7fb94dff","name":"using dagre","clientcode":"/* Code take from https://pastebin.com/TJRFD3mg\n   which came from https://discourse.nodered.org/t/read-flows-json-and-position-the-nodes-in-most-efficient-readable-way/78158/12\n*/\nvar allnodes = payload.allnodes;\nvar alledges = payload.alledges;\nvar fixedNodeId = payload.fixedNodeId;\n\nvar g = new dagre.graphlib.Graph();\ng.setGraph({});\ng.setDefaultEdgeLabel(function () { return {}; });\n\nfor (var idx = 0; idx < allnodes.length; idx++) {\n    var n = allnodes[idx];\n    g.setNode(n.id, {\n        ...n,\n    })\n}\n\nfor (var idx = 0; idx < alledges.length; idx++) {\n    var e = alledges[idx];\n    g.setEdge(e.sources[0], e.targets[0])\n}\n\ng.graph().rankdir = \"LR\"\ng.graph().marginx = 20\ng.graph().marginy = 20\n\ndagre.layout(g)\n\nvar payload = {\n    fixedNodeId: fixedNodeId,\n    nodes: g.nodes().map(function (v) {\n        return {\n            ...g.node(v)\n        }\n    })\n}\nnode.send( { payload: payload })","format":"javascript","x":217.28570556640625,"y":1539,"wires":[["045de17fcd02dc99"]]},{"id":"3832d3d2244417b5","type":"inject","z":"291e3f0b7f652839","g":"7c15cd1f7fb94dff","name":"2. press me","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":169.28570556640625,"y":1331,"wires":[["3eb0410558d7f77d"]]},{"id":"3eb0410558d7f77d","type":"link call","z":"291e3f0b7f652839","g":"7c15cd1f7fb94dff","name":"","links":["e5587a8f162ae32a"],"linkType":"static","timeout":"30","x":442.28570556640625,"y":1427.0000406901042,"wires":[["6408a8bbedc62d4c"]]},{"id":"6408a8bbedc62d4c","type":"link call","z":"291e3f0b7f652839","g":"7c15cd1f7fb94dff","name":"","links":["c3a1fd7da8e38825"],"linkType":"static","timeout":"30","x":382.28570556640625,"y":1482.2381591796875,"wires":[["895257df2cc7e5f1"]]},{"id":"ebe29205544f1399","type":"ClientCode","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"move nodes","clientcode":"var children = payload.nodes;\nvar fixedNodeId = payload.fixedNodeId;\n\nvar changedNodes = [];\n\n// Before moving anything we get the offset (x,y) - this is the amount that our\n// fixed Node moved - our fixed node does not move, this means everything is offset\n// by the distance it moved.\nvar offsetX = 0;\nvar offsetY = 0;\nchildren.forEach((c) => {\n    if (c.id == fixedNodeId) {\n        var nd = RED.nodes.node(c.id);\n        offsetX = c.x - nd.x;\n        offsetY = c.y - nd.y;\n    }\n});\n\nchildren.forEach((c) => {\n    var nd = RED.nodes.node(c.id);\n\n    changedNodes.push({\n        n: nd,\n        ox: nd.x,\n        oy: nd.y,\n        moved: nd.moved\n    });\n\n    nd.x = c.x - offsetX;\n    nd.y = c.y - offsetY;\n    nd.dirty = true;\n});\n\nRED.history.push({ t: \"move\", nodes: changedNodes, dirty: RED.nodes.dirty() });\nRED.nodes.dirty(true);\nRED.view.redraw(true);\n\nnode.send({ type: \"ok\", payload: payload })","format":"javascript","x":2386.8570556640625,"y":82.71428298950195,"wires":[["4396339926a3894b"]]},{"id":"22363d408e13a802","type":"link in","z":"291e3f0b7f652839","g":"8b9a71f205e03c83","name":"move nodes","links":[],"x":2222.8570556640625,"y":82.71428298950195,"wires":[["ebe29205544f1399"]]},{"id":"045de17fcd02dc99","type":"link call","z":"291e3f0b7f652839","g":"7c15cd1f7fb94dff","name":"","links":["22363d408e13a802"],"linkType":"static","timeout":"30","x":607.2857055664062,"y":1540,"wires":[[]]},{"id":"232bf0375d8c6524","type":"link call","z":"291e3f0b7f652839","g":"bf3abc46a67a19e2","name":"","links":["22363d408e13a802"],"linkType":"static","timeout":"30","x":654,"y":981.3332767486572,"wires":[[]]},{"id":"eda34b8a5ade3dd0","type":"link call","z":"291e3f0b7f652839","g":"ec6a0a7b1a678666","name":"","links":["22363d408e13a802"],"linkType":"static","timeout":"30","x":548.2857055664062,"y":496.90470027923584,"wires":[[]]},{"id":"42b75c3703c152dc","type":"link call","z":"291e3f0b7f652839","g":"475ad727dc4b78b0","name":"","links":["22363d408e13a802"],"linkType":"static","timeout":"30","x":568,"y":116.71428298950195,"wires":[[]]}]