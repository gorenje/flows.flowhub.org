[{"id":"ea246f68766c8630","type":"tab","label":"Node-RED Learnings - Switch - Check all rules v. Stop after first match","disabled":false,"info":"::: aim\n\nHighlight the confusion I had with the switch node.\n\n:::\n\n### Flow Explanation\n\nThis is a very simple flow that uses a switch flow to direct the flow of a message. Each <a class=\"ahl-node-only\" data-ids=\"efe73152ecde8e3c,2d85270e48797ac5\">switch node</a> consists of three rules:\n\n```\nmsg.payload > 10 --> 1\nmsg.payload > 20 --> 2\nmsg.payload > 40 --> 3\n```\n\nWhen the payload of 50 is injected into the flows the following happens:\n\n![img](https://cdn.openmindmap.org/content/1691602731005_Screen_Shot_2023-08-09_at_19.38.31.png)\n\nThe blue squares indicate the message counts. The question is why in the <a class=\"ahl-group-only\" data-ids=\"cc824f892c9d20ec\">top flow</a> does each debug node got a message? My expectation for the switch node is that result in the <a class=\"ahl-group-only\" data-ids=\"d34f9271753933e9\">bottom flow</a> where only the condition `> 10` receives a message.\n\nHow come?\n\nThe difference is the checkbox in the <a class=\"ahl-node-only\" data-ids=\"efe73152ecde8e3c,2d85270e48797ac5\">switch node</a>:\n\n![img](https://cdn.openmindmap.org/content/1691602164361_Screen_Shot_2023-08-09_at_19.22.22.png)\n\n\nThis is the default behaviour within Node-RED and can lead to some strange happenings in the coal mine.\n\n### Background\n\nThe background to this behaviour are programming languages based on \"C\". In C a case statement is consider to work like a jump into a statement, taking the [example](https://en.wikipedia.org/wiki/Switch_statement) from Wikipedia:\n\n```C\nswitch (age) {\n  case 1:  printf(\"You're one.\");            break;\n  case 2:  printf(\"You're two.\");            break;\n  case 3:  printf(\"You're three.\");\n  case 4:  printf(\"You're three or four.\");  break;\n  default: printf(\"You're not 1, 2, 3 or 4!\");\n}\n```\n\nThe trick is the `break` which stops the execution of the `switch`. An age value of 3 will produce the following output:\n\n```\nYou're three. You're three or four.\n```\n\nbecause there is no `break` at the end of the `case 3` test. \n\nAnd that's what the checkbox in the switch node does: add or remove the `break` statements and the *default* Node-RED behaviour is that there are no breaks.\n\nMost higher level languages (python, ruby) implement the switch statement to have breaks or rather don't even allow the *fallthrough* behaviour of C.\n\n","env":[]},{"id":"cc824f892c9d20ec","type":"group","z":"ea246f68766c8630","name":"check all","style":{"label":true},"nodes":["efe73152ecde8e3c","c5a36066138f0be0","d8609b490609998f","82962a1d96fd37bf","034562d7b8d76ac9"],"x":544,"y":523,"w":775,"h":197},{"id":"d34f9271753933e9","type":"group","z":"ea246f68766c8630","name":"stop after match","style":{"label":true},"nodes":["2d85270e48797ac5","a140508157b764ef","6ac763d822254c03","9b2e18b3cd478ffe","f9504da94c59e69f"],"x":544,"y":787,"w":775,"h":197},{"id":"efe73152ecde8e3c","type":"switch","z":"ea246f68766c8630","g":"cc824f892c9d20ec","name":"","property":"payload","propertyType":"msg","rules":[{"t":"gt","v":"10","vt":"num"},{"t":"gt","v":"20","vt":"num"},{"t":"gt","v":"40","vt":"num"}],"checkall":"true","repair":false,"outputs":3,"x":965,"y":622,"wires":[["c5a36066138f0be0"],["d8609b490609998f"],["82962a1d96fd37bf"]]},{"id":"c5a36066138f0be0","type":"debug","z":"ea246f68766c8630","g":"cc824f892c9d20ec","name":"> 10","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1223,"y":564,"wires":[]},{"id":"d8609b490609998f","type":"debug","z":"ea246f68766c8630","g":"cc824f892c9d20ec","name":"> 20","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1223,"y":622,"wires":[]},{"id":"82962a1d96fd37bf","type":"debug","z":"ea246f68766c8630","g":"cc824f892c9d20ec","name":"> 40","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1223,"y":679,"wires":[]},{"id":"034562d7b8d76ac9","type":"inject","z":"ea246f68766c8630","g":"cc824f892c9d20ec","name":"50","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"50","payloadType":"num","x":640,"y":622,"wires":[["efe73152ecde8e3c"]]},{"id":"2d85270e48797ac5","type":"switch","z":"ea246f68766c8630","g":"d34f9271753933e9","name":"","property":"payload","propertyType":"msg","rules":[{"t":"gt","v":"10","vt":"num"},{"t":"gt","v":"20","vt":"num"},{"t":"gt","v":"40","vt":"num"}],"checkall":"false","repair":false,"outputs":3,"x":965,"y":886,"wires":[["a140508157b764ef"],["6ac763d822254c03"],["9b2e18b3cd478ffe"]]},{"id":"a140508157b764ef","type":"debug","z":"ea246f68766c8630","g":"d34f9271753933e9","name":"> 10","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1223,"y":828,"wires":[]},{"id":"6ac763d822254c03","type":"debug","z":"ea246f68766c8630","g":"d34f9271753933e9","name":"> 20","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1223,"y":886,"wires":[]},{"id":"9b2e18b3cd478ffe","type":"debug","z":"ea246f68766c8630","g":"d34f9271753933e9","name":"> 40","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1223,"y":943,"wires":[]},{"id":"f9504da94c59e69f","type":"inject","z":"ea246f68766c8630","g":"d34f9271753933e9","name":"50","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"50","payloadType":"num","x":640,"y":886,"wires":[["2d85270e48797ac5"]]}]