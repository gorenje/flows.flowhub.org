[{"id":"4059b930d1c0f643","type":"tab","label":"[UML2Node-RED] Fork & Join","disabled":false,"info":"::: aim\n\nCreate Node-RED flows for UML diagrams. This example is the usage of fork and join.\n\n:::\n\n\nUML diagram Top-2-bottom:\n\n```mermaid\ngraph TB\nStart(Start) --> A{Fork}\nA --> B[Call Behavior: WindowMove -> Close Driver Window]\nA --> C[Call Behavior: WindowMove -> Close Co-Driver Window]\nA --> D[Call Behavior: WindowMove -> Close Rear Seat Driver Position Window]\nA --> E[Call Behavior: WindowMove -> Close Rear Seat Co-Driver Position Window]\nB -->|Antitrap Detected| G[Send Signal: AntitrapDetected]\nC -->|Antitrap Detected| G\nD -->|Antitrap Detected| G\nE -->|Antitrap Detected| G\nB --> F{Join}\nC --> F\nD --> F\nE --> F\nF --> H[End]\nG --> H(Edited)\n```\n\nSame UML diagram left-2-right:\n\n```mermaid\ngraph LR\nStart(Start) --> A{Fork}\nA --> B[Call Behavior: WindowMove -> Close Driver Window]\nA --> C[Call Behavior: WindowMove -> Close Co-Driver Window]\nA --> D[Call Behavior: WindowMove -> Close Rear Seat Driver Position Window]\nA --> E[Call Behavior: WindowMove -> Close Rear Seat Co-Driver Position Window]\nB -->|Antitrap Detected| G[Send Signal: AntitrapDetected]\nC -->|Antitrap Detected| G\nD -->|Antitrap Detected| G\nE -->|Antitrap Detected| G\nB --> F{Join}\nC --> F\nD --> F\nE --> F\nF --> H[End]\nG --> H(Edited)\n```\n\n<!--\n// [] 4059b930d1c0f643 [tab] \"[UML] Fork & Join\"\n// [] b6adb55d66740991 [function] \"Fork\"\n// [] 65b866683d0dcbfa [inject] \"Start\"\n// [] a8ed6d4a487d90ae [function] \"Call Behavior: WindowMove -> Close Driver Window\"\n// [] 804b562a07d5e681 [function] \"Call Behavior: WindowMove -> Close Co-Driver Window\"\n// [] 5fa020e11df7cc6e [function] \"Call Behavior: WindowMove -> Close Rear Seat Driver Position Window\"\n// [] 2254aa5bcc719d0b [function] \"Call Behavior: WindowMove -> Close Rear Seat Co-Driver Position Window\"\n// [] 3a0f268b816e4b32 [join] \"Join on all\"\n// [] e123d5f606135716 [switch] \"Send Signal: AntitrapDetected\"\n// [] 67aa065764c7a559 [function] \"Send Signal\"\n// [] 9850eb275924e362 [join] \"Join on all\"\n// [] 733a9ab6244752ca [join] \"\"\n// [] f08c55e65c2a4e2d [debug] \"End\"\n-->\n\n\n::: explanation\n\nTurning the UML diagram on its side, the similarities become clear. The flow is <a class=\"ahl-link-node first-to-all\" data-ids=\"b6adb55d66740991,a8ed6d4a487d90ae,804b562a07d5e681,5fa020e11df7cc6e,2254aa5bcc719d0b\">cloning a message</a> into four copies and waiting for all <a class=\"ahl-link-node all-to-last\" data-ids=\"a8ed6d4a487d90ae,804b562a07d5e681,5fa020e11df7cc6e,2254aa5bcc719d0b,3a0f268b816e4b32\">four clones to complete processing</a>. At the same time, each of the four actions are checked for an *antitrap* and if an antitrap is found, <a class=\"ahl-link-node\" data-ids=\"e123d5f606135716,67aa065764c7a559\">a signal is triggered</a>.\n\nFinally the flow completes when all eight messages have arrived at the <a class=\"ahl-link-node\" data-ids=\"733a9ab6244752ca,f08c55e65c2a4e2d\">join of 2</a> - two being two arrays for four message each.\n\n:::\n\n::: discussion\n\n**Fork node**\n\nThe <a class=\"ahl-link-node first-to-all\" data-ids=\"b6adb55d66740991,a8ed6d4a487d90ae,804b562a07d5e681,5fa020e11df7cc6e,2254aa5bcc719d0b\">fork node</a> is of interest since fork nodes do not exist in Node-RED. That is because forks are achieved by connecting wires to the output ports of nodes. Each wire represents a clone of the message generated by the node. Each wire is executed in parallel and independent of another wire, so that concurrent execution is guaranteed.\n\nThis also implies that the fork node is not necessary and instead, four output wires could be connected to the <a class=\"ahl-node-only\" data-ids=\"65b866683d0dcbfa\">start node</a> which would automatically clone the message produced by the start node.\n\n**Exceptions**\n\nThe handling of the *antitrap* check could be done with exception handling, but this would make it difficult to synchronise on all message at the end. The details of the implementation are left to the particular situation.\n\n:::\n","env":[]},{"id":"b6adb55d66740991","type":"function","z":"4059b930d1c0f643","name":"Fork","func":"return msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":545,"y":461,"wires":[["a8ed6d4a487d90ae","804b562a07d5e681","5fa020e11df7cc6e","2254aa5bcc719d0b"]]},{"id":"65b866683d0dcbfa","type":"inject","z":"4059b930d1c0f643","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":328,"y":461,"wires":[["b6adb55d66740991"]]},{"id":"a8ed6d4a487d90ae","type":"function","z":"4059b930d1c0f643","name":"Call Behavior: WindowMove -> Close Driver Window","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":953,"y":338,"wires":[["3a0f268b816e4b32","e123d5f606135716"]]},{"id":"804b562a07d5e681","type":"function","z":"4059b930d1c0f643","name":"Call Behavior: WindowMove -> Close Co-Driver Window","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":963,"y":421,"wires":[["3a0f268b816e4b32","e123d5f606135716"]]},{"id":"5fa020e11df7cc6e","type":"function","z":"4059b930d1c0f643","name":"Call Behavior: WindowMove -> Close Rear Seat Driver Position Window","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1013,"y":504,"wires":[["3a0f268b816e4b32","e123d5f606135716"]]},{"id":"2254aa5bcc719d0b","type":"function","z":"4059b930d1c0f643","name":"Call Behavior: WindowMove -> Close Rear Seat Co-Driver Position Window","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1023,"y":587,"wires":[["3a0f268b816e4b32","e123d5f606135716"]]},{"id":"3a0f268b816e4b32","type":"join","z":"4059b930d1c0f643","name":"Join on all","mode":"custom","build":"array","property":"","propertyType":"full","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1949,"y":339,"wires":[["733a9ab6244752ca"]]},{"id":"e123d5f606135716","type":"switch","z":"4059b930d1c0f643","name":"Send Signal: AntitrapDetected","property":"AntitrapDetected","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"false","repair":false,"outputs":2,"x":1605,"y":587,"wires":[["9850eb275924e362"],["67aa065764c7a559"]]},{"id":"67aa065764c7a559","type":"function","z":"4059b930d1c0f643","name":"Send Signal","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1946,"y":593,"wires":[["9850eb275924e362"]]},{"id":"9850eb275924e362","type":"join","z":"4059b930d1c0f643","name":"Join on all","mode":"custom","build":"array","property":"","propertyType":"full","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1952,"y":469,"wires":[["733a9ab6244752ca"]]},{"id":"733a9ab6244752ca","type":"join","z":"4059b930d1c0f643","name":"join on","mode":"custom","build":"array","property":"","propertyType":"full","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2175,"y":403,"wires":[["f08c55e65c2a4e2d"]]},{"id":"f08c55e65c2a4e2d","type":"debug","z":"4059b930d1c0f643","name":"End","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2347,"y":403,"wires":[]}]