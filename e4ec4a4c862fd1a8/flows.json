[{"id":"60de16a0fefb7ace","type":"subflow","name":"editor","info":"","category":"node maker","in":[{"x":60,"y":40,"wires":[{"id":"b39ca36c12467718"}]}],"out":[{"x":660,"y":380,"wires":[{"id":"af0afbba9a411b15","port":0}]}],"env":[{"name":"field_columns","type":"str","value":"col-100","ui":{"label":{"en-US":"Layout"},"type":"select","opts":{"opts":[{"l":{"en-US":"full-row"},"v":"col-100"}]}}},{"name":"field_name","type":"str","value":"","ui":{"label":{"en-US":"Field Name"},"type":"input","opts":{"types":["str"]}}},{"name":"field_default","type":"str","value":"","ui":{"label":{"en-US":"Default"},"type":"input","opts":{"types":["str"]}}},{"name":"field_label","type":"str","value":"","ui":{"label":{"en-US":"Label"},"type":"input","opts":{"types":["str"]}}},{"name":"field_icon","type":"str","value":"","ui":{"label":{"en-US":"Icon"},"type":"input","opts":{"types":["str"]}}},{"name":"editor_expand","type":"bool","value":"true","ui":{"label":{"en-US":"Allow Expanded"},"type":"input","opts":{"types":["bool"]}}},{"name":"editor_formatting","type":"str","value":"mustache:handlebars, JSON:json, JavaScript:javascript, CSS:css, Markdown:markdown, PHP:php, Python:python, SQL:sql, XML:xml, YAML:yaml, none:text","ui":{"label":{"en-US":"Formatting"}}},{"name":"editor_format_default","type":"str","value":"text","ui":{"label":{"en-US":"Format default"},"type":"input","opts":{"types":["str"]}}}],"meta":{},"color":"#DDAA99","icon":"font-awesome/fa-file-code-o"},{"id":"b39ca36c12467718","type":"function","z":"60de16a0fefb7ace","name":"editor_props","func":"msg.field_columns = env.get('field_columns');\nmsg.field_name = env.get('field_name');\nmsg.field_default = env.get('field_default');\nmsg.editor_expand = env.get('editor_expand');\nmsg.editor_formatting = env.get('editor_formatting');\nmsg.field_label = env.get('field_label');\nmsg.editor_format_default = env.get('editor_format_default');\nif (msg.editor_format_default == '') {\n    msg.editor_format_default = 'text';\n}\nlet expandOffset = '';\nif (msg.editor_formatting == '' && msg.field_label == '') {\n    expandOffset = 'style=\"margin-top:-3px;\"';\n}\nif (msg.editor_expand) {\n    msg.editor_expand = '<button id=\"node-function-expand-' + msg.field_name + '\" class=\"red-ui-button red-ui-button-small\" ' + expandOffset + '><i class=\"fa fa-expand\"></i></button>' + \"\\n\";\n}else{\n    msg.editor_expand = '';\n}\nlet selectList = '';\nif (msg.editor_formatting != '') {\n    let formattingList = msg.editor_formatting.replaceAll(' ', '').split(',');\n    selectList = '<span data-i18n=\"node-red:template.label.format\">Syntax Highlight</span>:' + \"\\n\";\n    selectList += '<select id=\"node-input-format_' + msg.field_name + '\" style=\"width:110px; font-size: 10px !important;  height: 24px; padding:0;\">' + \"\\n\";\n    formattingList.forEach(function(fl) {\n        fl = fl.split(':');\n        selectList += \" \".repeat(4) + '<option value=\"' + fl[1] + '\">' + fl[0] + \"</option>\\n\";\n    });\n    selectList += \"</select>\\n\";\n}\nselectList = selectList.replace(/^/gm, \" \".repeat(8));\nmsg.editor_options = '';\nif (selectList != '' || msg.editor_expand != '') {\n    msg.editor_options += \"\\n\" + \" \".repeat(4) + '<div style=\"position:absolute;right:0;display:inline-block;text-align:right;font-size: 0.8em;z-index:100;\">' + \"\\n\";\n    msg.editor_options += selectList;\n    msg.editor_options += msg.editor_expand;\n    msg.editor_options += \" \".repeat(4) + \"</div>\";\n}\nlet icon = env.get('field_icon');\nif (icon != '') {\n    msg.field_icon = '<i class=\"fa fa-' + icon + '\"></i> ';\n} else {\n    msg.field_icon = '';\n}\nif (msg.field_label == '') {\n    msg.field_label_elm = '';\n} else {\n    msg.field_label_elm = '<label for=\"node-input-' + msg.field_name + '\">';\n    msg.field_label_elm += msg.field_icon + msg.field_label + '</label>';\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":40,"wires":[["304b11e03551ef93"]]},{"id":"304b11e03551ef93","type":"template","z":"60de16a0fefb7ace","name":"edit_dialog","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<div class=\"{{field_columns}}\">\n    {{{field_label_elm}}}{{{editor_options}}}\n    <div style=\"height: 250px; min-height:150px;\" class=\"node-text-editor\" id=\"node-input-{{field_name}}-editor\"></div>\n</div>","output":"str","x":210,"y":80,"wires":[["dfc2e6d83eaa08f0"]]},{"id":"dfc2e6d83eaa08f0","type":"function","z":"60de16a0fefb7ace","name":"edit_dialog","func":"msg.defaults.push(msg.field_name + ': {value:\"' +  msg.field_default.replace('\"', '\\\"') + '\"}');\nmsg.defaults.push(msg.field_name + '_format: {value:\"' + msg.editor_format_default + '\"}');\nmsg.edit_dialog.push(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":120,"wires":[["433c2ca4801d1b7f"]]},{"id":"433c2ca4801d1b7f","type":"template","z":"60de16a0fefb7ace","name":"oneditprepare_template","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"            // Prepare code editor {{field_name}}\n            this.editor_{{field_name}} = RED.editor.createEditor({\n                id: 'node-input-{{field_name}}-editor',\n                mode: 'ace/mode/text',\n                value: this.{{field_name}} || \"{{{field_default}}}\"\n            });\n            $('#node-input-{{field_name}}-editor').parent().css('position', 'relative');\n            $(\"#node-function-expand-{{field_name}}\").on(\n                \"click\", \n                expandButtonClickHandler(\n                    this.editor_{{field_name}},\n                    '{{field_name}}',\n                    '{{{field_label_elm}}}'\n                )\n            );\n            RED.popover.tooltip($(\"#node-function-expand-{{field_name}}\"), RED._(\"node-red:common.label.expand\"));\n            let editor_{{field_name}} = this.editor_{{field_name}};\n            $(\"#node-input-format_{{field_name}}\").on(\"change\", function () {\n                var mod = \"ace/mode/\" + $(\"#node-input-format_{{field_name}}\").val();\n                editor_{{field_name}}.getSession().setMode({\n                    path: mod,\n                    v: Date.now()\n                });\n            });\n            $('#node-input-format_{{field_name}}').val(this.{{field_name}}_format || '{{editor_format_default}}').trigger('change');\n","output":"str","x":490,"y":40,"wires":[["7a21bd543c1073c8"]]},{"id":"7a21bd543c1073c8","type":"function","z":"60de16a0fefb7ace","name":"oneditprepare","func":"msg._oneditprepare.push(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":80,"wires":[["312a31b33615964e"]]},{"id":"312a31b33615964e","type":"template","z":"60de16a0fefb7ace","name":"oneditsave_template","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"            // Save code editor {{field_name}}\n            this.{{field_name}}_format = $('#node-input-format_{{field_name}}').val();\n            this.{{field_name}} = this.editor_{{field_name}}.getValue();\n            this.editor_{{field_name}}.destroy();\n            delete this.editor_{{field_name}};\n","output":"str","x":480,"y":140,"wires":[["7ecf6f5b801255fe"]]},{"id":"7ecf6f5b801255fe","type":"function","z":"60de16a0fefb7ace","name":"oneditsave","func":"msg._oneditsave.push(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":180,"wires":[["35eacbc0f8e14635"]]},{"id":"35eacbc0f8e14635","type":"template","z":"60de16a0fefb7ace","name":"oneditcancel_template","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"            // Cancel code editor {{field_name}}\n            this.editor_{{field_name}}.destroy();\n            delete this.editor_{{field_name}};\n","output":"str","x":480,"y":240,"wires":[["decf02259cf4f980"]]},{"id":"decf02259cf4f980","type":"function","z":"60de16a0fefb7ace","name":"function 20","func":"msg._oneditcancel.push(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":280,"wires":[["7e05fb4fc292719b"]]},{"id":"7e05fb4fc292719b","type":"template","z":"60de16a0fefb7ace","name":"othercode_template","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"\n/**\n * Expand behavior for code editor \n */\nfunction expandButtonClickHandler(editor, fieldName, fieldLabelElm) {\n    $('#node-function-expand-' + fieldName).click(function() {\n        setTimeout(function() {\n            $('ul.red-ui-tray-breadcrumbs li:nth-child(2)').html(fieldLabelElm);\n        }, 500);\n    });\n    return function (e) {\n        e.preventDefault();\n        var value = editor.getValue();\n        editor.saveView(`inside function-expandButtonClickHandler ${editor.__stateId}`);\n        RED.editor.editJavaScript(\n            {\n                value: value,\n                width: \"Infinity\",\n                stateId: editor.__stateId,\n                mode: \"ace/mode/\" + $('#node-input-format_' + fieldName).val(),\n                focus: true,\n                cancel: function () {\n                    setTimeout(function () {\n                        editor.focus();\n                    }, 250);\n                },\n                complete: function (v, cursor) {\n                    editor.setValue(v, -1);\n                    setTimeout(function () {\n                        editor.restoreView();\n                        editor.focus();\n                    }, 250);\n                }\n            }\n        );\n    }\n}\n","output":"str","x":480,"y":340,"wires":[["af0afbba9a411b15"]]},{"id":"af0afbba9a411b15","type":"function","z":"60de16a0fefb7ace","name":"function 5","func":"msg._othercode.expandEditor = msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":380,"wires":[[]]},{"id":"b30b4cf6837f20a7","type":"subflow","name":"selectbox","info":"Node Maker Docs\nThe selectbox node represents the use of Node-RED’s TypedInput and Typed Input Multiple Selectbox. For an example, see the bottom of the page for [Node-RED Inputs field for examples](https://nodered.org/docs/creating-nodes/edit-dialog#inputs). The following properties define the select box’s appearance:\n\n* Layout - The number of columns the label will consume out of a division of four or three equal areas. To align controls on the panel on the same row, ensure the used column space totals to consume an entire row.\n* Field Name - A JavaScript compatible variable name (no spaces hyphens or punctuation).\n* Label - The actual text that will be used when displaying the label.\n* Icon - A font awesome icon that will appear to the left of the label. You can specify the icon name sans any ‘fa’ prefix; i.e. bathtub\n* Values - The values of the selectbox are represented as a comma delimited string of captions:value (a caption separated by a colon and value). The captions will appear in the selectbox as a dropdown combobox. \n* Default - The default value or default selection (comma delimited if multiple is enabled) for the selectbox.\n* Allow Multiple - true to allow more than one value to be selected or false for only a single value. \n","category":"node maker","in":[{"x":60,"y":40,"wires":[{"id":"a898132ca0292c19"}]}],"out":[{"x":540,"y":100,"wires":[{"id":"3d97bfe487ea399d","port":0}]}],"env":[{"name":"field_columns","type":"str","value":"col-100","ui":{"label":{"en-US":"Layout"},"type":"select","opts":{"opts":[{"l":{"en-US":"full-row"},"v":"col-100"},{"l":{"en-US":"3/4 row"},"v":"col col-75 sml-lbl"},{"l":{"en-US":"2/3 row"},"v":"col col-66 sml-lbl"},{"l":{"en-US":"1/2 row"},"v":"col col-50 sml-lbl"},{"l":{"en-US":"1/3 row"},"v":"col col-33 sml-lbl"},{"l":{"en-US":"1/4 row"},"v":"col col-25 sml-lbl"}]}}},{"name":"field_name","type":"str","value":"fruit","ui":{"label":{"en-US":"Field Name"},"type":"input","opts":{"types":["str"]}}},{"name":"field_label","type":"str","value":"Fruits Label","ui":{"label":{"en-US":"Label"},"type":"input","opts":{"types":["str"]}}},{"name":"field_icon","type":"str","value":"box","ui":{"label":{"en-US":"Icon"},"type":"input","opts":{"types":["str"]}}},{"name":"field_values","type":"str","value":"Apple:a,Banana:b,Cherry:c","ui":{"label":{"en-US":"Values"},"type":"input","opts":{"types":["str"]}}},{"name":"field_default","type":"str","value":"b","ui":{"label":{"en-US":"Default"},"type":"input","opts":{"types":["str"]}}},{"name":"selectbox_multiple","type":"bool","value":"false","ui":{"label":{"en-US":"Allow Multiple"},"type":"input","opts":{"types":["bool"]}}}],"meta":{},"color":"#DDAA99","icon":"font-awesome/fa-list"},{"id":"a898132ca0292c19","type":"function","z":"b30b4cf6837f20a7","name":"selectbox_props","func":"msg.field_name = env.get('field_name');\nmsg.field_label = env.get('field_label');\nlet icon = env.get('field_icon');\nif (icon != '') {\n    msg.field_icon = '<i class=\"fa fa-' + icon + '\"></i> ';\n} else {\n    msg.field_icon = '';\n}\nif (msg.field_label == '') {\n    msg.field_label_elm = '';\n} else {\n    msg.field_label_elm = '<label for=\"node-input-' + msg.field_name + '\">';\n    msg.field_label_elm += msg.field_icon + msg.field_label + '</label>';\n}\nmsg.field_default = env.get('field_default');\nmsg.selectbox_multiple = env.get('selectbox_multiple');\nif (msg.selectbox_multiple) {\n    msg.selectbox_multiple = 'multiple: \"true\",' + \"\\n\";\n}else{\n    msg.selectbox_multiple = '';\n}\nmsg.field_values = env.get('field_values');\nlet fv = msg.field_values.split(',');\nlet o = '';\nfv.forEach(function(v, i) {\n    v = v.split(':');\n    o += '{ \"value\":\"' + v[1] + '\", \"label\": \"' + v[0].trim().replace('\"', '\\\"') + '\"}';\n    if (i < fv.length-1) {\n        o += \",\\n\";\n    }\n});\no = o.replace(/^/gm, \" \".repeat(28));\nmsg.field_values = o;\nmsg.field_columns = env.get('field_columns');\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":40,"wires":[["d0c143eac43904cd"]]},{"id":"d0c143eac43904cd","type":"template","z":"b30b4cf6837f20a7","name":"edit_dialog","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<div class=\"{{field_columns}}\">\n    {{{field_label_elm}}}\n    <input type=\"text\" id=\"node-input-{{field_name}}\">\n</div><!--col-->","output":"str","x":170,"y":100,"wires":[["1c0a4ee1081ab0ae"]]},{"id":"1c0a4ee1081ab0ae","type":"function","z":"b30b4cf6837f20a7","name":"edit_dialog","func":"msg.edit_dialog.push(msg.payload);\nmsg.defaults.push(msg.field_name + ': {value:\"' + msg.field_default.replaceAll('\"', '\\\"') + '\"}');\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":160,"wires":[["436c6476640d73e2"]]},{"id":"436c6476640d73e2","type":"template","z":"b30b4cf6837f20a7","name":"oneditprepare_template","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"            // Prepare selectbox {{field_name}}\n            $(\"#node-input-{{field_name}}\").typedInput({\n                types: [\n                    {\n                        value: \"{{field_name}}\",\n                        {{{selectbox_multiple}}}\n                        options: [\n{{{field_values}}}\n                        ]\n                    }\n                ]\n            });\n","output":"str","x":450,"y":40,"wires":[["3d97bfe487ea399d"]]},{"id":"3d97bfe487ea399d","type":"function","z":"b30b4cf6837f20a7","name":"oneditprepare","func":"if (!msg.hasOwnProperty('rgroup_name')) {\n    msg._oneditprepare.push(msg.payload);\n} else {\n    msg.rgroup_details.push({\n        field_name: msg.field_name,\n        field_types: [{\n                value: msg.field_name,\n                multiple: (msg.selectbox_multiple != ''),\n                options: JSON.parse('[' + msg.field_values + ']')\n        }],\n        field_default_type: null,\n        field_default: msg.field_default\n    });\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":100,"wires":[[]]},{"id":"c70964ba34544694","type":"subflow","name":"button","info":"","category":"node maker","in":[{"x":40,"y":40,"wires":[{"id":"5fd3369e032c68b0"}]}],"out":[{"x":380,"y":80,"wires":[{"id":"41f4b3c1077a06f2","port":0}]}],"env":[{"name":"field_columns","type":"str","value":"col-100","ui":{"label":{"en-US":"Layout"},"type":"select","opts":{"opts":[{"l":{"en-US":"full-row"},"v":"col-100"},{"l":{"en-US":"3/4 row"},"v":"col col-75"},{"l":{"en-US":"2/3 row"},"v":"col col-66"},{"l":{"en-US":"1/2 row"},"v":"col col-50"},{"l":{"en-US":"1/3 row"},"v":"col col-33"},{"l":{"en-US":"1/4 row"},"v":"col col-25"}]}}},{"name":"field_name","type":"str","value":"","ui":{"label":{"en-US":"Button Name"},"type":"input","opts":{"types":["str"]}}},{"name":"field_label","type":"str","value":"","ui":{"label":{"en-US":"Caption"},"type":"input","opts":{"types":["str"]}}},{"name":"field_icon","type":"str","value":"","ui":{"label":{"en-US":"Icon"},"type":"input","opts":{"types":["str"]}}},{"name":"button_size","type":"str","value":"red-ui-button","ui":{"label":{"en-US":"Size"},"type":"select","opts":{"opts":[{"l":{"en-US":"Regular"},"v":"red-ui-button btn-regular"},{"l":{"en-US":"Small"},"v":"red-ui-button red-ui-button-small"}]}}}],"meta":{},"color":"#DDAA99","icon":"font-awesome/fa-square-o"},{"id":"5fd3369e032c68b0","type":"function","z":"c70964ba34544694","name":"button_props","func":"msg.field_name = env.get('field_name');\nmsg.field_label = env.get('field_label');\nlet icon = env.get('field_icon');\nif (icon != '') {\n    msg.field_icon = '<i class=\"fa fa-' + icon + '\"></i> ';\n} else {\n    msg.field_icon = '';\n}\nmsg.field_label_elm = msg.field_icon + msg.field_label;\nmsg.button_size = env.get('button_size');\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":180,"y":40,"wires":[["09a5b20f490d7474"]]},{"id":"09a5b20f490d7474","type":"template","z":"c70964ba34544694","name":"edit_dialog","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<div class=\"{{field_columns}}\">\n    <button id=\"btn_{{field_name}}\" type=\"button\" class=\"{{{button_size}}}\">{{{field_label_elm}}}</button>\n</div>","output":"str","x":170,"y":100,"wires":[["41f4b3c1077a06f2"]]},{"id":"41f4b3c1077a06f2","type":"function","z":"c70964ba34544694","name":"edit_dialog","func":"msg.edit_dialog.push(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":160,"wires":[[]]},{"id":"9771d13dd19bf60f","type":"subflow","name":"use templts.","info":"If you use any of the code templates, be sure to place this node before it.","category":"node maker","in":[{"x":40,"y":40,"wires":[{"id":"ebd81684ada1c31c"}]}],"out":[{"x":420,"y":100,"wires":[{"id":"6bb34952a24fe530","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"font-awesome/fa-file-code-o"},{"id":"ebd81684ada1c31c","type":"template","z":"9771d13dd19bf60f","name":"re-size fix","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"            // Allow dynamic re-size after init. appearance \n            setTimeout(function () {\n                $('#node-props').css('width', '100%');\n            }, 30);","output":"str","x":180,"y":40,"wires":[["6bb34952a24fe530"]]},{"id":"6bb34952a24fe530","type":"function","z":"9771d13dd19bf60f","name":"compose_code","func":"msg._oneditprepare.push(msg.payload);\n\nString.prototype.delRightMost = function (sFind) {\n    for (var i = this.length; i >= 0; i = i - 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(0, f);\n            break;\n        }\n    }\n    return this;\n};\nString.prototype.getRightMost = function (sFind) {\n    for (var i = this.length; i >= 0; i = i - 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(f + sFind.length, f + sFind.length + this.length);\n        }\n    }\n    return this;\n};\nString.prototype.delLeftMost = function (sFind) {\n    for (var i = 0; i < this.length; i = i + 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(f + sFind.length, f + sFind.length + this.length);\n            break;\n        }\n    }\n    return this;\n};\nString.prototype.getLeftMost = function (sFind) {\n    for (var i = 0; i < this.length; i = i + 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(0, f);\n            break;\n        }\n    }\n    return this;\n};\nvar indent = \" \".repeat(4);\nvar tabIndent = \"\";\nvar edit_dialog = \" \".repeat(8) + '<div class=\"form-row\">' + \"\\n\";\nvar cTotal = 0;\nvar nItems = 0;\nvar initTab = false;\nvar firstTabName = '';\nvar bInRGroup = false;    \nmsg.edit_dialog.forEach(function(item, index) {\n    if (item.indexOf('\"type\":\"tab_definition\"') == -1 && item.indexOf('form-row rgroup') == -1) {\n        item = item.replace(/^/gm, tabIndent);\n        item = item.replace(/^/gm, tabIndent);\n        if (bInRGroup) {\n            item = item.replace(/^/gm, \" \".repeat(4));\n        }\n    }\n    if (item.indexOf('<div class=\"form-row rgroup\"') > -1) {\n        edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">').trimEnd() + \"\\n\";\n        item += \" \".repeat(4) + '<div class=\"form-row\">' + \"\\n\";\n        item = item.replace(/^/gm, \" \".repeat(8) + tabIndent).trimEnd() + \"\\n\";\n        bInRGroup = true;\n        edit_dialog += item;\n        return;\n    }\n    if (item.indexOf('<!--form-row rgroup-->') > -1) {\n        edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">').trimEnd() + \"\\n\";\n        edit_dialog += \" \".repeat(8) + tabIndent + \"</div><!--form-row rgroup-...-template-->\\n\";\n        if (index < msg.edit_dialog.length - 1) {\n            edit_dialog += indent + indent + tabIndent + '<div class=\"form-row\">' + \"\\n\";\n        }\n        bInRGroup = false;\n        return;\n    }\n    if (item.indexOf('\"type\":\"tab_definition\"') > -1) {\n        let tab = JSON.parse(item);\n        if (initTab == false) {\n            \n            // Inject the tab row\n            let r = edit_dialog.getRightMost('<div class=\"form-row\">');\n            edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">');\n            edit_dialog += '<div class=\"form-row func-tabs-row\">' + r;\n            edit_dialog += indent + indent + indent + '<ul style=\"min-width: 600px; margin-bottom: 20px;\" id=\"func-tabs\"></ul>' + \"\\n\";\n            edit_dialog += indent + indent + \"</div><!--func-tabs-row-->\\n\";\n            edit_dialog += indent + indent + '<div id=\"func-tabs-content\" style=\"min-height: calc(100% - 95px);\">' + \"\\n\";\n\n            // Start first tab\n            edit_dialog += indent + indent + indent + '<div id=\"func-tab-' + tab.name + '\" style=\"display:none\">' + \"\\n\";\n            edit_dialog += indent + indent + indent + indent + '<div class=\"form-row\">' + \"\\n\";\n            tabIndent = \" \".repeat(8);\n\n            // Init tab system\n            let code = \"// Prepare tab system\\n\";\n            code += \"var tabs = RED.tabs.create({\\n\";\n            code += \"    id: 'func-tabs',\\n\";\n            code += \"    onchange: function(tab) {\\n\";\n            code += \"        $('#func-tabs-content').children().hide();\\n\";\n            code += \"        $('#' + tab.id).show();\\n\";\n            code += \"    }\\n\";\n            code += \"});\\n\\n\";\n\n            // Add first tab code\n            code += \"// Add first tab, \" + tab.name + \"\\n\";\n            code += \"tabs.addTab({\\n\";\n            code += \"    id: 'func-tab-\" + tab.name + \"',\\n\";\n            code += \"    iconClass: 'fa fa-\" + tab.icon + \"',\\n\";\n            code += \"    label: '\" + tab.label + \"'\\n\";\n            code += \"});\\n\\n\";\n            firstTabName = tab.name;\n            code = code.replace(/^/gm, \" \".repeat(12));\n            msg._oneditprepare.push(code);\n            initTab = true;\n        }else{\n\n            // Add subsequent tabs \n            let r = edit_dialog.getRightMost('    <div class=\"form-row\"');\n            edit_dialog = edit_dialog.delRightMost('    <div class=\"form-row\"');\n            edit_dialog += \"</div><!--func-tab-tab#-->\\n\"; // close out last tab\n            edit_dialog += \" \".repeat(12) + '<div id=\"func-tab-' + tab.name + '\" style=\"display:none\">' + \"\\n\";\n            edit_dialog += \" \".repeat(16) + '<div class=\"form-row\"' + r;\n\n            // Add additional tab code\n            let code = \"// Add tab, \" + tab.name + \"\\n\";            \n            code += \"tabs.addTab({\\n\";\n            code += \"    id: 'func-tab-\" + tab.name + \"',\\n\";\n            code += \"    iconClass: 'fa fa-\" + tab.icon + \"',\\n\";\n            code += \"    label: '\" + tab.label + \"'\\n\";\n            code += \"});\\n\\n\";\n            code = code.replace(/^/gm, \" \".repeat(12));\n            msg._oneditprepare.push(code);\n        }        \n    }else{\n        if (tabIndent == '') {\n            item = item.replace(/^/gm, indent + indent + indent);\n        }else{\n            item = item.replace(/^/gm, indent);\n        }\n        let c = item.delLeftMost('col-').getLeftMost('\"').getLeftMost(' ');\n        cTotal += Number(c);\n        if (cTotal >= 83) {\n            let m = 5 * nItems;\n            if (m > 0) {\n                item = item.replace(\n                    'class=\"col ',\n                    'style=\"margin-right:-' + m.toString() + 'px;\" class=\"col '\n                );\n            }\n            if (nItems == 3) {\n                let r = edit_dialog.getRightMost('<div class=\"form-row\">');\n                edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">');\n                edit_dialog += '<div class=\"form-row\" style=\"margin-right:10px;\">' + r;\n            }\n            edit_dialog += item + \"\\n\";\n            if (index < msg.edit_dialog.length - 1) {\n                if (bInRGroup) {\n                    edit_dialog += \" \".repeat(4);\n                }\n                edit_dialog += indent + indent + tabIndent + \"</div><!--form-row-->\\n\";\n                edit_dialog += indent + indent + tabIndent + '<div class=\"form-row\">' + \"\\n\";\n                cTotal = 0;\n                nItems = 0;\n            }\n        } else {\n            edit_dialog += item + \"\\n\";\n            nItems++;\n        }\n    }\n});\nif (initTab) { \n    edit_dialog += \" \".repeat(16) + \"</div><!--form-row-->\\n\";\n    edit_dialog += \" \".repeat(12) + \"</div><!--func-tab-tab#-->\\n\";\n    edit_dialog += \" \".repeat(8) + \"</div><!--func-tabs-content-->\";\n\n    // Activate the first tab if present\n    let code = \" \".repeat(12) + 'tabs.activateTab(\"func-tab-' + firstTabName + '\");' + \"\\n\";\n    msg._oneditprepare.push(code);\n}else{\n    edit_dialog += \" \".repeat(8) + \"</div><!--form-row-->\";\n}\nmsg.edit_dialog = edit_dialog;\n\nlet defaults = '';\nmsg.defaults.forEach(function(item, index) {\n    defaults += \"            \" + item;\n    if (index < msg.defaults.length -1) {\n        defaults += \",\\n\";\n    }else{\n        defaults += \"\\n\";\n    }\n});\nmsg.defaults = defaults;\nmsg.oneditprepare = \"\\n\" + msg._oneditprepare.join(\"\\n\");\nmsg.oneditresize = \"\\n\" + msg._oneditresize.join(\"\\n\");\nmsg.oneditsave = \"\\n\" + msg._oneditsave.join(\"\\n\");\nmsg.oneditcancel = \"\\n\" + msg._oneditcancel.join(\"\\n\");\nmsg.defaults = msg.defaults.slice(0, -1);\nvar othercode = \"\";\nfor (var key in msg._othercode) {\n    var value = msg._othercode[key];\n    othercode += value;\n}\nmsg.othercode = \"\\n\" + othercode;\nmsg.runtimecode = \"\\n\" + msg.runtimecode.replace(/^/gm, \"    \".repeat(4));\nmsg.useTemplates = true;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":100,"wires":[[]]},{"id":"4a68dea86378d1c1","type":"subflow","name":"finish node (2)","info":"A finish node marks the end of a node definition. The finish node will finalize writing all\nthe files needed to create your node; the package.json, html, javascript, and ecompassing\nproject folder within your node-red instance's node_module folder. It will also restart the\nnode-red instance if it was started using the command:\n\n``\nkill -9 `cat /tmp/node-red.pid`; nohup nice node-red > /dev/null 2>&1 & echo $! > /tmp/node-red.pid\n``\n\nThis makes ongoing development easy as you simply need to refresh the browser to see node changes\nafter you have invoked the flow.","category":"node maker","in":[{"x":40,"y":40,"wires":[{"id":"05054bde98d915e8"}]}],"out":[{"x":1366,"y":388,"wires":[{"id":"2f01fca84071759a","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"b2b4e2ec4f7433e0","type":"template","z":"4a68dea86378d1c1","name":"nodemakerhtml","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<style>\n    {{{customcss}}}\n</style>\n<script type=\"text/html\" data-template-name=\"{{node_name}}\">\n    {{{inc_node_name}}}\n    <div id=\"node-props\" style=\"width: {{row_width}}px;\">\n        {{{edit_dialog}}}\n    </div><!--node-props-->\n</script>\n\n<script type=\"text/html\" data-help-name=\"{{node_name}}\">\n    {{{helpdetails}}}\n</script>\n\n<script type=\"text/javascript\">\n    RED.nodes.registerType('{{node_name}}', {\n        category: '{{node_category}}',\n        {{#node_palettelabel.length}}\n        paletteLabel: '{{node_palettelabel}}',\n        {{/node_palettelabel.length}}        \n        color: '{{node_color}}',\n        defaults: {\n            name: {value:\"\"},\n            {{{defaults}}}\n        },\n        inputs: {{numinputs}},\n        outputs: {{numoutputs}},\n        icon: \"font-awesome/fa-{{{node_icon}}}\",\n        label: function() {\n            return this.name || \"{{node_name}}\";\n        },\n        labelStyle: function() {\n            return this.name ? \"node_label_italic\" : \"\";\n        },\n        oneditprepare: function() {\n            {{{oneditprepare}}}\n        },\n        oneditresize: function() {\n            {{{oneditresize}}}        \n        },\n        oneditsave: function() {\n            {{{oneditsave}}}\n        },\n        oneditcancel: function() {\n            {{{oneditcancel}}}\n        }\n    });\n    {{{othercode}}}\n</script>\n","output":"str","x":360,"y":200,"wires":[["8b095acde14520e2"]]},{"id":"55274dbc14c784d0","type":"file","z":"4a68dea86378d1c1","name":"write nodename/nodename.html","filename":"nodename_html","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":670,"y":220,"wires":[["d160e9b39d6af108"]]},{"id":"26d35ec198eff702","type":"exec","z":"4a68dea86378d1c1","d":true,"command":"kill -9 `cat /tmp/node-red.pid`; nohup nice node-red > /dev/null 2>&1 & echo $! > /tmp/node-red.pid","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"restart node-red","x":200,"y":480,"wires":[["de92d8428d9e1fba"],["de92d8428d9e1fba"],["de92d8428d9e1fba"]]},{"id":"de92d8428d9e1fba","type":"debug","z":"4a68dea86378d1c1","name":"debug 50","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":480,"wires":[]},{"id":"b84041c769c9d102","type":"template","z":"4a68dea86378d1c1","name":"nodemakerjs","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"module.exports = function(RED) {\n    function {{node_name}}(config) {\n        RED.nodes.createNode(this,config);\n        var node = this;\n        {{{runtimecode}}}\n    }\n    RED.nodes.registerType('{{node_name}}', {{node_name}});\n}","output":"str","x":350,"y":320,"wires":[["a108d95a191b6a9f"]]},{"id":"a108d95a191b6a9f","type":"file","z":"4a68dea86378d1c1","name":"write nodename/nodename.js","filename":"nodename_js","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":670,"y":340,"wires":[["2f01fca84071759a"]]},{"id":"a97f273661c34c19","type":"switch","z":"4a68dea86378d1c1","name":"","property":"nodemakerhtml","propertyType":"msg","rules":[{"t":"empty"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":170,"y":220,"wires":[["b2b4e2ec4f7433e0"],["8c02b9d3f5d6d99f"]]},{"id":"8c02b9d3f5d6d99f","type":"change","z":"4a68dea86378d1c1","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"nodemakerhtml","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":240,"wires":[["8b095acde14520e2"]]},{"id":"7cc8d7d5a07e6959","type":"switch","z":"4a68dea86378d1c1","name":"","property":"nodemakerjs","propertyType":"msg","rules":[{"t":"empty"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":170,"y":340,"wires":[["b84041c769c9d102"],["729091b8ccbd1ff1"]]},{"id":"729091b8ccbd1ff1","type":"change","z":"4a68dea86378d1c1","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"nodemakerjs","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":360,"wires":[["a108d95a191b6a9f"]]},{"id":"d5030131832dfbc2","type":"function","z":"4a68dea86378d1c1","name":"compose_code","func":"if (msg.hasOwnProperty('useTemplates')) return msg;\nmsg._oneditprepare.push(msg.payload);\n\nString.prototype.delRightMost = function (sFind) {\n    for (var i = this.length; i >= 0; i = i - 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(0, f);\n            break;\n        }\n    }\n    return this;\n};\nString.prototype.getRightMost = function (sFind) {\n    for (var i = this.length; i >= 0; i = i - 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(f + sFind.length, f + sFind.length + this.length);\n        }\n    }\n    return this;\n};\nString.prototype.delLeftMost = function (sFind) {\n    for (var i = 0; i < this.length; i = i + 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(f + sFind.length, f + sFind.length + this.length);\n            break;\n        }\n    }\n    return this;\n};\nString.prototype.getLeftMost = function (sFind) {\n    for (var i = 0; i < this.length; i = i + 1) {\n        var f = this.indexOf(sFind, i);\n        if (f != -1) {\n            return this.substring(0, f);\n            break;\n        }\n    }\n    return this;\n};\nvar indent = \" \".repeat(4);\nvar tabIndent = \"\";\nvar edit_dialog = \" \".repeat(8) + '<div class=\"form-row\">' + \"\\n\";\nvar cTotal = 0;\nvar nItems = 0;\nvar initTab = false;\nvar firstTabName = '';\nvar bInRGroup = false;    \nmsg.edit_dialog.forEach(function(item, index) {\n    if (item.indexOf('\"type\":\"tab_definition\"') == -1 && item.indexOf('form-row rgroup') == -1) {\n        item = item.replace(/^/gm, tabIndent);\n        item = item.replace(/^/gm, tabIndent);\n        if (bInRGroup) {\n            item = item.replace(/^/gm, \" \".repeat(4));\n        }\n    }\n    if (item.indexOf('<div class=\"form-row rgroup\"') > -1) {\n        edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">').trimEnd() + \"\\n\";\n        item += \" \".repeat(4) + '<div class=\"form-row\">' + \"\\n\";\n        item = item.replace(/^/gm, \" \".repeat(8) + tabIndent).trimEnd() + \"\\n\";\n        bInRGroup = true;\n        edit_dialog += item;\n        return;\n    }\n    if (item.indexOf('<!--form-row rgroup-->') > -1) {\n        edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">').trimEnd() + \"\\n\";\n        edit_dialog += \" \".repeat(8) + tabIndent + \"</div><!--form-row rgroup-...-template-->\\n\";\n        if (index < msg.edit_dialog.length - 1) {\n            edit_dialog += indent + indent + tabIndent + '<div class=\"form-row\">' + \"\\n\";\n        }\n        bInRGroup = false;\n        return;\n    }\n    if (item.indexOf('\"type\":\"tab_definition\"') > -1) {\n        let tab = JSON.parse(item);\n        if (initTab == false) {\n            \n            // Inject the tab row\n            let r = edit_dialog.getRightMost('<div class=\"form-row\">');\n            edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">');\n            edit_dialog += '<div class=\"form-row func-tabs-row\">' + r;\n            edit_dialog += indent + indent + indent + '<ul style=\"min-width: 600px; margin-bottom: 20px;\" id=\"func-tabs\"></ul>' + \"\\n\";\n            edit_dialog += indent + indent + \"</div><!--func-tabs-row-->\\n\";\n            edit_dialog += indent + indent + '<div id=\"func-tabs-content\" style=\"min-height: calc(100% - 95px);\">' + \"\\n\";\n\n            // Start first tab\n            edit_dialog += indent + indent + indent + '<div id=\"func-tab-' + tab.name + '\" style=\"display:none\">' + \"\\n\";\n            edit_dialog += indent + indent + indent + indent + '<div class=\"form-row\">' + \"\\n\";\n            tabIndent = \" \".repeat(8);\n\n            // Init tab system\n            let code = \"// Prepare tab system\\n\";\n            code += \"var tabs = RED.tabs.create({\\n\";\n            code += \"    id: 'func-tabs',\\n\";\n            code += \"    onchange: function(tab) {\\n\";\n            code += \"        $('#func-tabs-content').children().hide();\\n\";\n            code += \"        $('#' + tab.id).show();\\n\";\n            code += \"    }\\n\";\n            code += \"});\\n\\n\";\n\n            // Add first tab code\n            code += \"// Add first tab, \" + tab.name + \"\\n\";\n            code += \"tabs.addTab({\\n\";\n            code += \"    id: 'func-tab-\" + tab.name + \"',\\n\";\n            code += \"    iconClass: 'fa fa-\" + tab.icon + \"',\\n\";\n            code += \"    label: '\" + tab.label + \"'\\n\";\n            code += \"});\\n\\n\";\n            firstTabName = tab.name;\n            code = code.replace(/^/gm, \" \".repeat(12));\n            msg._oneditprepare.push(code);\n            initTab = true;\n        }else{\n\n            // Add subsequent tabs \n            let r = edit_dialog.getRightMost('    <div class=\"form-row\"');\n            edit_dialog = edit_dialog.delRightMost('    <div class=\"form-row\"');\n            edit_dialog += \"</div><!--func-tab-tab#-->\\n\"; // close out last tab\n            edit_dialog += \" \".repeat(12) + '<div id=\"func-tab-' + tab.name + '\" style=\"display:none\">' + \"\\n\";\n            edit_dialog += \" \".repeat(16) + '<div class=\"form-row\"' + r;\n\n            // Add additional tab code\n            let code = \"// Add tab, \" + tab.name + \"\\n\";            \n            code += \"tabs.addTab({\\n\";\n            code += \"    id: 'func-tab-\" + tab.name + \"',\\n\";\n            code += \"    iconClass: 'fa fa-\" + tab.icon + \"',\\n\";\n            code += \"    label: '\" + tab.label + \"'\\n\";\n            code += \"});\\n\\n\";\n            code = code.replace(/^/gm, \" \".repeat(12));\n            msg._oneditprepare.push(code);\n        }        \n    }else{\n        if (tabIndent == '') {\n            item = item.replace(/^/gm, indent + indent + indent);\n        }else{\n            item = item.replace(/^/gm, indent);\n        }\n        let c = item.delLeftMost('col-').getLeftMost('\"').getLeftMost(' ');\n        cTotal += Number(c);\n        if (cTotal >= 83) {\n            let m = 5 * nItems;\n            if (m > 0) {\n                item = item.replace(\n                    'class=\"col ',\n                    'style=\"margin-right:-' + m.toString() + 'px;\" class=\"col '\n                );\n            }\n            if (nItems == 3) {\n                let r = edit_dialog.getRightMost('<div class=\"form-row\">');\n                edit_dialog = edit_dialog.delRightMost('<div class=\"form-row\">');\n                edit_dialog += '<div class=\"form-row\" style=\"margin-right:10px;\">' + r;\n            }\n            edit_dialog += item + \"\\n\";\n            if (index < msg.edit_dialog.length - 1) {\n                if (bInRGroup) {\n                    edit_dialog += \" \".repeat(4);\n                }\n                edit_dialog += indent + indent + tabIndent + \"</div><!--form-row-->\\n\";\n                edit_dialog += indent + indent + tabIndent + '<div class=\"form-row\">' + \"\\n\";\n                cTotal = 0;\n                nItems = 0;\n            }\n        } else {\n            edit_dialog += item + \"\\n\";\n            nItems++;\n        }\n    }\n});\nif (initTab) { \n    edit_dialog += \" \".repeat(16) + \"</div><!--form-row-->\\n\";\n    edit_dialog += \" \".repeat(12) + \"</div><!--func-tab-tab#-->\\n\";\n    edit_dialog += \" \".repeat(8) + \"</div><!--func-tabs-content-->\";\n\n    // Activate the first tab if present\n    let code = \" \".repeat(12) + 'tabs.activateTab(\"func-tab-' + firstTabName + '\");' + \"\\n\";\n    msg._oneditprepare.push(code);\n}else{\n    edit_dialog += \" \".repeat(8) + \"</div><!--form-row-->\";\n}\nmsg.edit_dialog = edit_dialog;\n\nlet defaults = '';\nmsg.defaults.forEach(function(item, index) {\n    defaults += \"            \" + item;\n    if (index < msg.defaults.length -1) {\n        defaults += \",\\n\";\n    }else{\n        defaults += \"\\n\";\n    }\n});\nmsg.defaults = defaults;\nmsg.oneditprepare = \"\\n\" + msg._oneditprepare.join(\"\\n\");\nmsg.oneditresize = \"\\n\" + msg._oneditresize.join(\"\\n\");\nmsg.oneditsave = \"\\n\" + msg._oneditsave.join(\"\\n\");\nmsg.oneditcancel = \"\\n\" + msg._oneditcancel.join(\"\\n\");\nmsg.defaults = msg.defaults.slice(0, -1);\nvar othercode = \"\";\nfor (var key in msg._othercode) {\n    var value = msg._othercode[key];\n    othercode += value;\n}\nmsg.othercode = \"\\n\" + othercode;\nmsg.runtimecode = \"\\n\" + msg.runtimecode.replace(/^/gm, \"    \".repeat(4));\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":220,"y":100,"wires":[["a97f273661c34c19"]]},{"id":"05054bde98d915e8","type":"template","z":"4a68dea86378d1c1","name":"re-size fix","field":"payload","fieldType":"msg","format":"javascript","syntax":"mustache","template":"            // Allow dynamic re-size after init. appearance \n            setTimeout(function () {\n                $('#node-props').css('width', '100%');\n            }, 30);","output":"str","x":200,"y":40,"wires":[["d5030131832dfbc2"]]},{"id":"4212ab2bb3a5a186","type":"exec","z":"4a68dea86378d1c1","command":"service nodered restart","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"restart node-red using service","x":265,"y":602,"wires":[["f28c6250f1f4dc62"],["f28c6250f1f4dc62"],["f28c6250f1f4dc62"]]},{"id":"f28c6250f1f4dc62","type":"debug","z":"4a68dea86378d1c1","name":"debug 51","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":556,"y":602,"wires":[]},{"id":"d160e9b39d6af108","type":"change","z":"4a68dea86378d1c1","name":"","rules":[{"t":"set","p":"nodeHtmlContent","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":963,"y":220,"wires":[["7cc8d7d5a07e6959"]]},{"id":"2f01fca84071759a","type":"change","z":"4a68dea86378d1c1","name":"","rules":[{"t":"set","p":"nodeJsContent","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1010,"y":339,"wires":[["4212ab2bb3a5a186","26d35ec198eff702"]]},{"id":"8b095acde14520e2","type":"junction","z":"4a68dea86378d1c1","x":500,"y":220,"wires":[["55274dbc14c784d0"]]},{"id":"85e13a6e48f6a1c3","type":"subflow","name":"start node","info":"The start node marks the beginning of a new node defintion. To create a node,\nconnect an inject node to the start node and connect the start node to a \nfinish node. You may wire various other nodes between the start and finish\nnodes to define your node's user interface.\n\nThe following properties can be configured in the properties panel:\n\n* Node Name - choose a JavaScript variable safe name for your node.\n* Version - A valid version string in the form of major, minor, patch i.e. 1.0.0\n* Description - a short description of your node.\n* Category - The palette group the node will appear under; existing i.e. common or you can define your own.\n* Icon - An existing fontawesome name, sans the 'font-awesome/fa-' prefix; i.e. bathtub\n* Color - The color of the node as it appears in the palette and editor. I.e. #E2D96E\n* Keywords - Used in the package.json file for reference and indexing by npm.\n* Author Name - The name of the node author. Used in package.json\n* Author Email - The email of the node author. Used in package.json\n* GitHub Handle - The handle used for the GitHub repo URL, I.e. john will appears as https://github.com/john/node-name\n* Max Row Width - The initial width of the property dialog (in pixels) when it is first opened.\n* Inputs - Whether the node accepts an input or not; 1 or 0 our the only acceptable values.\n* Outputs - The number of outputs the node will have.\n* Include node name... - Determines if a default name field will appear at the top of the property window; appears above any tab or other input fields.\n","category":"node maker","in":[{"x":40,"y":40,"wires":[{"id":"729874432b3551f1"}]}],"out":[{"x":740,"y":200,"wires":[{"id":"1d506b65823c19c3","port":0}]}],"env":[{"name":"node_name","type":"str","value":"","ui":{"label":{"en-US":"Node Name"},"type":"input","opts":{"types":["str"]}}},{"name":"node_version","type":"str","value":"0.0.1","ui":{"label":{"en-US":"Version"},"type":"input","opts":{"types":["str"]}}},{"name":"node_description","type":"str","value":"","ui":{"label":{"en-US":"Description"},"type":"input","opts":{"types":["str"]}}},{"name":"node_category","type":"str","value":"","ui":{"label":{"en-US":"Category"},"type":"input","opts":{"types":["str"]}}},{"name":"node_palettelabel","type":"str","value":"","ui":{"label":{"en-US":"Palette Label"},"type":"input","opts":{"types":["str"]}}},{"name":"node_icon","type":"str","value":"","ui":{"label":{"en-US":"Icon"},"type":"input","opts":{"types":["str"]}}},{"name":"node_color","type":"str","value":"","ui":{"label":{"en-US":"Color"},"type":"input","opts":{"types":["str"]}}},{"name":"keywords","type":"str","value":"","ui":{"label":{"en-US":"Keywords"},"type":"input","opts":{"types":["str"]}}},{"name":"author_name","type":"str","value":"","ui":{"label":{"en-US":"Author Name"},"type":"input","opts":{"types":["str"]}}},{"name":"author_email","type":"str","value":"","ui":{"label":{"en-US":"Author Email"}}},{"name":"github_handle","type":"str","value":"","ui":{"label":{"en-US":"GitHub Handle"},"type":"input","opts":{"types":["str"]}}},{"name":"row_width","type":"num","value":"460","ui":{"label":{"en-US":"Max Row Width"},"type":"input","opts":{"types":["num"]}}},{"name":"numinputs","type":"num","value":"1","ui":{"label":{"en-US":"Inputs"},"type":"spinner","opts":{"min":0,"max":1}}},{"name":"numoutputs","type":"num","value":"1","ui":{"label":{"en-US":"Outputs"},"type":"spinner"}},{"name":"inc_node_name","type":"bool","value":"true","ui":{"label":{"en-US":"Include node name field at the top"},"type":"checkbox"}}],"meta":{},"color":"#DDAA99"},{"id":"729874432b3551f1","type":"function","z":"85e13a6e48f6a1c3","name":"start_node","func":"msg.node_name = env.get('node_name');\n\n/* crash and burn if name not defined */\nif (!msg.node_name || msg.node_name==\"\") {\n    node.error((\"node name not given\"), msg);\n    return\n}\n\nmsg.node_version = env.get('node_version');\nmsg.node_description = env.get('node_description');\nmsg.node_folder = env.get('HOME') + '/.node-red/node_modules/node-red-' + msg.node_name + '/';\nlet k = env.get('keywords');\nk = '\"' + k.replaceAll(' ', '').replaceAll(',', '\",\"') + '\"';\nmsg.node_category = env.get('node_category');\nmsg.node_palettelabel = env.get('node_palettelabel');\nmsg.node_icon = env.get('node_icon');\nmsg.node_color = env.get('node_color');\nmsg.keywords = k;\nmsg.author_name = env.get('author_name');\nmsg.author_email = env.get('author_email');\nmsg.github_handle = env.get('github_handle');\nmsg.package_json = msg.node_folder + 'package.json';\nmsg.gitignore = msg.node_folder + '.gitignore';\nmsg.license = msg.node_folder + 'LICENSE';\nmsg.readme = msg.node_folder + 'README.md';\nmsg.nodename_js = msg.node_folder + msg.node_name + '/' + msg.node_name + '.js';\nmsg.nodename_html = msg.node_folder + msg.node_name + '/' + msg.node_name + '.html';\nmsg.edit_dialog = [];\nmsg._oneditprepare = [];\nmsg._oneditresize = [];\nmsg._oneditsave = [];\nmsg._oneditcancel = [];\nmsg._othercode = {};\nmsg.defaults = [];\nmsg.row_width = env.get('row_width');\nmsg.numinputs = env.get('numinputs');\nmsg.numoutputs = env.get('numoutputs');\nmsg.inc_node_name = env.get('inc_node_name');\nmsg.nodemakerhtml = '';\nmsg.nodemakerjs = '';\nmsg.runtimecode = '';\nif (msg.inc_node_name) {\n    msg.inc_node_name = '    <div class=\"form-row\">' +\"\\n\";\n    msg.inc_node_name += '        <label for=\"node-input-name\"><i class=\"icon-tag\"></i> Name</label>' + \"\\n\";\n    msg.inc_node_name += '        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\">' + \"\\n\";\n    msg.inc_node_name += \"    </div>\";\n}else{\n    msg.inc_node_name = '';\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":40,"wires":[["1a9cbb92df9f9927","4dc54964fd7d8d7b","a79e8a6b35ceac10","4eaf4f130e10c617","1d506b65823c19c3"]]},{"id":"1a9cbb92df9f9927","type":"template","z":"85e13a6e48f6a1c3","name":"package.json","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\n    \"name\": \"node-red-{{node_name}}\",\n    \"version\": \"{{node_version}}\",\n    \"description\": \"A node that merges msg objects until all defined properties are present / conditions met before passing the combined msg along.\",\n    \"author\": \"{{author_name}} <{{author_email}}>\",\n    \"license\": \"MIT\",\n    \"keywords\": [{{{keywords}}}],\n    \"repository\": {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/{{github_handle}}/node-red-{{node_name}}.git\"\n    },\n    \"dependencies\": {\n    },\n    \"node-red\": {\n      \"nodes\": {\n        \"{{node_name}}\": \"{{node_name}}/{{node_name}}.js\"\n      }\n    }\n  }\n  ","output":"str","x":380,"y":40,"wires":[["e164bb1b88912998"]]},{"id":"e164bb1b88912998","type":"file","z":"85e13a6e48f6a1c3","name":"write package.json","filename":"package_json","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":570,"y":40,"wires":[[]]},{"id":"4dc54964fd7d8d7b","type":"template","z":"85e13a6e48f6a1c3","name":".gitignore","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":".DS_Store\nnode_modules\n","output":"str","x":360,"y":80,"wires":[["c2f33b913e572b75"]]},{"id":"c2f33b913e572b75","type":"file","z":"85e13a6e48f6a1c3","name":"write .gitignore","filename":"gitignore","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":560,"y":80,"wires":[[]]},{"id":"a79e8a6b35ceac10","type":"template","z":"85e13a6e48f6a1c3","name":"MIT License","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"MIT License\n\nCopyright (c) 2022 {{author_name}}\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","output":"str","x":370,"y":120,"wires":[["6846859d76b0ec5e"]]},{"id":"6846859d76b0ec5e","type":"file","z":"85e13a6e48f6a1c3","name":"write LICENSE","filename":"license","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":560,"y":120,"wires":[[]]},{"id":"4eaf4f130e10c617","type":"template","z":"85e13a6e48f6a1c3","name":"README.md","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"# node-red-{{node_name}}\n{{{node_description}}}\n","output":"str","x":370,"y":160,"wires":[["7631ff7c6efd5ad8"]]},{"id":"7631ff7c6efd5ad8","type":"file","z":"85e13a6e48f6a1c3","name":"write README.md","filename":"readme","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":570,"y":160,"wires":[[]]},{"id":"1d506b65823c19c3","type":"template","z":"85e13a6e48f6a1c3","name":"customcss","field":"customcss","fieldType":"msg","format":"css","syntax":"mustache","template":".red-ui-tray-content #dialog-form {\n    white-space:nowrap;\n}\n.full-row .red-ui-typedInput-container {\n    min-width: 70%;\n}\n.col input {\n    min-width: 100%;\n}\n.sml-lbl {\n    height: 66px;\n}\n.sml-lbl label {\n    font-size: smaller;\n    margin-bottom: 0px;\n    display: block!important;\n}\n.reg-lbl label {\n    white-space: nowrap;\n    margin-top: 5px;\n    height: 0px;\n}\n.red-ui-editor .form-row label.full-lbl {\n    white-space: normal;\n    width: 100%;\n}\n.col {\n    float: left;\n    margin-right: 5px;\n    min-height: 36px;\n}\n.col .red-ui-typedInput-container {\n    width: 100%!important;\n}\n.col-50 {\n    width: 50%;\n}\n.col-33 {\n    width: 33%;\n}\n.col-66 {\n    width: 66%;\n}\n.col-25 {\n    width: 25%;\n}\n.col-75 {\n    width: 75%;\n}\n.col-100 .red-ui-typedInput-container {\n    width: 70%!important;\n}\n.col-100.no-label .red-ui-typedInput-container {\n    width: 100%!important;\n}\n.txtarea {\n    padding-bottom: 26px;\n}\n.txtarea label {\n    vertical-align: top;\n    margin-top: 3px;\n}\n.txtarea  textarea {\n    width: 70%;\n    margin-bottom: -28px!important;\n}\n.btn-regular {\n    margin-bottom: 14px!important;\n}\n.red-ui-editableList-item-content {\n    display: inline-block;\n    margin-bottom: -6px;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    width: fill-available;\n}\n.red-ui-editableList-item-content .sml-lbl {\n    height: auto;\n}\n","output":"str","x":370,"y":200,"wires":[[]]},{"id":"e4ec4a4c862fd1a8","type":"tab","label":"[node-maker] button, editor, button, button","disabled":false,"info":"### Description\n\nUsing node-maker to create a UI for the [flow2uml node](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-flow2uml)\n\n\n### Related Flows\n\n- [node-maker](https://flowhub.org/f/fa039591fddc0902)\n- [nodedev nodes](https://flowhub.org/f/b92be5062203ff69)\n- [flow2uml node flow](https://flowhub.org/f/8e598f0f47194617)\n\n### Related Project\n\n- [node-maker @ github](https://github.com/Steveorevo/node-maker)","env":[]},{"id":"71b40a1c68133329","type":"group","z":"e4ec4a4c862fd1a8","name":"generated nodes","style":{"label":true},"nodes":["912a03cc15e2b7f8","2ca25e9aaa8584f4"],"x":1416,"y":484,"w":232,"h":132},{"id":"7be9eff876bb7b6f","type":"ClientCode","z":"e4ec4a4c862fd1a8","name":"Open import dialog","clientcode":"function doIt() {\n  var content = payload.flowContent;\n\n  if (payload.removeduplicates) {\n    content = content.filter((elem) => {\n      return RED.nodes.node(elem.id) == undefined\n    });\n  }\n\n  if (content.length == 0) {\n    RED.notify(\"No new content\", {\n      type: \"ok\",\n      id: \"TriggerImport\",\n      timeout: 2000\n    });\n    return;\n  }\n  RED.clipboard.import();\n\n  setTimeout(() => {\n    $('#red-ui-clipboard-dialog-import-text').val(\n      JSON.stringify(content)\n    ).trigger(\"paste\");\n\n    if (payload.autoimport) {\n      setTimeout(() => {\n        $('#red-ui-clipboard-dialog-ok').trigger('click');\n      }, 435);\n    }\n  }, 300);\n};\n\ndoIt();\n","format":"javascript","x":1592,"y":1100,"wires":[[]]},{"id":"e7225fc63afeaa41","type":"inject","z":"e4ec4a4c862fd1a8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":328,"y":499.5,"wires":[["680d69004e434f4d"]]},{"id":"680d69004e434f4d","type":"subflow:85e13a6e48f6a1c3","z":"e4ec4a4c862fd1a8","name":"","env":[{"name":"node_name","value":"flow2umlnode","type":"str"},{"name":"node_version","value":"0.0.2","type":"str"},{"name":"node_description","value":"An example node","type":"str"},{"name":"node_category","value":"common","type":"str"},{"name":"node_palettelabel","value":"Example","type":"str"},{"name":"node_icon","value":"globe","type":"str"},{"name":"node_color","value":"#E2D96E","type":"str"},{"name":"keywords","value":"example","type":"str"},{"name":"author_name","value":"Armand Goldman","type":"str"},{"name":"author_email","value":"agoldman@dev.cc","type":"str"},{"name":"github_handle","value":"armandgoldman","type":"str"},{"name":"node_paletelabel","value":"Examplesdsa","type":"str"}],"x":538,"y":499.5,"wires":[["47ff8038489335b0"]]},{"id":"51bf14751209bcb5","type":"subflow:4a68dea86378d1c1","z":"e4ec4a4c862fd1a8","name":"","x":771,"y":858,"wires":[["afee3ff29416aa61"]]},{"id":"cae0e1b78fde97e6","type":"template","z":"e4ec4a4c862fd1a8","name":"runtimecode","field":"runtimecode","fieldType":"msg","format":"javascript","syntax":"mustache","template":"node.on('input', function(msg) {\n    msg.payload = \"{{node_name}}\";\n    node.send(msg);\n});","output":"str","x":771,"y":810,"wires":[["51bf14751209bcb5"]]},{"id":"594e615f7db3adc7","type":"subflow:9771d13dd19bf60f","z":"e4ec4a4c862fd1a8","name":"","x":771,"y":760,"wires":[["cae0e1b78fde97e6"]]},{"id":"afee3ff29416aa61","type":"template","z":"e4ec4a4c862fd1a8","name":"create a flow with two PkgFile nodes","field":"nodeInputTemplate","fieldType":"msg","format":"json","syntax":"mustache","template":"[\n{\n                \"type\": \"PkgFile\",\n                \"name\": \"{{ node_name }}.js\",\n                \"filename\": \"nodes/{{ node_name }}.js\",\n                \"template\": \"\",\n                \"syntax\": \"mustache\",\n                \"format\": \"javascript\",\n                \"output\": \"str\",\n                \"x\": 100,\n                \"y\": 50,\n                \"wires\": [[]]\n},\n{\n                \"type\": \"PkgFile\",\n                \"name\": \"{{ node_name }}.html\",\n                \"filename\": \"nodes/{{ node_name }}.html\",\n                \"template\": \"\",\n                \"syntax\": \"mustache\",\n                \"format\": \"html\",\n                \"output\": \"str\",\n                \"x\": 100,\n                \"y\": 100,\n                \"wires\": [[]]\n}\n]","output":"json","x":1193,"y":862,"wires":[["18143aa9af882437"]]},{"id":"18143aa9af882437","type":"function","z":"e4ec4a4c862fd1a8","name":"fill json template with templates generated by node-maker","func":"msg.nodeInputTemplate[0][\"id\"] = RED.util.generateId();\nmsg.nodeInputTemplate[1][\"id\"] = RED.util.generateId();\n\nmsg.nodeInputTemplate[1].template = msg.nodeHtmlContent;\nmsg.nodeInputTemplate[0].template = msg.nodeJsContent;\n\nmsg.payload = {\n    flowContent: msg.nodeInputTemplate\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1368,"y":981,"wires":[["7be9eff876bb7b6f"]]},{"id":"33f5c242caf2cc76","type":"exec","z":"e4ec4a4c862fd1a8","command":"service nodered restart","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"restart node-red using service","x":1456,"y":197,"wires":[["5332a00a14881508"],["5332a00a14881508"],["5332a00a14881508"]]},{"id":"5332a00a14881508","type":"debug","z":"e4ec4a4c862fd1a8","name":"debug 52","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1771,"y":273,"wires":[]},{"id":"91838eb25c876932","type":"inject","z":"e4ec4a4c862fd1a8","name":"DON'T PRESS HERE - WILL RESTART YOUR NODE RED INSTANCE","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1017,"y":91,"wires":[["33f5c242caf2cc76"]]},{"id":"47ff8038489335b0","type":"subflow:c70964ba34544694","z":"e4ec4a4c862fd1a8","name":"","env":[{"name":"field_columns","value":"col col-50","type":"str"},{"name":"field_name","value":"genmerdiagbut","type":"str"},{"name":"field_label","value":"Generate Mermaid Diagram","type":"str"},{"name":"field_icon","value":"plug","type":"str"},{"name":"button_size","value":"red-ui-button btn-regular","type":"str"}],"x":889,"y":328,"wires":[["ac3e619e52d7d0e5"]]},{"id":"ac3e619e52d7d0e5","type":"subflow:b30b4cf6837f20a7","z":"e4ec4a4c862fd1a8","name":"","env":[{"name":"field_name","value":"genmerdirection","type":"str"},{"name":"field_label","value":"Direction","type":"str"},{"name":"field_icon","value":"compass","type":"str"},{"name":"field_values","value":"Top to Bottom:a,Left to Right:b","type":"str"},{"name":"field_default","value":"a","type":"str"}],"x":910,"y":399,"wires":[["c2bbd53877e1f2b5"]]},{"id":"c2bbd53877e1f2b5","type":"subflow:60de16a0fefb7ace","z":"e4ec4a4c862fd1a8","name":"","env":[{"name":"field_name","value":"genmereditor","type":"str"},{"name":"field_default","value":"Please wait ...","type":"str"},{"name":"field_label","value":"UML","type":"str"},{"name":"field_icon","value":"pencil","type":"str"},{"name":"editor_formatting","value":"none:text","type":"str"}],"x":927,"y":464,"wires":[["10d67e82a22048f7"]]},{"id":"10d67e82a22048f7","type":"subflow:c70964ba34544694","z":"e4ec4a4c862fd1a8","name":"","env":[{"name":"field_columns","value":"col col-50","type":"str"},{"name":"field_name","value":"genmersavebut","type":"str"},{"name":"field_label","value":"Save","type":"str"},{"name":"field_icon","value":"save","type":"str"},{"name":"button_size","value":"red-ui-button btn-regular","type":"str"}],"x":959,"y":534,"wires":[["d4b0b22c237d93c3"]]},{"id":"d4b0b22c237d93c3","type":"subflow:c70964ba34544694","z":"e4ec4a4c862fd1a8","name":"","env":[{"name":"field_columns","value":"col col-50","type":"str"},{"name":"field_name","value":"genmercopy","type":"str"},{"name":"field_label","value":"Copy","type":"str"},{"name":"field_icon","value":"copy","type":"str"},{"name":"button_size","value":"red-ui-button btn-regular","type":"str"}],"x":977,"y":603,"wires":[["594e615f7db3adc7"]]},{"id":"912a03cc15e2b7f8","type":"PkgFile","z":"e4ec4a4c862fd1a8","g":"71b40a1c68133329","name":"flow2umlnode.js","filename":"nodes/flow2umlnode.js","format":"javascript","syntax":"mustache","template":"module.exports = function(RED) {\n    function flow2umlnode(config) {\n        RED.nodes.createNode(this,config);\n        var node = this;\n        node.on('input', function(msg) {\n    msg.payload = \"flow2umlnode\";\n    node.send(msg);\n});\n    }\n    RED.nodes.registerType('flow2umlnode', flow2umlnode);\n}","output":"str","x":1532,"y":525,"wires":[[]]},{"id":"2ca25e9aaa8584f4","type":"PkgFile","z":"e4ec4a4c862fd1a8","g":"71b40a1c68133329","name":"flow2umlnode.html","filename":"nodes/flow2umlnode.html","format":"html","syntax":"mustache","template":"<style>\n    .red-ui-tray-content #dialog-form {\n    white-space:nowrap;\n}\n.full-row .red-ui-typedInput-container {\n    min-width: 70%;\n}\n.col input {\n    min-width: 100%;\n}\n.sml-lbl {\n    height: 66px;\n}\n.sml-lbl label {\n    font-size: smaller;\n    margin-bottom: 0px;\n    display: block!important;\n}\n.reg-lbl label {\n    white-space: nowrap;\n    margin-top: 5px;\n    height: 0px;\n}\n.red-ui-editor .form-row label.full-lbl {\n    white-space: normal;\n    width: 100%;\n}\n.col {\n    float: left;\n    margin-right: 5px;\n    min-height: 36px;\n}\n.col .red-ui-typedInput-container {\n    width: 100%!important;\n}\n.col-50 {\n    width: 50%;\n}\n.col-33 {\n    width: 33%;\n}\n.col-66 {\n    width: 66%;\n}\n.col-25 {\n    width: 25%;\n}\n.col-75 {\n    width: 75%;\n}\n.col-100 .red-ui-typedInput-container {\n    width: 70%!important;\n}\n.col-100.no-label .red-ui-typedInput-container {\n    width: 100%!important;\n}\n.txtarea {\n    padding-bottom: 26px;\n}\n.txtarea label {\n    vertical-align: top;\n    margin-top: 3px;\n}\n.txtarea  textarea {\n    width: 70%;\n    margin-bottom: -28px!important;\n}\n.btn-regular {\n    margin-bottom: 14px!important;\n}\n.red-ui-editableList-item-content {\n    display: inline-block;\n    margin-bottom: -6px;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    width: fill-available;\n}\n.red-ui-editableList-item-content .sml-lbl {\n    height: auto;\n}\n\n</style>\n<script type=\"text/html\" data-template-name=\"flow2umlnode\">\n        <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"icon-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\">\n    </div>\n    <div id=\"node-props\" style=\"width: 460px;\">\n                <div class=\"form-row\">\n            <div class=\"\">\n                <button id=\"btn_genmerdiagbut\" type=\"button\" class=\"red-ui-button btn-regular\"><i class=\"fa fa-plug\"></i> Generate Mermaid Diagram</button>\n            </div>\n            <div class=\"col-100\">\n                <label for=\"node-input-genmerdirection\"><i class=\"fa fa-compass\"></i> Direction</label>\n                <input type=\"text\" id=\"node-input-genmerdirection\">\n            </div><!--col-->\n        </div><!--form-row-->\n        <div class=\"form-row\">\n            <div class=\"col-100\">\n                <label for=\"node-input-genmereditor\"><i class=\"fa fa-pencil\"></i> UML</label>\n                <div style=\"position:absolute;right:0;display:inline-block;text-align:right;font-size: 0.8em;z-index:100;\">\n                    <span data-i18n=\"node-red:template.label.format\">Syntax Highlight</span>:\n                    <select id=\"node-input-format_genmereditor\" style=\"width:110px; font-size: 10px !important;  height: 24px; padding:0;\">\n                        <option value=\"text\">none</option>\n                    </select>\n                    <button id=\"node-function-expand-genmereditor\" class=\"red-ui-button red-ui-button-small\" ><i class=\"fa fa-expand\"></i></button>\n                </div>\n                <div style=\"height: 250px; min-height:150px;\" class=\"node-text-editor\" id=\"node-input-genmereditor-editor\"></div>\n            </div>\n        </div><!--form-row-->\n        <div class=\"form-row\">\n            <div class=\"col-100\">\n                <button id=\"btn_genmersavebut\" type=\"button\" class=\"red-ui-button btn-regular\"><i class=\"fa fa-save\"></i> Save</button>\n            </div>\n        </div><!--form-row-->\n        <div class=\"form-row\">\n            <div class=\"col-100\">\n                <button id=\"btn_genmercopy\" type=\"button\" class=\"red-ui-button btn-regular\"><i class=\"fa fa-copy\"></i> Copy</button>\n            </div>\n        </div><!--form-row-->\n    </div><!--node-props-->\n</script>\n\n<script type=\"text/html\" data-help-name=\"flow2umlnode\">\n    \n</script>\n\n<script type=\"text/javascript\">\n    RED.nodes.registerType('flow2umlnode', {\n        category: 'common',\n        paletteLabel: 'Example',\n        color: '#E2D96E',\n        defaults: {\n            name: {value:\"\"},\n                        genmerdirection: {value:\"a\"},\n            genmereditor: {value:\"Please wait ...\"},\n            genmereditor_format: {value:\"text\"}\n        },\n        inputs: 1,\n        outputs: 1,\n        icon: \"font-awesome/fa-globe\",\n        label: function() {\n            return this.name || \"flow2umlnode\";\n        },\n        labelStyle: function() {\n            return this.name ? \"node_label_italic\" : \"\";\n        },\n        oneditprepare: function() {\n            \n            // Prepare selectbox genmerdirection\n            $(\"#node-input-genmerdirection\").typedInput({\n                types: [\n                    {\n                        value: \"genmerdirection\",\n                        \n                        options: [\n                            { \"value\":\"a\", \"label\": \"Top to Bottom\"},\n                            { \"value\":\"b\", \"label\": \"Left to Right\"}\n                        ]\n                    }\n                ]\n            });\n\n            // Prepare code editor genmereditor\n            this.editor_genmereditor = RED.editor.createEditor({\n                id: 'node-input-genmereditor-editor',\n                mode: 'ace/mode/text',\n                value: this.genmereditor || \"Please wait ...\"\n            });\n            $('#node-input-genmereditor-editor').parent().css('position', 'relative');\n            $(\"#node-function-expand-genmereditor\").on(\n                \"click\", \n                expandButtonClickHandler(\n                    this.editor_genmereditor,\n                    'genmereditor',\n                    '<label for=\"node-input-genmereditor\"><i class=\"fa fa-pencil\"></i> UML</label>'\n                )\n            );\n            RED.popover.tooltip($(\"#node-function-expand-genmereditor\"), RED._(\"node-red:common.label.expand\"));\n            let editor_genmereditor = this.editor_genmereditor;\n            $(\"#node-input-format_genmereditor\").on(\"change\", function () {\n                var mod = \"ace/mode/\" + $(\"#node-input-format_genmereditor\").val();\n                editor_genmereditor.getSession().setMode({\n                    path: mod,\n                    v: Date.now()\n                });\n            });\n            $('#node-input-format_genmereditor').val(this.genmereditor_format || 'text').trigger('change');\n\n            // Allow dynamic re-size after init. appearance \n            setTimeout(function () {\n                $('#node-props').css('width', '100%');\n            }, 30);\n        },\n        oneditresize: function() {\n            \n        \n        },\n        oneditsave: function() {\n            \n            // Save code editor genmereditor\n            this.genmereditor_format = $('#node-input-format_genmereditor').val();\n            this.genmereditor = this.editor_genmereditor.getValue();\n            this.editor_genmereditor.destroy();\n            delete this.editor_genmereditor;\n\n        },\n        oneditcancel: function() {\n            \n            // Cancel code editor genmereditor\n            this.editor_genmereditor.destroy();\n            delete this.editor_genmereditor;\n\n        }\n    });\n    \n\n/**\n * Expand behavior for code editor \n */\nfunction expandButtonClickHandler(editor, fieldName, fieldLabelElm) {\n    $('#node-function-expand-' + fieldName).click(function() {\n        setTimeout(function() {\n            $('ul.red-ui-tray-breadcrumbs li:nth-child(2)').html(fieldLabelElm);\n        }, 500);\n    });\n    return function (e) {\n        e.preventDefault();\n        var value = editor.getValue();\n        editor.saveView(`inside function-expandButtonClickHandler ${editor.__stateId}`);\n        RED.editor.editJavaScript(\n            {\n                value: value,\n                width: \"Infinity\",\n                stateId: editor.__stateId,\n                mode: \"ace/mode/\" + $('#node-input-format_' + fieldName).val(),\n                focus: true,\n                cancel: function () {\n                    setTimeout(function () {\n                        editor.focus();\n                    }, 250);\n                },\n                complete: function (v, cursor) {\n                    editor.setValue(v, -1);\n                    setTimeout(function () {\n                        editor.restoreView();\n                        editor.focus();\n                    }, 250);\n                }\n            }\n        );\n    }\n}\n\n</script>\n","output":"str","x":1532,"y":575,"wires":[[]]}]