[{"id":"309658afddd23ce2","type":"tab","label":"[OSM] Websocket frontend","disabled":false,"info":"::: aim\n\nImplement a simple frontend using [Leaflet](https://leafletjs.com) to show the warmest places around a center point.\n\n:::\n\n::: prereq\n\n- [geolib](https://www.npmjs.com/package/geolib) - [doco](https://github.com/manuelbieh/geolib#functions)\n\n:::\n\n::: requirements\n\n- Websocket listeners must be configured to the `/ws/osm` endpoint on the server hosting this flow.\n- The <a class=\"ahl-node-only\" data-ids=\"16e0ad4ec4bd3d0e\">link-in</a> node should be connected to a http-in node with a path.\n- Importing of the <a href=\"https://flowhub.org/f/4f3f93dc29d0f1f1\">backend flow</a> for the <a class='ahl-node-only' data-ids='01f5dcbdcf8fda4c'>link-call node</a> to call.\n\n:::\n\n### Flow Explanation\n\nThe flow consists of the <a class='ahl-group-only' data-ids='73d37df90b4e3601'>`http-in receiver, html generator`</a> group that generates the HTML content for the browser and the <a class='ahl-group-only' data-ids=''>`websocket endpoints for handling searches`</a> which handles the websocket communication with the client. It is also responsible for calling the <a href=\"https://flowhub.org/f/4f3f93dc29d0f1f1\">backend flow</a> to obtain the data.\n\n<!--\n\n<a class='' data-ids=''></a>\n\n// [[OSM] Websocket frontend] [tab] \"[OSM] Websocket frontend\" - 309658afddd23ce2\n// [[OSM] Websocket frontend] [group] \"http-in receiver, html generator\" - 73d37df90b4e3601\n// [[OSM] Websocket frontend] [group] \"websocket endpoints for handling searches\" - 4971e3da8708dc68\n// [[OSM] Websocket frontend] [group] \"\" - d3a853a462874680\n// [[OSM] Websocket frontend] [http response] \"\" - cb14fa1b8e8e72b2\n// [[OSM] Websocket frontend] [template] \"index\" - acebdbb12b968dde\n// [[OSM] Websocket frontend] [template] \"cssStyling\" - 02d94732606d0a9c\n// [[OSM] Websocket frontend] [link in] \"[osm] closest warm places - frontend\" - 16e0ad4ec4bd3d0e\n// [[OSM] Websocket frontend] [websocket in] \"&#x2F;ws&#x2F;osm - listener\" - 653681690ce919fd\n// [[OSM] Websocket frontend] [websocket out] \"[ws] &#x2F;ws&#x2F;osm\" - 8f5490df99c69eb6\n// [[OSM] Websocket frontend] [status] \"\" - 4131df402decdc53\n// [[OSM] Websocket frontend] [function] \"send: initialise map\" - 89ab887b5d06b782\n// [[OSM] Websocket frontend] [debug] \"debug 35\" - 66a3599f134cc889\n// [[OSM] Websocket frontend] [json] \"\" - 6939e11081eee5c6\n// [[OSM] Websocket frontend] [function] \"search: convert map cooridinates\" - 08e40c1ed3b3fc81\n// [[OSM] Websocket frontend] [switch] \"which command?\" - 8e076910fa7dbf88\n// [[OSM] Websocket frontend] [debug] \"debug 36\" - 6921553c4b2223c4\n// [[OSM] Websocket frontend] [link call] \"[OSM] Obtain warmest places\" - 01f5dcbdcf8fda4c\n// [[OSM] Websocket frontend] [debug] \"debug 37\" - b43c623c2e32fcb7\n// [[OSM] Websocket frontend] [FlowHubPush] \"\" - ed846c6b32930b07\n// [[OSM] Websocket frontend] [function] \"place point on map\" - 93c845c97b77dc3c\n// [[OSM] Websocket frontend] [catch] \"\" - 3a49d24bc3287f8b\n// [[OSM] Websocket frontend] [function] \"on error, send done\" - 82d642725da1439c\n// [[OSM] Websocket frontend] [FlowHubPull] \"\" - 2e88d0e151c2ce2f\n// [[OSM] Websocket frontend] [function] \"only nodes from flow\" - 57cb2c9232eabfe3\n// [[OSM] Websocket frontend] [json] \"\" - 89bed628deb64df6\n// [[OSM] Websocket frontend] [GetFlows] \"\" - 2d32a243613fa75a\n// [[OSM] Websocket frontend] [inject] \"\" - 39639d71ce7583f6\n// [[OSM] Websocket frontend] [debug] \"debug 22\" - decb892d0194e97a\n// [[OSM] Websocket frontend] [template] \"\" - 244cc9ce8b06feb2\n-->\n\n\n\n\n### Backend\n\nThe [backend](https://flowhub.org/f/4f3f93dc29d0f1f1) flow provides the <a class=\"ahl-node-only\" data-ids=\"01f5dcbdcf8fda4c\">link call node</a> functionality.\n\n### Preview\n\n![img](https://cdn.openmindmap.org/content/1691050920137_Screen_Shot_2023-08-03_at_10.21.03.png)","env":[]},{"id":"73d37df90b4e3601","type":"group","z":"309658afddd23ce2","name":"http-in receiver, html generator","style":{"label":true},"nodes":["cb14fa1b8e8e72b2","acebdbb12b968dde","02d94732606d0a9c","16e0ad4ec4bd3d0e"],"x":161,"y":147,"w":1608,"h":405},{"id":"4971e3da8708dc68","type":"group","z":"309658afddd23ce2","name":"websocket endpoints for handling searches","style":{"label":true},"nodes":["653681690ce919fd","8f5490df99c69eb6","4131df402decdc53","89ab887b5d06b782","66a3599f134cc889","6939e11081eee5c6","08e40c1ed3b3fc81","8e076910fa7dbf88","6921553c4b2223c4","01f5dcbdcf8fda4c","b43c623c2e32fcb7","93c845c97b77dc3c","3a49d24bc3287f8b","82d642725da1439c"],"x":150,"y":605,"w":1623,"h":677},{"id":"cb14fa1b8e8e72b2","type":"http response","z":"309658afddd23ce2","g":"73d37df90b4e3601","name":"","statusCode":"200","headers":{},"x":1683,"y":440,"wires":[]},{"id":"acebdbb12b968dde","type":"template","z":"309658afddd23ce2","g":"73d37df90b4e3601","name":"index","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  <title>Warmest Places</title>\n  \n  <script src=\"https://unpkg.com/jquery@3.7.0/dist/jquery.min.js\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n  <script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\" integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\" crossorigin=\"\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\" integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\" crossorigin=\"\" />\n  \n  <style>\n    {{{ cssStyling }}}\n  </style>\n</head>\n\n<body>\n  <div id=\"root\">\n    <div class=\"quattro\">\n\n    <div id=\"mapcontainer\">\n      <div id=\"map\"></div>\n      <input id=\"findbutton\" class=\"findbuttons\" type=\"button\" name=\"Find\" value=\"Find\"/>\n      <img id=\"spinner\" style=\"width: 24px; display: none;\" src=\"https://cdn.openmindmap.org/content/1690311564501_loader.svg\"/>\n    </div>\n    \n   </div>\n  </div>\n</body>\n\n  <script>\n    $(function(){\n        $('#findbutton').on('click', (e) => {\n          e.preventDefault();\n\n          markers.forEach( (m) => { map.removeLayer(m)});\n          \n          $('#spinner').show();\n\n          var cPt = map.getCenter();\n          var marker = L.marker([cPt.lat, cPt.lng]).addTo(map);\n          markers.push(marker)\n          marker.bindPopup(\"Center Point\");\n\n          socket.send(JSON.stringify({\n            \"cmd\": \"search\",\n            coords: {\n              center: cPt,\n              bbox: map.getBounds()\n            }\n          }))\n        })\n    })\n\n  var socket = undefined;\n  var map;  \n  var markers = [];\n\n  function tempStr(temp) {\n    var sep = decodeURIComponent('%C2%B0') + \"C / \";\n\n    return temp.max + sep + Math.round(temp.avg) + sep + temp.min + sep.substring(0,2);\n  }\n\n  function initSocket() {\n    // Connection opened\n    var loc = window.location, new_uri;\n    if (loc.protocol === \"https:\") {\n        new_uri = \"wss:\";\n    } else {\n        new_uri = \"ws:\";\n    }\n    new_uri += \"//\" + loc.host + \"/ws/osm\";\n\n    socket = new WebSocket(new_uri);\n  \n    socket.onclose = function() {\n      initSocket();\n    };\n  \n    // Listen for messages\n    socket.addEventListener(\"message\", (event) => {\n      var msg = JSON.parse( event.data )\n\n      if ( msg.cmd == \"done\") {\n        $('#spinner').hide();\n      }\n      \n      if ( msg.cmd == \"place\") {\n        $('#spinner').hide();\n\n        var stnMarker = L.marker([msg.station.lat, msg.station.lon]).addTo(map);\n        markers.push(stnMarker)\n        stnMarker.bindPopup(\"<b>Station: \"+msg.station.icao+\"</b><br>\" + tempStr(msg.temp) );\n\n        if ( msg.loc ) {\n          var marker = L.marker([msg.loc.lat, msg.loc.lon]).addTo(map);\n          markers.push(marker)\n          marker.bindPopup(\"<b>\"+msg.town.name+\"</b><br>\" + tempStr(msg.temp) );      \n        }\n      }\n\n      if ( msg.cmd == \"loadmap\") {\n         if ( !map ) {\n           map = L.map('map').setView([51.505, -0.09], 13);\n\n          var tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n              maxZoom: 19,\n              attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n          }).addTo(map);\n         }\n      }\n    });\n  };\n  \n  document.addEventListener(\"DOMContentLoaded\", initSocket );\n  </script>\n</html>\n","output":"str","x":1057,"y":188,"wires":[["cb14fa1b8e8e72b2"]]},{"id":"02d94732606d0a9c","type":"template","z":"309658afddd23ce2","g":"73d37df90b4e3601","name":"cssStyling","field":"cssStyling","fieldType":"msg","format":"css","syntax":"plain","template":"#map { \n  height: 480px; \n}\n\n#mapcontainer {\n  top: 10vh;\n  position: relative;\n}\n\nbody {\n    color: #040506;\n    background-color: #fefcfc;\n    padding-bottom: 40px;\n}\n\n.findbuttons {\n  font-size: 120%;\n  padding: 10px;\n  background-color: rgb(64, 166, 98);\n  margin: 5px;\n  border: 1px solid rgb(229, 219, 219);\n  text-decoration: none;\n  margin-left: 20px;    \n}\n\n@media only screen and (min-width: 680px) {\n    #root {\n        margin: 0 auto;\n        width: 680px;\n    }\n    img {\n        width: 600px;\n    }\n}\n\n@media only screen and (min-width: 750px) {\n    #root {\n        margin: 0 auto;\n        width: 750px;\n    }\n    img {\n        width: 700px;\n    }\n}\n@media only screen and (max-width: 680px) {\n    #root {\n        margin: 0 auto;\n        width: 100%;\n    }\n    img {\n        width: 480px;\n    }\n    .quattro > h2:first-child {\n        font-size: 20px;\n        text-align: center;\n    }\n}\n\n@media only screen and (max-width: 480px) {\n    #root {\n        margin: 0 auto;\n        width: 100%;\n    }\n\n    img {\n        width: 370px;\n    }\n    .quattro > h2:first-child {\n        font-size: 20px;\n        text-align: center;\n    }\n    .quattro {\n        font: 18px/1.5 'League Spartan', sans-serif;\n    }\n}\n\n@media only screen and (max-width: 320px) {\n    #root {\n        margin: 0 auto;\n        width: 100%;\n    }\n\n    img {\n        width: 300px;\n    }\n    .quattro > h2:first-child {\n        font-size: 20px;\n        text-align: center;\n    }\n    .quattro {\n        font: 18px/1.5 'League Spartan', sans-serif;\n    }\n}\n","output":"str","x":974,"y":511,"wires":[["acebdbb12b968dde"]]},{"id":"16e0ad4ec4bd3d0e","type":"link in","z":"309658afddd23ce2","g":"73d37df90b4e3601","name":"[osm] closest warm places - frontend","links":["48aa3953b2a5eda1"],"x":202,"y":220,"wires":[["02d94732606d0a9c"]]},{"id":"653681690ce919fd","type":"websocket in","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"/ws/osm - listener","server":"46bb3e53d8ccd7b6","client":"","x":266,"y":805,"wires":[["6939e11081eee5c6"]]},{"id":"8f5490df99c69eb6","type":"websocket out","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"[ws] /ws/osm","server":"46bb3e53d8ccd7b6","client":"","x":1592,"y":646,"wires":[]},{"id":"4131df402decdc53","type":"status","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"","scope":["653681690ce919fd"],"x":295,"y":775,"wires":[["89ab887b5d06b782"]]},{"id":"89ab887b5d06b782","type":"function","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"send: initialise map","func":"if (msg.status.source.type == \"websocket in\" && msg.status.event == \"connect\") {\n    return {\n        ...msg,\n        payload: {\n            cmd: \"loadmap\"\n        }\n    }    \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":632,"y":647,"wires":[["8f5490df99c69eb6"]]},{"id":"66a3599f134cc889","type":"debug","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"debug 35","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"","statusType":"counter","x":1175,"y":1189,"wires":[]},{"id":"6939e11081eee5c6","type":"json","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"","property":"payload","action":"","pretty":false,"x":244,"y":1241,"wires":[["8e076910fa7dbf88"]]},{"id":"08e40c1ed3b3fc81","type":"function","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"search: convert map cooridinates","func":"var cPt = {\n    latitude: msg.payload.coords.center.lat,\n    longitude: msg.payload.coords.center.lng\n}\n\nvar swCorner = {\n    latitude: msg.payload.coords.bbox._southWest.lat,\n    longitude: msg.payload.coords.bbox._southWest.lng\n}\n\nmsg.myposition = cPt;\nmsg.radius_meters = geolib.getPreciseDistance(cPt,swCorner,1);\nmsg.payload = undefined;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"geolib","module":"geolib"}],"x":682,"y":822,"wires":[["66a3599f134cc889","01f5dcbdcf8fda4c"]]},{"id":"8e076910fa7dbf88","type":"switch","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"which command?","property":"payload.cmd","propertyType":"msg","rules":[{"t":"eq","v":"search","vt":"str"}],"checkall":"false","repair":false,"outputs":1,"x":482,"y":1027,"wires":[["08e40c1ed3b3fc81","6921553c4b2223c4"]]},{"id":"6921553c4b2223c4","type":"debug","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"debug 36","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"","statusType":"counter","x":666,"y":1214,"wires":[]},{"id":"01f5dcbdcf8fda4c","type":"link call","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"[OSM] Obtain warmest places","links":["113dc7c68c360cd1"],"linkType":"static","timeout":"142","x":1064,"y":822,"wires":[["b43c623c2e32fcb7","93c845c97b77dc3c"]]},{"id":"b43c623c2e32fcb7","type":"debug","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"debug 37","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"true","targetType":"full","statusVal":"","statusType":"counter","x":1667,"y":1012,"wires":[]},{"id":"93c845c97b77dc3c","type":"function","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"place point on map","func":"return {\n    ...msg,  \n    payload: {\n        ...msg.payload,\n        cmd: \"place\"\n    }\n}    \n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1394,"y":822,"wires":[["8f5490df99c69eb6"]]},{"id":"3a49d24bc3287f8b","type":"catch","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"","scope":["01f5dcbdcf8fda4c"],"uncaught":false,"x":1092,"y":797,"wires":[["82d642725da1439c"]]},{"id":"82d642725da1439c","type":"function","z":"309658afddd23ce2","g":"4971e3da8708dc68","name":"on error, send done","func":"return {\n    ...msg,  \n    payload: {\n        cmd: \"done\"\n    }\n}    \n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1316,"y":725,"wires":[["8f5490df99c69eb6"]]},{"id":"46bb3e53d8ccd7b6","type":"websocket-listener","path":"/ws/osm","wholemsg":"false"}]