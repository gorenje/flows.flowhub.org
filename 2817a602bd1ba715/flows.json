[{"id":"2817a602bd1ba715","type":"tab","label":"Hello World - part 2: Functionality","disabled":false,"info":"::: aim\n\nDemonstrate the use of computational functionality in the modification of data.\n\n:::\n\n<!--\n// [] [tab] \"Hello World - part 2: Functionality\" - 2817a602bd1ba715\n// [] [group] \"hello world\" - dc04a79992a8a820\n// [] [inject] \"inject\" - e91dd76c9e626a17\n// [] [debug] \"output\" - e67049a804afcf28\n// [] [function] \"functionality\" - 7994a7c90fa6176b\n-->\n\n::: explanation\n\nThis flow extends the [*hello world* flow](https://flowhub.org/f/7bac2d969ad2969f) by adding functionality to modify the data generated by the <a class=\"ahl-node-only\" data-ids=\"e91dd76c9e626a17\">inject node</a>.\n\nThe functionality is represented by a <a class=\"ahl-node-only\" data-ids=\"7994a7c90fa6176b\">function node</a> that can be used to add Javascript code to a flow. The function node is connected to the <a class=\"ahl-link-node\" data-ids=\"e91dd76c9e626a17,7994a7c90fa6176b\">inject node via a wire</a> so the data from the inject node now flows to the function node before being passed on to the <a class=\"ahl-link-node\" data-ids=\"7994a7c90fa6176b,e67049a804afcf28\">debug node</a> to display the final result in the debug panel.\n\nAgain the <a class=\"ahl-link-node\" data-ids=\"e91dd76c9e626a17,7994a7c90fa6176b,e67049a804afcf28\">three connected nodes</a> represent a *flow* and solely for visual purposes, the nodes are <a class=\"ahl-group-only\" data-ids=\"dc04a79992a8a820\">groupped together</a> into a group called *hello world*. Groups can be very useful to visually highlight functionality or logic that several nodes perform together.\n\nThe <a class=\"ahl-node-only\" data-ids=\"7994a7c90fa6176b\">function node</a> contains the following Javascript code:\n\n```javascript\nmsg.payload = msg.payload + \", hello Node-RED\";\n\nreturn msg;\n```\n\nThere are many implicit assumptions in this code, first of all an understanding of Javascript is required. The line `msg.payload = msg.payload + \", hello Node-RED\"` simply appends the string `, hello Node-RED` to the original `hello world` string. This means the new data object contains the string `hello world, hello Node-RED`. \n\nImplicit to understanding that line of code is the knowledge that data passed around in Node-RED is called a message and hence the data object is called `msg`. So the data object passed from node to node is always the `msg` object which has several attributes including the most important attribute: `payload`. It is a convention within Node-RED that each node functionality is applied on the `payload` attribute of the `msg` object.\n\nThe function node implicitly makes the assumption that the inject node has stored its data in the payload attribute, further it assumes that the payload attribute is a string. These assumptions become important when functional reuse is considered. Reusing functions *carries over* these assumptions to situation that perhaps do not fulfill these assumptions.\n\nWhat the line of code in the <a class=\"ahl-node-only\" data-ids=\"7994a7c90fa6176b\">function node</a> then does is to *overwrite* the existing `payload` with a new payload. The final line of code: `return msg` then tells Node-RED that the function node is completed and the msg object can be passed on.\n\nIn this case, the `msg` is solely passed on to the <a class=\"ahl-link-node\" data-ids=\"7994a7c90fa6176b,e67049a804afcf28\">debug node</a>. In [Part 3](https://flowhub.org/f/722b6181086e9abe) it becomes clear why *solely* is important here.\n\n:::\n\n### Related Flows\n\n- [Hello World, part 1](https://flowhub.org/f/7bac2d969ad2969f)\n- [Node-RED Introduction](https://flowhub.org/f/7f8714fa6e835a2a) which is a step-by-step guide for creating flows.","env":[]},{"id":"dc04a79992a8a820","type":"group","z":"2817a602bd1ba715","name":"hello world","style":{"label":true},"nodes":["e91dd76c9e626a17","e67049a804afcf28","7994a7c90fa6176b"],"x":463,"y":333,"w":734,"h":82},{"id":"e91dd76c9e626a17","type":"inject","z":"2817a602bd1ba715","g":"dc04a79992a8a820","name":"inject","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"hello world","payloadType":"str","x":559,"y":374,"wires":[["7994a7c90fa6176b"]]},{"id":"e67049a804afcf28","type":"debug","z":"2817a602bd1ba715","g":"dc04a79992a8a820","name":"output","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1101,"y":374,"wires":[]},{"id":"7994a7c90fa6176b","type":"function","z":"2817a602bd1ba715","g":"dc04a79992a8a820","name":"functionality","func":"msg.payload = msg.payload + \", hello Node-RED\";\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":374,"wires":[["e67049a804afcf28"]]}]