[{"id":"ebc05a6d47a9a190","type":"tab","label":"[GitHub] get all commits for repo","disabled":false,"info":"This flow utilises the [GitHub base functionality](https://flowhub.org/f/390ee0021ded4910) flow to obtain all commits in a repository. All prerequistes of that flow must be fulfilled.\n\nThe <a class=\"ahl-node-only\" data-ids=\"fb9be31c6a6872b4\">initial change node</a> in the flow sets the repository details:\n\n- owner: github username\n- repo: repository of interest\n- branch: the branch for which the commits should be retrieved\n\n### Inputs \n\nThe <a class=\"ahl-node-only\" data-ids=\"c19fc1b73848f92d\">link in node</a> is assumed to provide the `msg.github` object, for example: \n\n```javascript\nmsg.github = {\n    owner: 'octokat',\n    repo: 'kittens.robots',\n    branch: 'main'\n};\n```\n\n### Workings\n\nThe flow loops through each commit until it reaches the initial commit. It begins with the latest commit, takes the parent of that commit and repeats.\n\nOnce the parent commit is null, the first commit has been reached.\n\nThe ordering of the commits is reverse order, that is, the latest commit backward to the first commit.\n\n### Output\n\nThe payload output is an array of commit objects, e.g.:\n\n```\nmsg.paylad = [\n    ...\n    {\n        \"sha\": \"cq33b1dqacfb3ceqc3acffdbdqadb1qdf468qb7a\",\n        \"node_id\": \"C_kwDOKAh1BNoAKGM1MDBiMWQ1YWNmYjNjZTVjMzljZmZkYmQ1OWRiMTVkZjQ2ODViN2E\",\n        \"url\": \"https://.../git/commits/cq33b1dqacfb3ceqc3acffdbdqadb1qdf468qb7a\",\n        \"html_url\": \"https://.../commit/cq33b1dqacfb3ceqc3acffdbdqadb1qdf468qb7a\",\n        \"author\": {\n            \"name\": \"Author Name\",\n            \"email\": \"author@example.org\",\n            \"date\": \"2323-17-31T32:31:qZ\"\n        },\n        \"committer\": {\n            \"name\": \"Committer Name\",\n            \"email\": \"commit@fubar.org\",\n            \"date\": \"2323-17-31T32:31:qZ\"\n        },\n        \"tree\": {\n            \"sha\": \"cea3f28d6ae3aeq71f6qa6aqab48e3q473abq8\",\n            \"url\": \"https://.../git/trees/cea3f28d6ae3aeq71f6qa6aqab48e3q473abq8\"\n        },\n        \"message\": \"top level commit message\",\n        \"parents\": [\n            {\n            \"sha\": \"f76da2fecadec7aq1bc36b667eq3qb312eddae8d\",\n            \"url\": \"https://.../commits/3fq8f183c1q7372b68177q873f4bf7a1cac1feeb\",\n            \"html_url\": \"https://.../commit/3fq8f183c1q7372b68177q873f4bf7a1cac1feeb\"\n            }\n        ],\n        \"verification\": {\n            \"verified\": false,\n            \"reason\": \"unsigned\",\n            \"signature\": null,\n            \"payload\": null\n        },\n    }\n  ...\n]\n```","env":[]},{"id":"370f94720362e3b4","type":"group","z":"ebc05a6d47a9a190","name":"get all commits for repo","style":{"label":true},"nodes":["20bbad33969051ee","fb9be31c6a6872b4","e95730737b5a7c74","4559aaa37c73c4c7","ff2ee2a8eac4a1a1","802fe3437bb47294","8c40b10c98e6ce53"],"x":564,"y":340,"w":1171,"h":302},{"id":"c19fc1b73848f92d","type":"link in","z":"ebc05a6d47a9a190","name":"[github] get all flow commits","links":[],"x":442,"y":414,"wires":[["fb9be31c6a6872b4"]]},{"id":"579a878e0305c76e","type":"link out","z":"ebc05a6d47a9a190","name":"link out 102","mode":"return","links":[],"x":1824,"y":387,"wires":[]},{"id":"20bbad33969051ee","type":"link call","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"[github] current repo version","links":["c90bd91e45e1ac7e"],"linkType":"static","timeout":"30","x":710,"y":506,"wires":[["802fe3437bb47294"]]},{"id":"fb9be31c6a6872b4","type":"change","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"owner,branch,repo","rules":[{"t":"set","p":"repo","pt":"msg","to":"github.repo","tot":"msg"},{"t":"set","p":"owner","pt":"msg","to":"github.owner","tot":"msg"},{"t":"set","p":"branch","pt":"msg","to":"github.branch","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":699,"y":415,"wires":[["20bbad33969051ee"]]},{"id":"e95730737b5a7c74","type":"link call","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"[github] get commits for sha","links":["dbdea53966e72031"],"linkType":"static","timeout":"30","x":1137,"y":601,"wires":[["4559aaa37c73c4c7"]]},{"id":"4559aaa37c73c4c7","type":"function","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"push commit onto stack and set next commit sha","func":"msg.commits.push({...msg.payload})\n\nmsg.payload = (msg.payload.parents && msg.payload.parents[0] && msg.payload.parents[0].sha);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1349,"y":520,"wires":[["ff2ee2a8eac4a1a1"]]},{"id":"ff2ee2a8eac4a1a1","type":"switch","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"is loop done?","property":"payload","propertyType":"msg","rules":[{"t":"nnull"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1121,"y":381,"wires":[["e95730737b5a7c74"],["8c40b10c98e6ce53"]]},{"id":"802fe3437bb47294","type":"change","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"set parent_sha and commits","rules":[{"t":"set","p":"parent_sha","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"commits","pt":"msg","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":713,"y":598,"wires":[["e95730737b5a7c74"]]},{"id":"8c40b10c98e6ce53","type":"function","z":"ebc05a6d47a9a190","g":"370f94720362e3b4","name":"commits become payload","func":"msg.payload = [...msg.commits];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1599,"y":387,"wires":[["579a878e0305c76e"]]}]