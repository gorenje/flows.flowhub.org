[{"id":"31ea3193ec1a2117","type":"tab","label":"[GitHub] commit single file","disabled":false,"info":"This flow utilises the [GitHub base functionality](https://flowhub.org/f/390ee0021ded4910) flow to obtain all commits in a repository. All prerequistes of that flow must be fulfilled.\n\n### Aim\n\nTo commit a single file to the top-level of the repository, something like a `README.md` or `LICENSE` file. \n\nThe assumption being here that its the top-level because this flow compares shas and if the sha has not changed, the file is not committed since there was no change to commit.\n\nThe REST API allows for making empty commits, so without this check, the flow would produce empty commits.\n\nThis check is relied upon since sometimes things just don't change, so let GitHub decide whether something is new.\n\n### Inputs\n\nThe <a class=\"ahl-node-only\" data-ids=\"46ab795f34a06748\">link in node</a> is assumed to pass this structure:\n\n```\nmsg.github =  {\n    repo: \"repo\",\n    branch: \"main\",\n    owner: \"octokat\",\n    author: {\n        name: \"Author Name\",\n        email: \"author@example.org\"\n    },\n    message: \"commit message\",\n    filename: \"filename\"\n}\n\nmsg.payload = \"<file content in original form>;\n```\n\nThe payload will be converted into base64 since GitHub assumes all data is base64 encoded, so this flow does that as <a class=\"ahl-node-only\" data-ids=\"4c8418b330857461\">first step</a>.\n\n### Sequence diagram\n\n```mermaid\nsequenceDiagram\n    LinkIn->>Flow: File content and repo details\n    Flow->>Flow: encode file content to base64\n    Flow->>GitHub: create blob sha for base64 file content\n    GitHub->>Flow: blob sha for file content\n    Flow->>Flow: store blob sha into `msg`\n    Flow->>GitHub: get current version for repo\n    GitHub->>Flow: latest revision of repo\n    Flow->>GitHub: get shas for all files on the top level for current version\n    GitHub->>Flow: tree with all file shas on the top level\n    break if sha for file is the same as blob sha\n        Flow->>LinkOut: same sha nothing changed\n    end\n    Flow->>Flow: setup tree structure for cFlowit\n    Flow->>GitHub: create tree for structure\n    GitHub->>Flow: sha for tree\n    Flow->>GitHub: create cFlowit for tree sha\n    GitHub->>Flow: sha for cFlowit\n    Flow->>GitHub: Update branch head with new cFlowit sha\n    GitHub->>LinkOut: new sha for branch\n```\n\n### Output \n\nThe payload is the new sha of the branch that was updated.\n\n","env":[]},{"id":"9046d64ce5fb5bd9","type":"junction","z":"31ea3193ec1a2117","x":5,"y":786.7142510414124,"wires":[[]]},{"id":"f1c5454109df3690","type":"change","z":"31ea3193ec1a2117","name":"blobs","rules":[{"t":"set","p":"blobs","pt":"msg","to":"[\t   {\t       \"path\": msg.github.filename,\t       \"sha\": msg.payload \t   }\t]","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":540.1428833007812,"y":360,"wires":[["2a51c1e5167ec4bf"]]},{"id":"2a51c1e5167ec4bf","type":"link call","z":"31ea3193ec1a2117","name":"[github] current repo version","links":["c90bd91e45e1ac7e"],"linkType":"static","timeout":"30","x":764.1428833007812,"y":643,"wires":[["c32a27816ab58ffa"]]},{"id":"e133a142203c7654","type":"link call","z":"31ea3193ec1a2117","name":"[github] create blobs","links":["08d2d7135f31a878"],"linkType":"static","timeout":"30","x":432.1429443359375,"y":590,"wires":[["f1c5454109df3690"]]},{"id":"9a49473390a53bdc","type":"change","z":"31ea3193ec1a2117","name":"blobs --> payload, message & author","rules":[{"t":"set","p":"payload","pt":"msg","to":"blobs","tot":"msg","dc":true},{"t":"set","p":"message","pt":"msg","to":"github.message","tot":"msg"},{"t":"set","p":"author","pt":"msg","to":"github.author","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1404.1429443359375,"y":395,"wires":[["d24b925e23a798aa"]]},{"id":"d24b925e23a798aa","type":"link call","z":"31ea3193ec1a2117","name":"[github] create tree from blobs","links":["78d886e3f8af26b7"],"linkType":"static","timeout":"30","x":1730.1429443359375,"y":505,"wires":[["9d707cde03aa1127"]]},{"id":"9d707cde03aa1127","type":"link call","z":"31ea3193ec1a2117","name":"[github] create commit","links":["ab95f13fbc3a2d5b"],"linkType":"static","timeout":"30","x":2023.142822265625,"y":599,"wires":[["bf171e23822b4930"]]},{"id":"bf171e23822b4930","type":"link call","z":"31ea3193ec1a2117","name":"[github] update branch head","links":["2df1a9a310e8a9fd"],"linkType":"static","timeout":"30","x":2276.142822265625,"y":729,"wires":[["d1893577befbae81"]]},{"id":"2c0226e9eae105e3","type":"change","z":"31ea3193ec1a2117","name":"owner, repo, branch","rules":[{"t":"set","p":"owner","pt":"msg","to":"github.owner","tot":"msg"},{"t":"set","p":"repo","pt":"msg","to":"github.repo","tot":"msg"},{"t":"set","p":"branch","pt":"msg","to":"github.branch","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":306.14288330078125,"y":460,"wires":[["e133a142203c7654"]]},{"id":"30cb1762817467fc","type":"link call","z":"31ea3193ec1a2117","name":"[github] get tree for sha","links":["43d3a872c31bb664"],"linkType":"static","timeout":"30","x":1140.142822265625,"y":686,"wires":[["8bf00865f609def5"]]},{"id":"8bf00865f609def5","type":"switch","z":"31ea3193ec1a2117","name":"not the same sha?","property":"$filter(\t   msg.payload,\t   function($value) { $value.path = msg.github.filename }\t).sha","propertyType":"jsonata","rules":[{"t":"eq","v":"blobs[0].sha","vt":"msg"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":1098.1429443359375,"y":237,"wires":[["d1893577befbae81"],["9a49473390a53bdc"]]},{"id":"c32a27816ab58ffa","type":"change","z":"31ea3193ec1a2117","name":"set parent_sha","rules":[{"t":"set","p":"parent_sha","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":796.142822265625,"y":269,"wires":[["30cb1762817467fc"]]},{"id":"4c8418b330857461","type":"base64","z":"31ea3193ec1a2117","name":"","action":"","property":"payload","x":179.14288330078125,"y":572,"wires":[["2c0226e9eae105e3"]]},{"id":"46ab795f34a06748","type":"link in","z":"31ea3193ec1a2117","name":"link in 2","links":[],"x":63,"y":527,"wires":[["4c8418b330857461"]]},{"id":"d1893577befbae81","type":"link out","z":"31ea3193ec1a2117","name":"link out 106","mode":"return","links":[],"x":2544,"y":236,"wires":[]}]