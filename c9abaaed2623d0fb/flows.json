[{"id":"c9abaaed2623d0fb","type":"tab","label":"[GitHub] Flows.json backup","disabled":false,"info":"::: aim\n\nBackup flows regularly to a GitHub repository. \n\nThis can be useful for disk-less installations of Node-RED, as is the case with this installation. Using the inbuilt project feature of Node-RED (which provides versioning using git) requires a disk, this does not.\n\n:::\n\n::: requirements\n\n1. This flow requires the GetFlows node from the [introspection](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection) node package.\n\n2. The [GitHub base functionality](https://flowhub.org/f/390ee0021ded4910) flow needs to be imported into Node-RED. This flow will require a GitHub API token --> obtaining a token is a further requirement.\n\n3. Create a github (either private or public) repository (e.g., `flowsbackup`) and generate an initial commit using something like this:\n\n```\necho \"# flowsbackup\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:<github-username>/flowsbackup.git\ngit push -u origin main\n```\n\nAn existing repository can also be used of course! \n\n:::\n\n### Configuration\n\nThe flow needs to be configured to be usable:\n\n- A <a class=\"ahl-group-only\" data-ids=\"673668559d4a98fd\">commit message</a> needs to be defined in the inject nodes.\n- The GetFlows node requires <a class=\"ahl-group-only\" data-ids=\"f40d586cb90134ed\">Node-RED authentication</a> to obtain the flow data from the server. If you are not using any authentication, then this can be left blank.\n- GitHub details have be <a class=\"ahl-group-only\" data-ids=\"6380cd936b0f4466\">filled in</a>:\n\n![img](https://cdn.openmindmap.org/content/1694435897635_Screen_Shot_2023-09-11_at_14.36.04.png)\n\n  - `owner` is your github username\n  - `repo` is the name of the repo to store the backups, e.g. `flowsbackup`\n  - `author_name` is the name displayed in each commit. Can be someone elses name.\n  - `author_email` is the email of the person doing the commiting. Can be any email although your own email might be sensible.\n  - `branch` best left as main, other branch names might or might not work - not tested.\n  - `flowname` is the file name to be used in the repository to store the flow JSON data. Can be anything but **do not include '/' (slashes) or special characters.**\n\n::: background\n\nThis flow will commit a JSON file containing the all flows within the Node-RED instance. The flow details are taken from the server meaning that any changes not yet deployed are not committed. The flow file will be commited to the top level of the repository.\n\n:::\n\n::: explanation\n\nThe flow can be triggered whenever its required. I haven't yet found a way of triggering it after a deploy since there isn't an event triggered after the completion of deployment.\n\nI trigger this flow every 15 mins. Since the flow data comes from the server, the flow is a usable, deployable flow. Also since nothing is done if the flow has not changed, no commit is created if nothing has changed. This means the repository only contains commits if the flow did change.\n\nThere are two states this <a class=\"ahl-group-only\" data-ids=\"1b96791f1bd734d7\">flow ends on</a>, either <a class=\"ahl-link-node\" data-ids=\"1b5de8db98db73a7,ce051f0efd7bcc36\">no commit, flow the same</a> or a commit was created and the repository <a class=\"ahl-link-node\" data-ids=\"cf6d26e5a89a6e10,341c67d49a306f71\">updated with a new commit</a>. From those two states, other things may be triggered, for example, sending an email or updating a readme.\n\n:::\n\n### Related Flows\n\n- [GitHub base functionality](https://flowhub.org/f/390ee0021ded4910)\n- [GitHub backup visualisation](https://flowhub.org/f/3586922cb708a29c)\n\n","env":[]},{"id":"673668559d4a98fd","type":"group","z":"c9abaaed2623d0fb","name":"Set commit message","style":{"label":true},"nodes":["3a2e311a5a433d04","18336e5e1dc3ec4d"],"x":6,"y":130,"w":372,"h":263},{"id":"f40d586cb90134ed","type":"group","z":"c9abaaed2623d0fb","name":"Config with Node-RED auth","style":{"label":true},"nodes":["e0e8387b2c6e7c77"],"x":507,"y":216,"w":182,"h":82},{"id":"6380cd936b0f4466","type":"group","z":"c9abaaed2623d0fb","name":"GitHub repo, user, etc.","style":{"label":true},"nodes":["2792de59832626c0"],"x":946,"y":216,"w":192,"h":82},{"id":"1b96791f1bd734d7","type":"group","z":"c9abaaed2623d0fb","name":"Commit Flow, commits flows to the top level of the repository","style":{"label":true},"nodes":["f05d0a3d3d91e098","c3e46ef1256ef669","c581bf4e11cc9592","d6dad54edde4ae8a","8d842b6736915c3f","3ccef7498c73e274","cf6d26e5a89a6e10","bab8139a8c45a4db","1b5de8db98db73a7","17d2b1f787a6db2c","ce051f0efd7bcc36","341c67d49a306f71"],"x":1304,"y":209,"w":1658,"h":362},{"id":"f05d0a3d3d91e098","type":"change","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"blobs","rules":[{"t":"set","p":"blobs","pt":"msg","to":"[]","tot":"json"},{"t":"set","p":"blobs[0]","pt":"msg","to":"{\t   \"path\": msg.backupcfg.flowname,\t   \"sha\": msg.payload \t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1666,"y":257,"wires":[["c3e46ef1256ef669"]]},{"id":"c3e46ef1256ef669","type":"link call","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"[github] current repo version","links":["c90bd91e45e1ac7e"],"linkType":"static","timeout":"30","x":1643,"y":369,"wires":[["17d2b1f787a6db2c"]]},{"id":"c581bf4e11cc9592","type":"link call","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"[github] create blobs","links":["08d2d7135f31a878"],"linkType":"static","timeout":"30","x":1430,"y":257,"wires":[["f05d0a3d3d91e098"]]},{"id":"d6dad54edde4ae8a","type":"change","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"blobs --> payload, message & author","rules":[{"t":"set","p":"payload","pt":"msg","to":"blobs","tot":"msg","dc":true},{"t":"set","p":"message","pt":"msg","to":"backupcfg.commit_message","tot":"msg"},{"t":"set","p":"author","pt":"msg","to":"{\t   \"name\": msg.backupcfg.author_name,\t   \"email\": msg.backupcfg.author_email\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":2449,"y":358,"wires":[["8d842b6736915c3f"]]},{"id":"8d842b6736915c3f","type":"link call","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"[github] create tree from blobs","links":["78d886e3f8af26b7"],"linkType":"static","timeout":"30","x":2429,"y":417,"wires":[["3ccef7498c73e274"]]},{"id":"3ccef7498c73e274","type":"link call","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"[github] create commit","links":["ab95f13fbc3a2d5b"],"linkType":"static","timeout":"30","x":2399,"y":473,"wires":[["cf6d26e5a89a6e10"]]},{"id":"cf6d26e5a89a6e10","type":"link call","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"[github] update branch head","links":["2df1a9a310e8a9fd"],"linkType":"static","timeout":"30","x":2419,"y":530,"wires":[["341c67d49a306f71"]]},{"id":"2792de59832626c0","type":"change","z":"c9abaaed2623d0fb","g":"6380cd936b0f4466","name":"configuration","rules":[{"t":"set","p":"owner","pt":"msg","to":"<githubusername>","tot":"str"},{"t":"set","p":"repo","pt":"msg","to":"<public or private github repo>","tot":"str"},{"t":"set","p":"backupcfg.author_name","pt":"msg","to":"<Firstname Lastname>","tot":"str"},{"t":"set","p":"backupcfg.author_email","pt":"msg","to":"<email for github>","tot":"str"},{"t":"set","p":"branch","pt":"msg","to":"main","tot":"str"},{"t":"set","p":"backupcfg.flowname","pt":"msg","to":"flows.json","tot":"str"},{"t":"set","p":"backupcfg.commit_message","pt":"msg","to":"github_message","tot":"msg"},{"t":"set","p":"base64_original_content","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1042,"y":257,"wires":[["c581bf4e11cc9592"]]},{"id":"bab8139a8c45a4db","type":"link call","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"[github] get tree for sha","links":["43d3a872c31bb664"],"linkType":"static","timeout":"30","x":1890,"y":477,"wires":[["1b5de8db98db73a7"]]},{"id":"1b5de8db98db73a7","type":"switch","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"not the same sha?","property":"$filter(\t   msg.payload,\t   function($value) { $value.path = msg.backupcfg.flowname }\t).sha","propertyType":"jsonata","rules":[{"t":"eq","v":"blobs[0].sha","vt":"msg"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2129,"y":257,"wires":[["ce051f0efd7bcc36"],["d6dad54edde4ae8a"]]},{"id":"17d2b1f787a6db2c","type":"change","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"set parent_sha","rules":[{"t":"set","p":"parent_sha","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1878,"y":257,"wires":[["bab8139a8c45a4db"]]},{"id":"49f0d383a0117622","type":"base64","z":"c9abaaed2623d0fb","name":"","action":"str","property":"payload","x":814,"y":257,"wires":[["2792de59832626c0"]]},{"id":"ce051f0efd7bcc36","type":"function","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"status - nothing changed, no commit","func":"node.status({\n    fill: \"yellow\",\n    shape: 'dot',\n    text: \"same sha, same content\"\n})\n\nsetTimeout( () => { node.status({}) }, 2500);","outputs":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2786,"y":250,"wires":[]},{"id":"341c67d49a306f71","type":"function","z":"c9abaaed2623d0fb","g":"1b96791f1bd734d7","name":"status - change committed","func":"node.status({\n    fill: \"green\",\n    shape: 'dot',\n    text: \"committed: \" + msg.payload\n})\n\nsetTimeout( () => { node.status({}) }, 2500);","outputs":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2816,"y":529,"wires":[]},{"id":"e0e8387b2c6e7c77","type":"GetFlows","z":"c9abaaed2623d0fb","g":"f40d586cb90134ed","name":"","flowVersion":"v1","useAuthentication":false,"apiUsername":"NODE_RED_USERNAME","apiUsernameType":"env","apiPassword":"NODE_RED_PASSWORD","apiPasswordType":"env","x":593,"y":257,"wires":[["49f0d383a0117622"]]},{"id":"3a2e311a5a433d04","type":"inject","z":"c9abaaed2623d0fb","g":"673668559d4a98fd","name":"Manual triggered backup with message","props":[{"p":"github_message","v":"test ing the flow for commiting","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":202,"y":171,"wires":[["e0e8387b2c6e7c77"]],"icon":"@gorenje/node-red-contrib-writermap-mindmap/github-mark.svg"},{"id":"18336e5e1dc3ec4d","type":"inject","z":"c9abaaed2623d0fb","d":true,"g":"673668559d4a98fd","name":"Automatic backup every 15 mins","props":[{"p":"github_message","v":"triggered backup of flows","vt":"str"}],"repeat":"900","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":194,"y":352,"wires":[["e0e8387b2c6e7c77"]],"icon":"@gorenje/node-red-contrib-writermap-mindmap/github-mark.svg"}]