[{"id":"16310ded01410ec0","type":"tab","label":"[nodedev] inspirational node packages","disabled":false,"info":"::: aim\n\nHave a collection of node packages that I use as inspiration for my own Node-RED node package development.\n\n:::\n\n### Collection\n\n- [xterm](https://www.npmjs.com/package/node-red-contrib-xterm)\n\n","env":[]},{"id":"51d03e7574c4e8d6","type":"group","z":"16310ded01410ec0","name":"Obtain codebase","style":{"label":true},"nodes":["2f0781016b105860","20cd8307fbbf8bc7","4124c2dd41a65644","e72fc8926003c55f","e56e1e9257efe943"],"x":396.142822265625,"y":298,"w":536.857177734375,"h":454.2857666015625},{"id":"414cba320f179caf","type":"group","z":"16310ded01410ec0","name":"tabs in sidebars - xterm package","style":{"label":true},"nodes":["12a91c3aefe8dd66","fd18c2aae2a4d3c7","50b6431494100435","8f3690c76ac3dceb","09d5b4a731ebcf48","f9156a016d45fd81","dc02ec3cff832651","d2ad303fbebcbdb8"],"x":1087,"y":375,"w":272,"h":463},{"id":"dc6285a914d85ac9","type":"group","z":"16310ded01410ec0","name":"Blockly","style":{"label":true},"nodes":["b9a389c43058c6cb","dc87852835156650","2109cf02bff5a4bd","08d823d59b3144e4","7f8628ced6f47a03","c6195f1bd32ccf46","96fcf7073f38a445","ce24466236067a91","346b661e8109de7c","7fb6c385de70eef7","5606d0fd0cdc9509","d820da8dcc99360e","23661030f83ac492","aabcfaa769089fbb","288db39e9e33d473","631f1b09bfc0f7b3","2f88b9cacf9acb03","07ee5293c9a74dc5","d2350b7e87cf4db2","e1b99164f7d10118","7de0ac76305f3a04","cd1047af947c5f3c","5142bef757aad640","ef00fb47b341e224","e0eced5eb487ec62","a44db034eaf2f468","8565e76e92987965","005b7a555297df07","8d017fbde3c610b2","5654794d3518c3ce","6388565e804bce4a","5e0492bd1c3d4621","4762fca58734b4dd","8d2891b1ddc7eb35","b57b3eb92674c4be","b23b21caff06c20e","435d770a53b954c7","dd3ba45baec1ff1a","0d200513df3a85c6","5db7242e789f203a","2dd811240161b868","4a3d5df6999ca520","3f246f81930fff63","aa29a8e7b1b43abe","2bb7412c4dcea346","bfbf79a819d9f90d","7fcca2197bc91df3","e1a41c66b370aefd","48e0118eba5591ee","d0922aad884c1299"],"x":717,"y":971,"w":1047,"h":942},{"id":"2f0781016b105860","type":"NodeFactory","z":"16310ded01410ec0","g":"51d03e7574c4e8d6","name":"","nodename":"WillBeIgnored","color":"#e5e4ef","hasbutton":false,"hasinput":true,"outputcount":1,"category":"","summary":"WillBeIgnored","description":"WillBeIgnored","icon":"font-awesome/fa-industry","frt2bakcomm":false,"bak2frtcomm":false,"createmanifest":false,"isplugin":false,"x":837,"y":711.2857666015625,"wires":[[]]},{"id":"20cd8307fbbf8bc7","type":"function","z":"16310ded01410ec0","g":"51d03e7574c4e8d6","name":"retrieve tgz URL for package","func":"pacote.manifest(\n    msg.packagename + \"@\" + msg.packageversion\n).then(manifest => {\n    msg.payload = manifest._resolved\n    node.send(msg)\n}).catch( err => {\n    msg.error = err\n    node.error(\"failed to get url\", msg)\n})\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"pacote","module":"pacote"}],"x":744.142822265625,"y":506,"wires":[["e56e1e9257efe943"]]},{"id":"4124c2dd41a65644","type":"inject","z":"16310ded01410ec0","g":"51d03e7574c4e8d6","name":"inject package details","props":[{"p":"packagename","v":"node-red-contrib-blockly","vt":"str"},{"p":"packageversion","v":"2.3.0","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":542.142822265625,"y":339,"wires":[["20cd8307fbbf8bc7"]]},{"id":"e72fc8926003c55f","type":"http request","z":"16310ded01410ec0","g":"51d03e7574c4e8d6","name":"","method":"GET","ret":"bin","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":789.142822265625,"y":634,"wires":[["2f0781016b105860"]]},{"id":"e56e1e9257efe943","type":"change","z":"16310ded01410ec0","g":"51d03e7574c4e8d6","name":"","rules":[{"t":"set","p":"url","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":767.142822265625,"y":573,"wires":[["e72fc8926003c55f"]]},{"id":"12a91c3aefe8dd66","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"LICENSE","filename":"LICENSE","format":"text","syntax":"mustache","template":"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n","output":"str","x":1231,"y":497,"wires":[["fd18c2aae2a4d3c7"]]},{"id":"fd18c2aae2a4d3c7","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"xterm_config.html","filename":"xterm_config.html","format":"html","syntax":"mustache","template":"<!--\n  Copyright 2019, Bart Butenaers\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<script src=\"xterm_shell/lib/xterm.js\"></script>\n<script src=\"xterm_shell/lib/xterm-addon-fit.js\"></script>\n\n<script type=\"text/javascript\">\n    // See https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n    function createTerminalUUID(){\n        var dt = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = (dt + Math.random()*16)%16 | 0;\n            dt = Math.floor(dt/16);\n            return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n        });\n        return uuid;\n    }\n    \n    // Multiple flow editors can be open simultaneously, which means multiple terminals can be open simultaneously.\n    // All of these terminals need to work completely independent from each: we don't want the data from these terminals\n    // to become mixed!  We will generate a unique id, to identify this flow editor instance in all communication with the server.\n    // Declare this variable outside the 'function ($)', to make sure the xterm_in node can access it ...\n    const globalTerminalId = createTerminalUUID();\n    \n    (function ($) {\n        var globalTerminalConfigNode = null;\n        var globalTerminal = null;\n        var globalFitAddon = null;\n        var globalServerDataHandler = null;\n        var globalTimerId = null;\n        var globalTabsheets = null;\n        var globalPreviousDataType = null;\n        \n        // Ensure that the globalTerminalConfigNode (still) exists.\n        // Caution: this function cannot be called from onpaletteadd, because then the RED.nodes are not filled yet!!!\n        // !!!!!!!!!!!!!!! CALL THIS FUNCTION EVERYWHERE THE globalTerminalConfigNode IS BEING USED !!!!!!!!!!!!!!!\n        function ensureXtermConfigNode() {\n            // If we had find it previously, check if it has been deleted beneath us\n            if (globalTerminalConfigNode !== null) {\n                var configNode = RED.nodes.node(globalTerminalConfigNode.id);\n                if (configNode === null) { globalTerminalConfigNode = null; }\n            }\n                \n            // If not found previously, let's go find it\n            if (globalTerminalConfigNode === null) {\n                var configNodes = [];\n                RED.nodes.eachConfig(function(configNode) {\n                    if (configNode.type === 'xterm_config') { \n                        configNodes.push(configNode); \n                    }\n                });\n                \n                // Make sure we only have 1 config node\n                while (configNodes.length > 1) {\n                    var configNode = configNodes.pop();\n                    RED.nodes.remove(configNode.id);\n                    RED.nodes.dirty(true);\n                }\n                \n                // When we found a config node, let's use that one\n                if (configNodes.length === 1) { globalTerminalConfigNode = configNodes[0]; }\n            }\n            \n            // When it doesn't exist yet, create it if required\n            if (globalTerminalConfigNode === null) {\n                // TODO controleren of de defaults door de config node code zelf toegepast worden????\n                \n                // Remark: since this config node is dynamically created (and only used in this sidebar which isn't another node), the config\n                // node is in fact \"unused\".  But since we don't want it to appear \"unused\" in the \"config nodes\" panel, we need to set hasUsers\n                // to false (see https://github.com/node-red/node-red/blob/master/CHANGELOG.md#0161-maintenance-release).\n                // The hasUsers needs also to be specified in the RED.nodes.registerType statement!\n                globalTerminalConfigNode = {\n                    id: RED.nodes.id(),\n                    _def: RED.nodes.getType(\"xterm_config\"),\n                    type: \"xterm_config\",\n                    hasUsers: false, \n                    users: [],\n                    rows: 60,\n                    columns: 120,\n                    cursorStyle: \"bar\",\n                    fastScrollModifier: \"alt\",\n                    scrollSensitivity: 1,\n                    fastScrollSensitivity: 1,\n                    scrollback: 1000,\n                    backgroundColor: \"#000000\",\n                    foregroundColor: \"#ffffff\",\n                    fontSize: 14,\n                    cursorBlink: true,\n                    drawBoldTextInBrightColors: true,\n                    loggingEnabled: false,\n                    name: \"XTerminal\",\n                    label: function() { return this.name || \"XTerminal\"}\n                }\n                \n                // Add the new config node to the collection of Node-RED nodes\n                RED.nodes.add(globalTerminalConfigNode);\n                \n                // Make sure the \"Deploy\" button becomes active\n                RED.nodes.dirty(true);\n            }\n        }\n        \n        function sidebarResizeEventHandler() {\n            if (globalFitAddon) {\n                // Make sure the Xterm terminal window fits into the parent DIV container element\n                globalFitAddon.fit();\n            }\n\t\t}\n        RED.nodes.registerType('xterm_config', {\n            category: 'config',\n            hasUsers: false,\n            defaults: {\n                rows: {value: 60, required: true},\n                columns: {value: 120, required: true},\n                startupCommand: {value: \"cd $HOME/.node-red\"},\n                cursorStyle: {value: \"bar\"},\n                fastScrollModifier: {value: \"alt\"},\n                scrollSensitivity: {value: 1},\n                fastScrollSensitivity: {value: 1},\n                scrollback: {value: 1000},\n                backgroundColor: {value: \"#000000\"},\n                foregroundColor: {value: \"#ffffff\"},\n                fontSize: {value: 14},\n                cursorBlink: {value: true},\n                drawBoldTextInBrightColors: {value: true},\n                loggingEnabled: {value: false},\n                name: { value: \"XTerminal\" }\n            },\n            paletteLabel: 'XTerminal',\n            label: function () {\n                return this.name;\n            },\n            onpaletteremove: function () {\n                RED.sidebar.removeTab(\"sidebar-xterm\");\n\t\t\t\tRED.events.off(\"sidebar:resize\", sidebarResizeEventHandler);\n            },\n            onpaletteadd: function () {\n                // Add the xterm.js CSS stylesheet to the page head section\n                $('head').append('<link rel=\"stylesheet\" href=\"xterm_shell/lib/xterm.css\" type=\"text/css\" />');\n                \n                // The html content of the sidebar page has been specified a a data-template, from where it can be loaded:\n                var content = $($('script[type=\"text/x-red\"][data-template-name=\"xterm_config_sidebar\"]').i18n().html());\n                \n                // Add a new \"Terminal\" tabsheet to the sidebar in the flow editor\n                RED.sidebar.addTab({\n                    id: \"sidebar-xterm\",\n                    label: \"terminal_xterm\",\n                    name: \"Terminal\",\n                    content: content,\n                    closeable: true,\n                    disableOnEdit: true,\n                    iconClass: \"fa fa-terminal\"\n                });\n                \n                RED.events.on(\"sidebar:resize\", sidebarResizeEventHandler);\n                \n                // The html content of the config node-settings has been specified as a SECOND data-template.  We will show\n                // the same template both in the config node's config screen, and in the sidebar \"Properties\" tabsheet.\n                // This way we avoid the same html to be maintained twice.\n                $(\"#node-xterm-tab-settings\").append($('script[type=\"text/x-red\"][data-template-name=\"xterm_config\"]').i18n().html());\n                        \n                // Once the container DIV element has been created, the terminal can be displayed as a child element\n                \n                $(\"#node-start-terminal\").on(\"click\", function (e) {\n                    if (globalTerminalConfigNode === null) {\n                        ensureXtermConfigNode();\n                    }\n                    \n                    // The terminal look-and-feel will be based on the user settings (in the globalTerminalConfigNode).\n                    // We use the rows and columns from the result, because that are the rows and columns that have been used to start\n                    // the pseudo terminal process on the server.  That way the Xterm.js terminal window dimensions will always mach.\n                    // Remark: the rows and columns in the globalTerminalConfigNode will be used (on the server side to start the pseudo\n                    // terminal process), when that config node has already been deployed.  Which means we get then the \n                    // globalTerminalConfigNode also here via a long roundtrip to the server ...\n                    // Create the Xterm.js terminal screen only once.\n                    // We can only do this when the parent DIV container is visible, otherwise the terminal will remain black without text!!!!\n                    // So there seems to be a bug inside the 'open' function.  Similar issues:\n                    // https://github.com/xtermjs/xterm.js/issues/1734\n                    // https://github.com/xtermjs/xterm.js/issues/573\n                    if (globalTerminal === null) {\n                        var terminalOptions = {\n                            rows: globalTerminalConfigNode.rows,\n                            cols: globalTerminalConfigNode.columns,\n                            cursorStyle: globalTerminalConfigNode.cursorStyle,\n                            fastScrollModifier: globalTerminalConfigNode.fastScrollModifier,\n                            scrollback: globalTerminalConfigNode.scrollback,\n                            scrollSensitivity: globalTerminalConfigNode.scrollSensitivity,\n                            fastScrollSensitivity: globalTerminalConfigNode.fastScrollSensitivity,\n                            fontSize: globalTerminalConfigNode.fontSize,\n                            cursorBlink: globalTerminalConfigNode.cursorBlink,\n                            drawBoldTextInBrightColors: globalTerminalConfigNode.drawBoldTextInBrightColors,\n                            theme: {\n                                background: globalTerminalConfigNode.backgroundColor,\n                                foreground: globalTerminalConfigNode.foregroundColor\n                            },\n                            useStyle: true,\n                            screenKeys: true,\n                            fontFamily: 'Courier New'\n                        };\n                        \n                        // Hide all the introduction paragraphs\n                        [].forEach.call(document.querySelectorAll('.xterm_intro'), function (el) {\n                            el.style.display = \"none\";\n                        });\n                                        \n                        // Create a new Xterm.js Terminal window instance\n                        // Remark: the Terminal class is exported in the xterm.js file\n                        globalTerminal = new Terminal(terminalOptions);\n                      \n                        // Create a new Xterm.js FitAddon instance, which can be used to let the terminal window fit into the parent DIV container element.\n                        // Remark: the FitAddon class is exported differently (compared to the Terminal class) in the xterm-addon-fit.js file\n                        globalFitAddon = new FitAddon.FitAddon();\n                        globalTerminal.loadAddon(globalFitAddon);\n      \n                        // Show the Xterm.js terminal window as a child of the parent DIV container element.\n                        var terminalContainer = document.getElementById('terminalContainer');\n                        globalTerminal.open(terminalContainer);\n                        \n                        // Make sure the Xterm terminal window fits into the parent DIV container element.\n                        // Afterwards the sidebarResizeEventHandler will redo this, every time the sidebar size is changed...\n                        globalFitAddon.fit();\n                        // Handle all terminal input from the user, and send it to the server\n                        globalTerminal.onData(function(data) {\n                            if (globalTerminalConfigNode.loggingEnabled) {\n                                var dataType = Object.prototype.toString.call(data);\n                                console.log(\"Terminal data to server (type = input): \" + data);\n                            }\n\n                            // Convert the data to base64 to make sure that spaces, newlines, ... don't get lost during transport.\n                            // Use POST instead of a GET with query parameters, because some browsers will cache all the different GET requests...\n                            var base64Data = btoa(data);\n                            $.ajax({\n                                url: \"xterm_shell/command\",\n                                method: \"POST\",\n                                data: {\n                                    terminal_id: globalTerminalId,\n                                    command: \"write\",\n                                    info: base64Data \n                                },\n                                error: function(data){\n                                    // When a message (and stack) field are passed by the server, this means the server has logged a stacktrace\n                                    var text = \"Write failed: \";\n                                    if (data.responseJSON && data.responseJSON.error) {\n                                        text = text + data.responseJSON.error;\n                                    }\n                                    else {\n                                        text = text + data.responseText;\n                                    }\n                                    if (data.responseJSON && data.responseJSON.message) {\n                                        text = text + \": \" + data.responseJSON.message + \" (see Node-RED log for details)\";\n                                    }\n                                   \n                                    globalServerDataHandler(null, JSON.stringify({\n                                        terminalId: globalTerminalId,                  \n                                        type      : \"error\",\n                                        content   : text\n                                    }));\n                                }\n                                //timeout: 3000\n                            });\n                        });\n                 \n                        // Handle data that arrives from the server via the websocket channel\n                        globalServerDataHandler = function(event, dataAsString) {\n                            var data = JSON.parse(dataAsString);\n                            \n                            // Only show data that is intended for this terminal\n                            if (data.terminalId === globalTerminalId) {                   \n                                var decodedString = \"\";\n                            \n                                // Convert the base64 encoded string back to a string\n                                // Only content type \"data\" is base64 encode, the other types (error, info, ...) not!\n                                if (data.type === \"data\") {\n                                    decodedString = atob(data.content);\n                                }\n                                else {\n                                    decodedString = data.content;\n                                }\n                               \n                                if (globalTerminalConfigNode.loggingEnabled) {\n                                    console.log(\"Terminal data from server (type = \" + data.type + \") = \" + decodedString);\n                                }\n                                \n                                if (data.type !== \"data\") {\n                                    // Xterm comments starts with a \"!\" character\n                                    decodedString = \"! \" + decodedString;\n                                    \n                                    // Make sure the comment (error, info, ...) is not displayed after the prompt, but on the next line\n                                    if (globalPreviousDataType === \"data\") {\n                                        decodedString = \"\\r\\n\" + decodedString;\n                                    }                                \n                                    // End all error/info/... with an enter, to make sure the next input continues on the next line\n                                    decodedString = decodedString + \"\\r\\n\";\n                                }\n                                \n                                // Show the data in the terminal window\n                                globalTerminal.write(decodedString);\n                                \n                                globalPreviousDataType = data.type;\n                            }\n                        }\n                    \n                        RED.comms.subscribe('xterm_shell', globalServerDataHandler);\n                    }\n                \n                    // Created with http://www.asciiarts.net/ where I used font 'Standard.flf'\n                    // TODO for some reason it doesn't show clearly : see font in constructor and in DIV element style\n                    //globalTerminal.write('\\r\\n***  _   _           _            ____  _____ ____   ***');\n                    //globalTerminal.write('\\r\\n*** | \\ | | ___   __| | ___      |  _ \\| ____|  _ \\  ***');\n                    //globalTerminal.write('\\r\\n*** |  \\| |/ _ \\ / _` |/ _ \\_____| |_) |  _| | | | | ***');\n                    //globalTerminal.write('\\r\\n*** | |\\  | (_) | (_| |  __/_____|  _ <| |___| |_| | ***');\n                    //globalTerminal.write('\\r\\n*** |_| \\_|\\___/ \\__,_|\\___|     |_| \\_\\_____|____/  ***');\n                    //globalTerminal.write('\\r\\n'); \n                    \n                    // Pass the default rows and columns as 'info' parameter.  These will be used on the server side, when currently\n                    // no config node has been deployed on the server yet...\n                    var info = globalTerminalConfigNode.rows + \";\" + globalTerminalConfigNode.columns;\n                    \n                    // Start the pty pseudo terminal process on the server side\n                    // Use POST instead of a GET with query parameters, because some browsers will cache all the different GET requests...\n                    $.ajax({\n                        url: \"xterm_shell/command\",\n                        method: \"POST\",\n                        data: {\n                            terminal_id: globalTerminalId,\n                            command: \"start\",\n                            info: info \n                        },\n                        error: function(data){\n                            // When a message (and stack) field are passed by the server, this means the server has logged a stacktrace\n                            var text = \"Start failed: \";\n                            if (data.responseJSON && data.responseJSON.error) {\n                                text = text + data.responseJSON.error;\n                            }\n                            else {\n                                text = text + data.responseText;\n                            }\n                            if (data.responseJSON && data.responseJSON.message) {\n                                text = text + \": \" + data.responseJSON.message + \" (see Node-RED log for details)\";\n                            }\n                           \n                            globalServerDataHandler(null, JSON.stringify({\n                                terminalId: globalTerminalId,                  \n                                type      : \"error\",\n                                content   : text\n                            }));\n                        }\n                        //timeout: 3000\n                    });     \n                    // As soon as the terminal window is started, it should have focus (so commands can be entered right away)\n                    globalTerminal.focus();                    \n                });\n                \n                $(\"#node-stop-terminal\").on(\"click\", function (e) {\n                    // Leave the xterm terminal window open (on the client-side), to show feedback to the user.\n                    // But stop the pty process on the server side\n                    // Use POST instead of a GET with query parameters, because some browsers will cache all the different GET requests...\n                    $.ajax({\n                        url: \"xterm_shell/command\",\n                        method: \"POST\",\n                        data: {\n                            terminal_id: globalTerminalId,\n                            command: \"stop\"\n                        },\n                        error: function(data){\n                            // When a message (and stack) field are passed by the server, this means the server has logged a stacktrace\n                            var text = \"Stop failed: \";\n                            if (data.responseJSON && data.responseJSON.error) {\n                                text = text + data.responseJSON.error;\n                            }\n                            else {\n                                text = text + data.responseText;\n                            }\n                            if (data.responseJSON && data.responseJSON.message) {\n                                text = text + \": \" + data.responseJSON.message + \" (see Node-RED log for details)\";\n                            }\n                           \n                            globalServerDataHandler(null, JSON.stringify({\n                                terminalId: globalTerminalId,                  \n                                type      : \"error\",\n                                content   : text\n                            }));\n                        }\n                        //timeout: 3000\n                    });              \n                });\n                \n                $(\"#node-clear-terminal\").on(\"click\", function (e) {\n                    globalTerminal.clear();      \n                });                \n                \n                if (globalTabsheets === null) {\n                    // Show tabsheets\n                    globalTabsheets = RED.tabs.create({\n                        id: \"node-xterm-tabs\",\n                        onchange: function(tab) {\n                            // Show only the content (i.e. the children) of the selected tabsheet, and hide the others\n                            $(\"#node-xterm-tabs-content\").children().hide();\n                            $(\"#\" + tab.id).show();\n                            \n                            if (tab.id === \"node-xterm-tab-settings\") {\n                                ensureXtermConfigNode();\n                                \n                                // When navigating to the settings tabsheet, all the config node properties need to be displayed\n                                // into the corresponding input fields\n                                $('.xterm-setting').each(function() {\n                                    var propertyName = $(this).get(0).id.replace(\"node-config-input-\", \"\");\n                                    var propertyValue = globalTerminalConfigNode[propertyName];\n                                    \n                                    if ($(this)[0].type === \"checkbox\") {\n                                        $(this).attr(\"checked\", propertyValue);\n                                    }\n                                    else {\n                                        $(this).val(propertyValue);\n                                    }\n                                });\n                            }\n                            \n                            if (tab.id === \"node-xterm-tab-terminal\") {\n                                if (globalTerminal) {\n                                    // As soon as the terminal tabsheet becomes visible again, the terminal window should get focus\n                                    // (so commands can be entered right away)\n                                    globalTerminal.focus();\n                                }\n                            }                                \n                        }\n                    });\n                    \n                    globalTabsheets.addTab({\n                        id: \"node-xterm-tab-terminal\",\n                        label: \"Terminal\"\n                    });\n                    \n                    globalTabsheets.addTab({\n                        id: \"node-xterm-tab-settings\",\n                        label: \"Settings\"\n                    });\n                    \n                    // For every setting input field, we will have to store the changed values into the config node\n                    $(\".xterm-setting\").on(\"change\", function() {\n                        ensureXtermConfigNode();\n                    \n                        var propertyName = this.id.replace(\"node-config-input-\", \"\");\n                        var propertyValue = $(this).val();\n                        \n                        if (this.type === \"checkbox\") {\n                            // For checkboxes we don't want to use the on/off values, but instead true/false\n                            propertyValue = this.checked;\n                        }\n            \n                        // When the property value has changed, save it in the config node and activate the 'deploy' button.\n                        // Remark: don't check the input type (i.e. use != instead of  !==) because we will get the number values as strings...\n                        if (!globalTerminalConfigNode || globalTerminalConfigNode[propertyName] != propertyValue) {\n                            ensureXtermConfigNode();\n                            globalTerminalConfigNode[propertyName] = propertyValue;\n                            RED.nodes.dirty(true);\n                        }\n                    })            \n                }\n                        \n                if (globalTimerId) {\n                    clearInterval(globalTimerId);\n                    globalTimerId = null;\n                }\n                \n                // When the flow editor is closed, the corresponding pseudo terminal process (on server side) should be killed.\n                // However it seems there is no way to determine that on the server side, see:\n                // https://discourse.nodered.org/t/detect-when-flow-editor-is-closed/18357/3?u=bartbutenaers\n                // Therefore we will send a heartbeat every 5 seconds to the server.\n                globalTimerId = setInterval(function() {\n                    // Use POST instead of a GET with query parameters, because some browsers will cache all the different GET requests...\n                    $.ajax({\n                        url: \"xterm_shell/command\",\n                        method: \"POST\",\n                        data: {\n                            terminal_id: globalTerminalId,\n                            command: \"heartbeat\"\n                        },\n                        error: function(data){\n                            // We cannot do anything here ...\n                        }\n                        //timeout: 3000                \n                    });\n                }, 5000);\n            }\n        });\n    })(jQuery);\n</script>\n\n<script type=\"text/x-red\" data-template-name=\"xterm_config\">\n    <div class=\"form-row\">\n        <label for=\"node-config-input-name\"><i class=\"icon-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-config-input-name\" class=\"xterm-setting\" placeholder=\"Name\">\n    </div>\n    </br>\n    \n    <!-- The terminal window dimensions should really match the dimensions of the pseudo terminal! -->\n    <!-- See https://github.com/xtermjs/xterm.js/issues/832 -->\n    <div class=\"form-tips\"><b>Steps to apply the new settings to the terminal window:\n        <ol>\n            <li>Deploy your changes</li>\n            <li>Refresh the browser window</li>\n            <li>Restart the pseudo terminal (via 'start' button)</li>\n        </ol></b>\n    </div>\n    </br>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-rows\"><i class=\"fa fa-arrows-alt\"></i> Grid</label>\n        <span for=\"node-config-input-rows\">Rows</span>\n        <input type=\"text\" id=\"node-config-input-rows\" style=\"width:80px\" min=\"1\" class=\"xterm-setting\">\n        <span for=\"node-config-input-columns\" style=\"margin-left:20px;\"> Columns</span>\n        <input type=\"text\" id=\"node-config-input-columns\" style=\"width:80px\" min=\"1\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-cursorStyle\"><i class=\"fa fa-terminal\"></i> Cursor style</label>\n        <select id=\"node-config-input-cursorStyle\" class=\"xterm-setting\">\n            <option value=\"block\">Block</option> \n            <option value=\"underline\">Underline</option>\n            <option value=\"bar\">Bar</option>\n        </select>\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-fastScrollModifier\"><i class=\"fa fa-keyboard-o\"></i> Fast scroll key</label>\n        <select id=\"node-config-input-fastScrollModifier\" class=\"xterm-setting\">\n            <option value=\"alt\">Alt</option> \n            <option value=\"ctrl\">Ctrl</option>\n            <option value=\"shift\">Shift</option>\n            <option value=\"undefined\">Undefined</option>\n        </select>\n    </div>            \n    <div class=\"form-row\">\n        <label for=\"node-config-input-scrollback\"><i class=\"fa fa-arrows-v\"></i> Scrollback</label>\n        <input type=\"text\" id=\"node-config-input-scrollback\" min=\"0\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-backgroundColor\"><i class=\"fa fa-paint-brush\"></i> Background</span></label>\n        <input type=\"color\" id=\"node-config-input-backgroundColor\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-foregroundColor\"><i class=\"fa fa-paint-brush\"></i> Foreground</span></label>\n        <input type=\"color\" id=\"node-config-input-foregroundColor\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-scrollSensitivity\"><i class=\"fa fa-tachometer\"></i> Scroll</label>\n        <input type=\"text\" id=\"node-config-input-scrollSensitivity\" min=\"1\" max=\"10\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <!-- See https://github.com/xtermjs/xterm.js/pull/2375 -->\n        <label for=\"node-config-input-fastScrollSensitivity\"><i class=\"fa fa-tachometer\"></i> Fast scroll</label>\n        <input type=\"text\" id=\"node-config-input-fastScrollSensitivity\" min=\"1\" max=\"10\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-config-input-fontSize\"><i class=\"fa fa-tachometer\"></i> Font size</label>\n        <input type=\"text\" id=\"node-config-input-fontSize\" min=\"1\" max=\"20\" class=\"xterm-setting\">\n    </div>\n    <div class=\"form-row\">\n        <input type=\"checkbox\" id=\"node-config-input-cursorBlink\" class=\"xterm-setting\" style=\"display: inline-block; width: auto; vertical-align: top;\">\n        <label for=\"node-config-input-cursorBlink\" style=\"width:70%;\"> Blinking cursor</label>\n    </div>          \n    <div class=\"form-row\">\n        <input type=\"checkbox\" id=\"node-config-input-drawBoldTextInBrightColors\" class=\"xterm-setting\" style=\"display: inline-block; width: auto; vertical-align: top;\">\n        <label for=\"node-config-input-drawBoldTextInBrightColors\" style=\"width:70%;\"> Draw bold text in bright colors</label>\n    </div>   \n    <div class=\"form-row\">\n        <input type=\"checkbox\" id=\"node-config-input-loggingEnabled\" class=\"xterm-setting\" style=\"display: inline-block; width: auto; vertical-align: top;\">\n        <label for=\"node-config-input-loggingEnabled\" style=\"width:70%;\"> Enable detailed logging (for troubleshooting)</label>\n    </div>               \n</script>\n\n<script type=\"text/x-red\" data-template-name=\"xterm_config_sidebar\">\n    <div style=\"position: relative; height: 100%;\">\n        <div style=\"position: absolute; top: 1px; bottom: 2px; left: 1px; right: 1px; overflow-y: scroll; padding: 10px;\"> \n            <form class=\"dialog-form\">\n                <div class=\"red-ui-tabs\">\n                    <!-- Tabsheets -->\n                    <ul style=\"background: #fff; min-width: 600px; margin-bottom: 20px;\" id=\"node-xterm-tabs\"></ul>\n                </div>\n                <div id=\"node-xterm-tabs-content\" style=\"height:calc(100% - 100px)\">\n                    <!-- Content of all tabsheets -->\n                    <div id=\"node-xterm-tab-terminal\" class=\"node-xterm-tab-terminal\" style=\"height: 100%; position: relative; margin-top: 30px;\">           \n                        <div class=\"form-row\">\n                            <!-- Make sure to use type 'button' because the default type is 'submit', which causes a page refresh! -->\n                            <button type=\"button\" id=\"node-start-terminal\" class=\"editor-button editor-button-small\" style=\"margin-top: 4px;\" title=\"Start terminal\">\n                                <i class=\"fa fa-play\"></i>    \n                            </button>\n                            <button type=\"button\" id=\"node-stop-terminal\" class=\"editor-button editor-button-small\" style=\"margin-top: 4px;\" title=\"Stop terminal\">\n                                <i class=\"fa fa-stop\"></i>    \n                            </button>\n                            <button type=\"button\" id=\"node-clear-terminal\" class=\"editor-button editor-button-small\" style=\"margin-top: 4px;\" title=\"Clear terminal\">\n                                <i class=\"fa fa-trash\"></i>    \n                            </button>\n                        </div>\n                        <div class=\"form-row\" style=\"height: 100%;\">\n                            <div id=\"terminalContainer\" style=\"width: 100%; height: 100%;\">\n                                <!-- We cannot create the xterm terminal window, when the parent DIV element is it not visible yet. -->\n                                <!-- Therefore we will wait for a user gesture, to make sure the DIV is visible... -->\n                                <p class=\"xterm_intro\" style=\"margin-top: 10px;\"><strong>Click the \"Start\" button to show the terminal...</strong></p>\n                                <p class=\"xterm_intro\" style=\"color:red; margin-top: 20px\"><strong><i style=\"font-size:20px\" class=\"fa fa-exclamation-triangle\"></i> Make sure your Node-RED environment is secure!</strong></p>\n                                <p class=\"xterm_intro\"><i>Read the \"Security\" section on my <a target=\"_blank\" href=\"https://github.com/bartbutenaers/node-red-contrib-xterm#security\">readme</a> page for more information.</i></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"node-xterm-tab-settings\" class=\"node-xterm-tab-settings\" style=\"position: relative; margin-top: 30px;\">\n                        <!-- The config node settings (from data-template-name=\"xterm_config\") will be added here -->\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</script>\n\n<script type=\"text/x-red\" data-help-name=\"xterm_config\">\n    <p>Configuration for an Xterm terminal screen.</p>\n    <p><strong>Start command:</strong><br/>\n    Command that need to be executed automatically when the terminal is started.</p>\n    <p><strong>Grid:</strong><br/>\n    The number of rows and columns that need to be displayed inside the terminal.  Both characteristcs are specified in number of characters.</p>\n    <p><strong>Cursor style:</strong><br/>\n    Specifies how the cursor should be displayed.</p>    \n    <p><strong>Fast scroll key:</strong><br/>\n    The modifier key hold to multiply scroll speed.</p>                 \n    <p><strong>Scrollback:</strong><br/>\n    The number of rows that are retained when lines are scrolled beyond the initial viewport.</p>               \n    <p><strong>Background:</strong><br/>\n    The background color of the terminal window.</p>             \n    <p><strong>Foreground:</strong><br/>\n    The foreground color of the text on the terminal window.</p>              \n    <p><strong>Scroll:</strong><br/>\n    The scroll speed multiplier used for scrolling..</p>                         \n    <p><strong>Fast scroll:</strong><br/>\n    The scroll speed multiplier used for fast scrolling..</p>                   \n    <p><strong>Blinking cursor :</strong><br/>\n    Whether the cursor should be blinking or not.</p>     \n    <p><strong>Draw bold text in bright colors:</strong><br/>\n    Whether to draw bold text in bright colors.</p>  \n    <p><strong>Enable data logging:</strong><br/>\n    Enable logging of all the data being send (both on client and server side), to simplify troubleshooting in case of problems.</p>     \n</script>\n","output":"str","x":1231,"y":547,"wires":[["50b6431494100435"]]},{"id":"50b6431494100435","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"xterm_in.html","filename":"xterm_in.html","format":"html","syntax":"mustache","template":"<!--\r\n  Copyright 2019, Bart Butenaers\r\n  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  you may not use this file except in compliance with the License.\r\n  You may obtain a copy of the License at\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n  Unless required by applicable law or agreed to in writing, software\r\n  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  See the License for the specific language governing permissions and\r\n  limitations under the License.\r\n-->\r\n<script type=\"text/javascript\">  \r\n    RED.nodes.registerType('xterm_in',{\r\n        category: 'system',\r\n        color: 'rgb(153, 153, 153)',\r\n        defaults: {\r\n            command: {value: \"\"},\r\n            addEnter: {value: true},\r\n            confirmation: {value: false},\r\n            rows: {value: 1},\r\n            name: {value: \"\"}\r\n        },\r\n        inputs: 0,\r\n        outputs: 0,\r\n        icon: \"font-awesome/fa-terminal\",\r\n        align: 'left',\r\n        paletteLabel: \"Terminal input\",\r\n        label: function() {\r\n            var name = this.name;\r\n            \r\n            if (this.confirmation) {\r\n                name = \"!! \" + name + \" !!\";\r\n            }\r\n            \r\n            return name || \"Terminal input\";\r\n        },\r\n        button: {\r\n            /*enabled: function() {\r\n                return !this.changed\r\n            },*/\r\n            onclick: function() {\r\n                //var roundTripFinished = false;\r\n                \r\n                if (this.changed) {\r\n                    return RED.notify(RED._(\"notification.warning\", {message:RED._(\"notification.warnings.undeployedChanges\")}),\"warning\");\r\n                }\r\n                \r\n                var node = this;\r\n                \r\n                if (node.confirmation) {\r\n                    var answer = confirm(\"Execute these commands in the terminal?\");\r\n                    if (answer === false) {\r\n                        // Don't execute the command\r\n                        return;\r\n                    }\r\n                }\r\n                \r\n                // UNFORTUNATELY WE CANNOT SEND THE RESULT (FROM THE PSEUDO-TERMINAL) AS AN OUTPUT MESSAGE.\r\n                // INDEED SINCE THIS NODE RUNS ON THE SERVER SIDE, IT WILL OUTPUT THE RESULTS OF THE TERMINAL WINDOWS IN ALL\r\n                // FLOW EDITORS (THAT ARE OPEN AT THE MOMENT).  WE COULD FILTER HERE ON THE TERMINALID OF THE CURRENT FLOW\r\n                // EDITOR, BUT EVEN THEN ALL FLOW EDITOR INSTANCES WOULD DO THE SAME.  SO ON THE SERVER SIDE THE OUTPUT\r\n                // OF ALL CLIENTS WOULD APPEAR. SO THAT MAKES NO SENSE !!!!!!!!!!!!!!!!!!!\r\n                /*\r\n                // Handle data that arrives from the server via the websocket channel           \r\n                RED.comms.subscribe('xterm_shell', function(event, dataAsString) {\r\n                    var data = JSON.parse(dataAsString);\r\n                    \r\n                    // Only show 'data' that is intended for this terminal\r\n                    if (data.terminalId === globalTerminalId && data.type === \"data\") {\r\n                        // Convert the base64 encoded data string back to a string\r\n                        var decodedString = atob(data.content);\r\n                        \r\n                        if (roundTripFinished) {\r\n                            node.send({ payload: decodedString, command: node.command });\r\n                        }\r\n                        else {\r\n                            // As soon as we receive our own command, the command has made an entire roundtrip to the server and back.\r\n                            // From that moment on, we need to start processing the data ...\r\n                            if (data.content === node.command) {\r\n                                roundTripFinished = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n                \r\n                var command = node.command;\r\n\r\n                if (node.addEnter) {\r\n                    command += \"\\r\\n\";\r\n                }\r\n                \r\n                // Ask the http endpoint to inject the command into the terminal.  Since we only arrive here when the command hasn't been\r\n                // changed, we can inject the command itself here (since it has the same command value as the deployed node on the server).    \r\n                var base64Data = btoa(command);\r\n                \r\n                $.ajax({\r\n                    url: \"xterm_shell/command\",\r\n                    method: \"POST\",\r\n                    data: {\r\n                        // Use the globalTerminalId, which is a global variable set by the sidebar panel (see xterm_config.js).\r\n                        terminal_id: globalTerminalId,\r\n                        command: \"write\",\r\n                        info: base64Data \r\n                    },\r\n                    success: function(resp) {\r\n                        RED.notify(\"Command has been send to the pseudo terminal\", \"success\");\r\n                    },\r\n                    error: function(data){\r\n                        // When a message (and stack) field are passed by the server, this means the server has logged a stacktrace\r\n                        var text = \"Write failed: \";\r\n                        if (data.responseJSON && data.responseJSON.error) {\r\n                            text = text + data.responseJSON.error;\r\n                        }\r\n                        else {\r\n                            text = text + data.responseText;\r\n                        }\r\n                        if (data.responseJSON && data.responseJSON.message) {\r\n                            text = text + \": \" + data.responseJSON.message + \" (see Node-RED log for details)\";\r\n                        }\r\n                       \r\n                        RED.notify(text, \"error\");\r\n                    }\r\n                    //timeout: 3000\r\n                });\r\n            }\r\n        }\r\n    });\r\n</script>\r\n\r\n<script type=\"text/x-red\" data-template-name=\"xterm_in\">\r\n    <div class=\"form-row\">\r\n        <label for=\"node-input-name\"><i class=\"icon-tag\"></i> Name</label>\r\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\">\r\n    </div>\r\n    </br>\r\n    <div class=\"form-row\">\r\n        <label for=\"node-input-command\"><i class=\"fa fa-terminal\"></i> Command(s)</label>\r\n        <textarea id=\"node-input-command\" rows=\"15\" style=\"width: 100%;\" placeholder=\"Enter a terminal command\"></textarea>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <input type=\"checkbox\" id=\"node-input-addEnter\" style=\"display: inline-block; width: auto; vertical-align: top;\">\r\n        <label for=\"node-input-addEnter\" style=\"width:70%;\"> Add 'enter' automatically</label>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <input type=\"checkbox\" id=\"node-input-confirmation\" style=\"display: inline-block; width: auto; vertical-align: top;\">\r\n        <label for=\"node-input-confirmation\" style=\"width:70%;\"> Show confirmation popup</label>\r\n    </div> \r\n</script>\r\n<script type=\"text/html\" data-help-name=\"xterm_in\">\r\n    <p>A Node Red node to send command(s) to the terminal.</p>\r\n    <p>The specified command(s) will be injected into the terminal window (located in the 'Terminal' tabsheet on the sidebar) to be executed.</p>\r\n    <p style=\"color:red;\"><strong><i style=\"font-size:20px\" class=\"fa fa-exclamation-triangle\"></i> Make sure your Node-RED environment is secure!</strong></p>\r\n    <p><i>Read the \"Security\" section on my <a target=\"_blank\" href=\"https://github.com/bartbutenaers/node-red-contrib-xterm#security\">readme</a> page for more information.</i></p>\r\n    <p><strong>Command(s):</strong><br/>\r\n    Specify the command(s) that need to be executed in the terminal window .  Multiple commands (each on a separate line!) can be added to create a script.</p>\r\n    <p><strong>Add 'enter' automatically:</strong><br/>\r\n    Specify whether an 'enter' key (i.e. a newline character) will be added automatically after the last command.  \r\n    <ul>\r\n        <li>When selected, the specified command will be executed immediately (automatically).</li>\r\n        <li>When unselected, the specified command will not be executed automatically.  Which means it appears in the terminal window, but you have to press manually the enter key to execute it.</li>\r\n    </ul>\r\n    This checkbox has more added value in case of a single command, since multiple commands are separated by enter's anyway ...</p>\r\n    <p><strong>Show confirmation popup:</strong><br/>\r\n    Critical commands (e.g. reboot the system) can be protected by a confirmation dialog, to avoid those commands being executed in the wrong circumstances.  E.g. you might have pressed the inject button by accident...</p>\r\n</script>\r\n","output":"str","x":1231,"y":597,"wires":[["8f3690c76ac3dceb"]]},{"id":"8f3690c76ac3dceb","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"xterm_config.js","filename":"xterm_config.js","format":"javascript","syntax":"mustache","template":"/**\n * Copyright 2019 Bart Butenaers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n module.exports = function (RED) {\n    var os = require('os');\n    var pty = require('node-pty-prebuilt-multiarch');\n    var process = require('process');\n    var path = require('path');\n    const fs = require('fs');\n    const {EOL} = require('os');\n    \n    // -------------------------------------------------------------------------------------------------\n    // Determining the path to the files in the dependent xterm module once.\n    // See https://discourse.nodered.org/t/use-files-from-dependent-npm-module/17978/5?u=bartbutenaers\n    // -------------------------------------------------------------------------------------------------\n    var xtermPath = require.resolve(\"xterm\");\n    \n    // For example suppose the require.resolved results in xtermPath = /home/pi/node-red-contrib-xterm/node_modules/xterm/lib/xterm.js\n    // Then we need to strip the part after the /xterm/ folder, which means xtermPath = /home/pi/node-red-contrib-xterm/node_modules/xterm/\n    // And then we need to find the /lib subfolder, which means xtermJsPath = /home/pi/node-red-contrib-xterm/node_modules/xterm/lib\n    xtermPath = xtermPath.substring(0, xtermPath.indexOf(path.sep + \"xterm\" + path.sep) + 6);\n    \n    var xtermJsPath = path.join(xtermPath, 'lib', 'xterm.js');\n    if (!fs.existsSync(xtermJsPath)) {\n        console.log(\"Javascript file \" + xtermJsPath + \" does not exist\");\n        xtermJsPath = null;\n    }\n    \n    var xtermCssPath = path.join(xtermPath, 'css', 'xterm.css');\n    if (!fs.existsSync(xtermCssPath)) {\n        console.log(\"Css file \" + xtermCssPath + \" does not exist\");\n        xtermCssPath = null;\n    }\n    \n    // -------------------------------------------------------------------------------------------------\n    // Determining the path to the files in the dependent xterm-addon-fi module once.\n    // -------------------------------------------------------------------------------------------------\n    var xtermFitPath = require.resolve(\"xterm-addon-fit\");\n    xtermFitPath = xtermFitPath.substring(0, xtermFitPath.indexOf(path.sep + \"xterm-addon-fit\" + path.sep) + 16);\n    \n    var xtermFitJsPath = path.join(xtermFitPath, 'lib', 'xterm-addon-fit.js');\n    if (!fs.existsSync(xtermFitJsPath)) {\n        console.log(\"Javascript file \" + xtermFitJsPath + \" does not exist\");\n        xtermFitJsPath = null;\n    }\n    \n    var xtermUseBinaryTransport = os.platform() !== \"win32\";\n    \n    // Keep the pty processes in a global map, instead of inside the Xterm configuration node.\n    // Indeed the user might remove that configuration node behind our back, so we would loose all current pseudo terminal processes.\n    var xtermProcessInfoMap = new Map();\n    \n    // Cache the reference to the xterm config node, so we don't need to search it every time\n    var xtermShellNode = null;\n    \n    // Start or restart the timer of a terminal id\n    function startTimer(terminalId, loggingEnabled) {\n        var processInfo = xtermProcessInfoMap.get(terminalId);\n        \n        // Heartbeats are only relevant for active processes: if a process doesn't exist yet or doesn't exist anymore, then\n        // we can ignore the heartbeat temparily ...\n        if (processInfo) {\n            // If a previous timer is still running, let's stop it ...\n            if (processInfo.timerId) {\n                clearInterval(processInfo.timerId);\n                processInfo.timerId = null;\n            }\n            \n            // We will get a heartbeat from the client every 5 seconds.  When we haven't received that heartbeat within 15 seconds, we assume \n            // that the client has disconnected.  In that case the pseudo terminal of that client will be stopped...\n            processInfo.timerId = setInterval(function() {\n                stopTerminal(terminalId, \"heartbeat\", loggingEnabled);\n            }, 15000);\n        }\n    }\n\n    function stopTerminal(terminalId, reason, loggingEnabled) {  \n        var processInfo = xtermProcessInfoMap.get(terminalId);\n        \n        if (processInfo) {        \n            try {\n                // The \"exit\" and \"SIGINT\" event handlers had been added to detect the ptyProcess being killed behind our back.\n                // But if we kill the process, we don't want those handlers to do anything.  Otherwise this happens when the (re)start button is clicked:\n                // 1. The current process is stopped\n                // 2. A new process is started\n                // 3. The exithandler is called (due to step 1), which would kill our new process (from step 2).\n                // This way we avoid that stap 3 happens, when we kill the process ourselves.\n                processInfo.ptyProcess.removeAllListeners(\"exit\");\n             \n                processInfo.ptyProcess.kill();\n                \n                if (processInfo.timerId) {\n                    clearInterval(processInfo.timerId);\n                }\n                \n                xtermProcessInfoMap.delete(terminalId);\n                \n                // Let the client know that the pseudo terminal has been stopped, in case the client isn't disconnected \n                // (but the heartbeat didn't arrive in time)\n                RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: \"Pseudoterminal has been stopped (by \" + reason + \")\", type: \"info\" } ));\n            }\n            catch (err) {\n                RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: \"Cannot stop pseudoterminal (by \" + reason + \"): \" + err, type: \"error\" } ));\n            }\n        }\n        else {\n            RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: \"Pseudoterminal had not been started yet\", type: \"info\" } ));\n        }\n    }\n    \n    function startTerminal(terminalId, rows, columns, loggingEnabled) {\n        // When the previous ptyProcess was still running, we will stop it.\n        if (xtermProcessInfoMap.has(terminalId)) {\n            console.log(\"Previous ptyProcess was already started\");\n            stopTerminal(terminalId, \"(re)start button\", loggingEnabled);\n        }\n        \n        try {\n            const env = Object.assign({}, process.env);\n            env['COLORTERM'] = 'truecolor';\n        \n            rows = parseInt(rows || 24);\n            cols = parseInt(columns || 80);\n            \n            // Create a child process of the current (Node-RED) process\n            var ptyProcess = pty.spawn(process.platform === 'win32' ? 'cmd.exe' : 'bash', [], {\n              name: 'xterm-256color',\n              cols: cols,\n              rows: rows,\n              cwd: env.PWD,\n              env: env,\n              encoding: xtermUseBinaryTransport ? null : 'utf8'\n            });\n            \n            ptyProcess.on('data', function(data) {\n                try {\n                    // Uncomment this code in case of severe problems on some systems ...\n                    // var dataType = Object.prototype.toString.call(data);\n                    // console.log(\"Terminal data to client (type = \" + dataType + \"): \" + data);\n                    \n                    // Convert the terminal data to base64, before sending it to the client\n                    var buff = new Buffer(data);\n                    var base64Data = buff.toString('base64');\n                    RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: base64Data, type: \"data\" } ));\n                } \n                catch (ex) {\n                    // The WebSocket is not open, ignore\n                }\n            });\n            \n            ptyProcess.on('exit', function(c) {\n                // We arrive here always the ptyProcess is exited.  But when the trigger is a CLI command (e.g. \"exit\" in Linux),\n                // we still need to remove the ptyProcess from our map ...\n                if (xtermProcessInfoMap.has(terminalId)) {\n                    stopTerminal(terminalId, \"exit command\", loggingEnabled);\n                }\n            });\n            \n            ptyProcess.on('SIGINT', c => {\n                // We arrive here always the ptyProcess is killed.  But when the trigger from somewhere outside,\n                // we still need to remove the ptyProcess from our map ...\n                if (xtermProcessInfoMap.has(terminalId)) {\n                    stopTerminal(terminalId, \"SIGINT\", loggingEnabled);\n                }\n            });\n\n            RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: \"Pseudoterminal has been started (pid=\" + ptyProcess.pid + \" rows=\" + rows + \" cols=\" + cols + \")\", type: \"info\" } ));\n            \n            xtermProcessInfoMap.set(terminalId, {ptyProcess: ptyProcess});\n            \n            // From here on the heartbeats need to be monitored\n            startTimer(terminalId);\n        }\n        catch (err) {\n            RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: \"Cannot start pseudoterminal: \" + err, type: \"error\" } ));\n        }\n    }\n       \n    function writeDataToTerminal(terminalId, data, loggingEnabled) {\n        var errorText;\n        \n        try {\n            var processInfo = xtermProcessInfoMap.get(terminalId);\n            \n            if (processInfo) {\n                processInfo.ptyProcess.write(data);\n                \n                if (loggingEnabled) {\n                    var dataType = Object.prototype.toString.call(data);\n                    console.log(\"Terminal data from client (type = \" + dataType + \"): \" + data);\n                }\n            }\n            else {\n                errorText = \"Cannot execute commands when the pseudoterminal is not started yet\";\n                RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: errorText, type: \"error\" } ));\n            }\n        }\n        catch (err) {\n            errorText = \"Cannot write date to pseudoterminal: \" + err;\n            RED.comms.publish(\"xterm_shell\", JSON.stringify( { terminalId: terminalId, content: errorText, type: \"error\" } ));\n        } \n\n        return errorText;\n    }\n        \n    function XtermConfigurationNode (config) {\n        RED.nodes.createNode(this, config)\n        // Remark: we only store here the server-relevant settings (not the xterm.js terminal settings)\n        this.rows = config.rows;\n        this.columns = config.columns;\n        \n        // Cache the reference to this node\n        xtermShellNode = this;\n\n        this.on(\"close\", function() {\n            // Remove the reference to this node\n            xtermShellNode = null;\n            \n            if (done) {\n                done();\n            }\n        });\n    }\n\n    RED.nodes.registerType('xterm_config', XtermConfigurationNode);\n    \n    // Make all static resources (i.e. library files) available to the flow editor.\n    // We use a separate endpoint, since no permissions are required to read those resources.\n    // Otherwise we get 'unauthorized' problems, when calling this endpoint from a 'script' tag.\n    // See details on https://discourse.nodered.org/t/unauthorized-when-accessing-custom-admin-endpoint/20201/4\n    RED.httpAdmin.get('/xterm_shell/lib/:filename', function(req, res) {\n        var filePath;\n                    \n        switch (req.params.filename) {\n            case \"xterm.js\":\n                filePath = xtermJsPath;\n                break;\n            case \"xterm-addon-fit.js\":\n                filePath = xtermFitJsPath;\n                break;   \n            case \"xterm.css\":\n                filePath = xtermCssPath;\n                break;                \n            default:\n                break;\n        }\n        \n        if (filePath) {\n            // Send the requested static file to the client\n            res.sendFile(filePath);\n        }\n        else {\n            // Don't log because xterm also tries to load some mapping files, which are required to\n            // do source mapping from Javascript to the original Typescript code.  But we don't need that.\n            //console.log(\"Unknown javascript file '\" + req.params.info + \"'\");\n            res.status(404).json({error: 'Unknown static file ' + filePath});                        \n        }\n    });\n    \n    // Determine the line endings\n    function determineLineEnding(text) {                \n        var index = text.indexOf('\\n');\n        \n        if (index < 0) {\n            return null;\n        }\n        \n        if (index > 0 && text[index - 1] === '\\r') {\n             return \"\\r\\n\";\n        }\n        \n        return \"\\n\";\n    }\n\n    // Process the POST requests from the flow editor\n    RED.httpAdmin.post('/xterm_shell/command', RED.auth.needsPermission('xterm_shell.write'), function(req, res) {\n        // When a config node is available on the server side, we see whether logging should be enabled\n        var loggingEnabled = xtermShellNode && xtermShellNode.loggingEnabled;\n\n        // Get the POST parameters\n        var command     = req.body.command;\n        var terminal_id = req.body.terminal_id;\n        var info        = req.body.info;\n        \n        try {\n            switch (command) {\n                case \"start\":\n                    // The request (info) will contain the default dimensions '<default_rows>;<default_columns>'.\n                    // This way the default dimensions only need to be hardcoded on the client side...\n                    var params = info.split(\";\");\n                    var rows = params[0];\n                    var columns = params[1];\n                    \n                    // When a config node is available on the server side, we will use it's dimensions to create a pseudo terminal.\n                    if (xtermShellNode) {\n                        rows = xtermShellNode.rows;\n                        columns = xtermShellNode.columns;\n                    }\n\n                    startTerminal(terminal_id, rows, columns, loggingEnabled);\n\n                    // Pass the rows and columns to the client, which have been used on the server to start the pseudo terminal.\n                    // The client needs to use the SAME values to create an Xterm.js terminal window, to avoid conflicts!\n                    res.status(200).json({rows: rows, columns: columns});\n                    break;\n                case \"stop\":\n                    stopTerminal(terminal_id, \"stop button\", loggingEnabled);\n                    res.status(200).json({});\n                    break;\n                case \"write\":\n                    var base64Decoded = new Buffer(info, 'base64').toString('ascii');\n                    \n                    var lineEnding = determineLineEnding(base64Decoded);\n                    \n                    // On Windows the line-endings are a carriage return (\\r) and a newline(\\n), also referred to as CR/LF. \n                    // On UNIX the line-endings are a newline character (\\n), also referred to as a linefeed (LF).\n                    // If the EOL of the current operating system differs from \\r\\n (which we use by default), then adapt it.\n                    // Because the flow editor (where the code has been entered) might be running on a different OS...\n                    if (lineEnding != EOL) {\n                        base64Decoded = base64Decoded.replace(lineEnding, EOL);\n                    }\n                    \n                    // Process the command line data (info contains command line input)\n                    var errorText = writeDataToTerminal(terminal_id, base64Decoded, loggingEnabled);\n                    \n                    // The xterm_in node (doesn't listen to the websocket so it) has to be informed whether the command\n                    // has been transferred to the pseudo terminal correctly\n                    if (!errorText) {\n                        res.status(200).json({});\n                    }\n                    else {\n                        res.status(500).json({error: errorText});\n                    }\n                    break;\n                case \"heartbeat\":\n                    // Restart the timer whenever a heartbeat arrives\n                    startTimer(terminal_id);\n                    res.status(200).json({}); \n                    break;\n                default:\n                    console.log(\"Unknown command '\" + command + \"'\");\n                    res.status(404).json({error: 'Unknown command'});\n            }\n        }\n        catch(err) {\n            // Lots of server-side processing, so lots of things can go wrong.\n            // Avoid that the client doesn't know what is going on,i.e. avoid internal server errors (status 500)\n            res.status(500).json({error: err.name, message: err.message, stack: err.stack });\n            console.log(\"Error while executing command '\" + command + \"':\");\n            console.log(err.stack);\n        }\n    });\n}\n","output":"str","x":1231,"y":647,"wires":[["09d5b4a731ebcf48"]]},{"id":"09d5b4a731ebcf48","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"xterm_in.js","filename":"xterm_in.js","format":"javascript","syntax":"mustache","template":"/**\r\n * Copyright 2019 Bart Butenaers\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n **/\r\n\r\nmodule.exports = function(RED) {\r\n    var settings = RED.settings;\r\n    \r\n    function XtermInNode(config) {\r\n        RED.nodes.createNode(this, config);\r\n        \r\n        var node = this;\r\n\r\n        node.on(\"close\", function() {\r\n            if (done) {\r\n                done();\r\n            }\r\n        });\r\n    }\r\n\r\n    RED.nodes.registerType(\"xterm_in\", XtermInNode);\r\n}\r\n","output":"str","x":1231,"y":697,"wires":[["f9156a016d45fd81"]]},{"id":"f9156a016d45fd81","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"package.json","filename":"package.json","format":"json","syntax":"mustache","template":"{\n    \"name\"         : \"node-red-contrib-xterm\",\n    \"version\"      : \"1.0.1\",\n    \"description\"  : \"A Node-RED node terminal front-end, to execute backend CLI commands\",\n    \"dependencies\": {\n       \"xterm\": \"^4.17.0\",\n       \"xterm-addon-fit\": \"^0.5.0\",\n       \"node-pty-prebuilt-multiarch\": \"^0.10.1-pre.4\"\n    },\n    \"author\": {\n        \"name\": \"Bart Butenaers\"\n    },\n    \"license\": \"Apache-2.0\",\n    \"keywords\": [ \"node-red\", \"terminal\", \"linux\", \"dos\", \"cli\", \"command line\", \"command\" ],\n    \"bugs\": {\n        \"url\": \"https://github.com/bartbutenaers/node-red-contrib-xterm/issues\"\n    },\n    \"homepage\": \"https://github.com/bartbutenaers/node-red-contrib-xterm\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/bartbutenaers/node-red-contrib-xterm.git\"\n    },\n    \"node-red\"     : {\n        \"nodes\": {\n            \"xterm_config\": \"xterm_config.js\",\n            \"xterm_in\": \"xterm_in.js\"\n        }\n    }\n}\n","output":"str","x":1231,"y":747,"wires":[["dc02ec3cff832651"]]},{"id":"dc02ec3cff832651","type":"PkgFile","z":"16310ded01410ec0","g":"414cba320f179caf","name":"README.md","filename":"README.md","format":"markdown","syntax":"mustache","template":"# node-red-contrib-xterm\nA Node-RED node terminal front-end, to execute backend CLI commands.\n\n## Install\nRun the following npm command in your Node-RED user directory (typically ~/.node-red):\n```\nnpm install bartbutenaers/node-red-contrib-xterm\n```\n\n*Remark: when installing this node, NPM will show a warning in the console log:*\n\n![npm warning](https://user-images.githubusercontent.com/14224149/73590674-6c190500-44e5-11ea-85bb-e90875fd12e7.png)\n\n*Reason is that the xterm-addon-fit (which is an xterm plugin) has xterm as (peer) dependency in its [package.json](https://github.com/xtermjs/xterm.js/blob/master/addons/xterm-addon-fit/package.json) file, and since npm version 3.x such peer dependencies aren't installed automatically anymore.  But that is NO problem since xterm is installed automatically anyway, when you install this Node-RED node ...*\n\n## Support my Node-RED developments\nPlease buy my wife a coffee to keep her happy, while I am busy developing Node-RED stuff for you ...\n\n<a href=\"https://www.buymeacoffee.com/bartbutenaers\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy my wife a coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Security !!!!!!!!\n\n:warning: ***Since this node allows commands to be executed on the server, it is very important that your Node-RED is secured!***\n\nBut you should take care of that anyway, since other nodes (e.g. Exec and Daemon nodes) also allow execution of commands on the server ... \n\nTo avoid introducing extra security riscs, this node uses the standard Node-RED communication mechanism (see also the 'Detailed Information' section below):\n+ The ajax calls are send to a Node-RED http admin endpoint.\n+ The data is pushed via the Node-RED ```RED.comms``` websocket channel.\n\nAs a result: when you have secured your Node-RED environment, the communication for this terminal will have the same security level...\n\nAll processes launched from node-pty will launch at the same permission level of the parent process (i.e. the Node-RED process). Take care particularly when using node-pty inside a server that's accessible on the internet.  It is recommended to launch the pseudo-terminal inside a container (like e.g. a Docker container) to protect the host machine.\n\n## Node usage\nThis contribution offers a terminal window entirely integrated into Node-RED.\nIt consists out of two parts that closely work together:\n+ A ***sidebar tabsheet*** where the terminal window is displayed, which can be used to enter commands that need to be executed on the server (that runs Node-RED).\n+ A ***Terminal input*** node which can be used to store your favorite commands, and send them to the terminal.\n\nEach flow editor instance will have its own terminal session on the server side, which means that each editor will have its own independent terminal screen.  As a result, multiple users can execute commands (in their own flow editor instance), independently from each other.\n\nCurrently macOS, Linux and Windows are supported on the server side.\n\nRemark: this node can be used to connect to the server, where the Node-RED backend is running.  But it is also possible to logon to other servers, for example on Linux using the ```ssh``` command.  Thanks to [Paul](https://github.com/juggledad) for explaining this step by step in this [discussion](https://discourse.nodered.org/t/announce-node-red-contrib-xterm-second-beta-sidebar/19718/45).\n\n## Sidebar tabsheet\n\nA custom sidebar tabsheet is available, that can be setup in a few steps:\n1. Navigate to the *'Terminal'* tabsheet in the sidebar.\n1. Press the *'Start'* button to start a pseudo terminal (on the server side), and simultaneously display an Xterm terminal window (in the sidebar).\n1. Start entering your CLI commands into the terminal window.  Depending on the server's operating system, other commands will be required.\n1. Press the *'Clear'* button to clear the content of the terminal window.\n1. In case of problems with the pseudo terminal (on the server), you can press the *'Start'* button again.  Then the pseudo terminal (on the server) will be stopped and a new pseudo terminal will be started automatically.\n1. If the pseudo terminal is not needed anymore, you could press the *'Stop'* button.  This might be useful in a multi-user environment, since the number of allowed pseudo terminals can be restricted on some systems.  \n   Remark: it is also possible to use CLI commands to quit the terminal session (e.g. \"exit\" command on Linux).\n1. Optionally the terminal window settings can be customized in the *\"Settings\"* tabheet, but follow the instructions on that tabsheet to activate those changes.  Indeed the number of rows and columns of the terminal window (client side) and the pseudo terminal (server side) should always be identical!  Otherwise texts will start *overlapping* (i.e. overriding) in the terminal window!\n\nAll node-related information (pseudo terminal started, pseudo terminal stopped, ...) and server side errors are being displayed INSIDE the terminal window.\n\nA short demo of the sidebar tabsheet:\n\n![xterm_demo_sidebar](https://user-images.githubusercontent.com/14224149/71563581-36ba6b00-2a92-11ea-8f3f-1e37e714066b.gif)\n\nThe following settings can be adjusted, to customize the terminal window:\n\n### Grid\nThe number of rows and columns that need to be displayed inside the terminal.  Both characteristcs are specified in number of characters.\n\n![grid](https://user-images.githubusercontent.com/14224149/69186006-0f2dc580-0b18-11ea-85ed-182e30f18e60.png)\n\n### Cursor style\nSpecifies how the cursor should be displayed in the terminal window.  \n\n### Fast scroll key\nThe modifier key hold to multiply scroll speed.\n\n### Scrollback\nThe number of rows that are retained when lines are scrolled beyond the initial viewport. \n\n### Background\nThe background color of the terminal window.\n\n### Foreground\nThe foreground color of the text on the terminal window.\n\n### Scroll\nThe scroll speed multiplier used for scrolling.\n\n### Fast scroll\nThe scroll speed multiplier used for fast scrolling.\n\n### Blinking cursor\nWhether the cursor should be blinking or not.  \n\n### Draw bold text in bright colors\nWhether to draw bold text in bright colors. \n\n### Enable data logging\nEnable logging of all the data being send (both on client and server side), to simplify troubleshooting in case of problems. \n\n## Terminal Input node\nThe *\"Terminal Input\"* node can be used to store frequently used commands, and inject those commands into the terminal.\n\nA short demo to explain how it works:\n\n![xterm_demo_input](https://user-images.githubusercontent.com/14224149/71563905-d0d0e200-2a97-11ea-8d1d-29f08981ac03.gif)\n\n```\n[{\"id\":\"800e772a.b109c8\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"ls -ltr\",\"addEnter\":true,\"confirmation\":false,\"name\":\"Directory listing\",\"x\":1260,\"y\":180,\"wires\":[]},{\"id\":\"5a5f258.ad842dc\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"df -h\",\"addEnter\":true,\"confirmation\":false,\"name\":\"Top disc usage\",\"x\":1260,\"y\":240,\"wires\":[]},{\"id\":\"8ae725e0.57d5a8\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"ifconfig\",\"addEnter\":true,\"confirmation\":false,\"name\":\"Network configuration\",\"x\":1280,\"y\":300,\"wires\":[]},{\"id\":\"598184d3.be34ec\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"Iwlist wlan0 scan\",\"addEnter\":true,\"confirmation\":false,\"name\":\"Available wireless networks\",\"x\":1300,\"y\":360,\"wires\":[]},{\"id\":\"236fb7f7.0affc8\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"reboot\",\"addEnter\":true,\"confirmation\":true,\"name\":\"Reboot\",\"x\":1240,\"y\":420,\"wires\":[]},{\"id\":\"9dba7376.805f1\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"shutdown -h now\",\"addEnter\":true,\"confirmation\":true,\"name\":\"Shutdown\",\"x\":1250,\"y\":480,\"wires\":[]},{\"id\":\"5a5741.492658c\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"pwd\",\"addEnter\":true,\"confirmation\":false,\"name\":\"Current directory\",\"x\":1260,\"y\":120,\"wires\":[]},{\"id\":\"ee8feb7c.0cf0d8\",\"type\":\"xterm_in\",\"z\":\"e2675d9d.6854e\",\"command\":\"pwd\\npwd\\npwd\",\"addEnter\":false,\"confirmation\":false,\"name\":\"Example script\",\"x\":1260,\"y\":540,\"wires\":[]}]\n```\n\nThe following settings can be adjusted, to customize the behaviour of the Terminal Input node:\n\n### Command(s):\nSpecify the command(s) that need to be executed in the terminal window . Multiple commands (each on a separate line!) can be added to create a *script*, as you can see in this demo:\n\n![xterm_demo_input_multiple](https://user-images.githubusercontent.com/14224149/71563941-83a14000-2a98-11ea-8b6a-8255f71d6ae0.gif)\n\n### Add 'enter' automatically:\nSpecify whether an 'enter' key (i.e. a newline character) will be added automatically after the last command.\n\n+ When selected, the specified command will be executed immediately (automatically).\n+ When unselected, the specified command will not be executed automatically. Which means it appears in the terminal window, but you have to press manually the enter key to execute it.\n\nRemark: this checkbox has more added value in case of a single command, since multiple commands are separated by enter's anyway ...\n\n### Show confirmation popup:\nCritical commands (e.g. reboot the system) can be protected by a confirmation dialog, to avoid those commands being executed in the wrong circumstances. E.g. you might have pressed the inject button by accident...\n\nThe following demo explains how to a *'reboot'* command can be secured, and cancelled when being clicked:\n\n![xterm_demo_input_confirmation](https://user-images.githubusercontent.com/14224149/71563976-d67af780-2a98-11ea-96ed-ac4dc1df79a2.gif)\n\n## Detailed information\n\n### Communication trajectory\n\nThe following diagram explains the entire trajectory between the terminal and the operating system:\n\n![trajectory](https://user-images.githubusercontent.com/14224149/69183121-a4c65680-0b12-11ea-9181-80eb6306c353.png)\n\n1. When the user opens the node's config screen, an [Xterm.js](https://xtermjs.org/) terminal screen is displayed (and a node-pty process is spawned on the server).\n2. When the user enters a command (e.g. *\"ls -ltr\"*), this command will be send to the server (via a separate ajax call for ***each*** character).\n3. The *pseudo terminal* ([node-pty](https://github.com/microsoft/node-pty)) emulates a hardware terminal.  This means that it can send user input to the shell, and receive output from that shell.  In other words it can read from and write to your terminal session programmatically\n4. The pseudo-terminal output will be pushed via a websocket channel back to the client.\n5. The Xterm.js terminal screen will show the terminal output (which contains both the user input and all other data).\n\nThis communication mechanism allows data to be pushed on the fly to the terminal (e.g. when tailing a file), where it will be displayed to the user).\n\n### Limitations\nSince multiple flow editors can be active at the same time, some kind of terminal management is required.  To accomplish this, the sidebar coding assigns a ***unique terminal Id*** to the flow editor where it is being displayed.  That terminal id is being transferred all the time between the terminal window (client side) and the pseudo terminal (server side), to make sure the data of the multiple terminals doesn't get mixed.\n\nThis is also the main reason why I had to implement my own *Terminal Input* node: this node will also sends that unique terminal id to the server, to make sure that the data will be inject in the terminal window of the **SAME** flow editor (where the Terminal Input node's button has been clicked)!  If I would have reused the Inject node, the server wouldn't have been able to determine in which terminal the data should be inserted.  *Therefore it is not possible to use the Inject node to inject commands into the terminal!*\n\nIt would have been nice to have a *Terminal output* node, to capture the output of a command and process that data in your Node-RED flow.  However such a Terminal Output node runs on the server, which means it is a single node instance that would get the data from all commands from all connected terminals.  This way data from all connected terminals gets mixed, which is totally useless.  Moreover the data would also contain the input from the user (so not only the terminal output)!  *Therefore it is not possible to create a useful Terminal Output node.* \n\nIt is also *not useful to have an output on the Terminal Input node*: a single Terminal Input node on the server side, will be visualized in every flow editor.  So the injected commands from all users will arrive at the same Terminal Input node instance, which means the data again will be mixed. \n\n### Prebuild binaries\nThe node-pty pseudo terminal is written partly in the C-language, which means it needs to be compiled during installation.  This requires the necessary build tools be installed on your system, and then it can cause a lot of headache solving all build conflichts...\n\nHowever this node uses [node-pty-prebuilt-multiarch](https://github.com/oznu/node-pty-prebuilt-multiarch), which offers prebuilt node-pty binaries for a series of operating systems and hardware architectures:\n\n![binaries](https://user-images.githubusercontent.com/14224149/72219154-2f3f9b00-3543-11ea-883f-ed415ddaccd2.png)\n\nThis way you can install this node hopefully a bit easier ...\n\nBut there will be lots of other platforms where the binaries will be build automatically.  On some platforms you will even have execute manual steps to get a succesfull build, like e.g. for Oracle Cloud Free Instance as described [here](https://discourse.nodered.org/t/announce-node-red-contrib-xterm-second-beta-sidebar/19718/2).\n\n### Hearbeat\nWhen a flow editor is being closed in the browser, the corresponding pseudo terminal process on the server should be stopped.  Otherwise the pseudo terminal processes keep stacking up, and the number of pseudo terminals is limited by the host operating system.  Since the server side cannot detect a flow editor being disconnected (see Nick's [answer](https://discourse.nodered.org/t/detect-when-flow-editor-is-closed/18357)), the sidebar tab will send a heartbeat to the server every 5 seconds.  When such a heartbeat doesn't arrive within 15 seconds, the pseudo terminal process (corresponding to the that terminal id) will be stopped automatically.\n\nAs a result you can also *refresh* your (flow editor) browser page, without running into troubles: the old pseudo terminal process will be killed within 15 seconds if the page should get a new unique terminal id.  And a new terminal can be started...\n\nIf this should occur unexpected (e.g. due to network latency problems), you just need to start the terminal again.  The *'Start'* and '*Stop*' buttons will always detect first whether a terminal is already running for this terminal id anyway ...\n","output":"str","x":1231,"y":797,"wires":[[]]},{"id":"d2ad303fbebcbdb8","type":"inject","z":"16310ded01410ec0","g":"414cba320f179caf","name":"inject package details","props":[{"p":"packagename","v":"node-red-contrib-xterm","vt":"str"},{"p":"packageversion","v":"1.0.1","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1233,"y":416,"wires":[[]]},{"id":"b9a389c43058c6cb","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"LICENSE","filename":"LICENSE","format":"text","syntax":"mustache","template":"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n","output":"str","x":863,"y":1072,"wires":[["dc87852835156650"]]},{"id":"dc87852835156650","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_hello_world.gif","filename":"images/blockly_hello_world.gif","format":"base64","syntax":"mustache","template":"","output":"str","x":863,"y":1122,"wires":[["2109cf02bff5a4bd"]]},{"id":"2109cf02bff5a4bd","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_intro.gif","filename":"images/blockly_intro.gif","format":"base64","syntax":"mustache","template":"","output":"str","x":863,"y":1172,"wires":[["08d823d59b3144e4"]]},{"id":"08d823d59b3144e4","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_config.html","filename":"blockly_config.html","format":"html","syntax":"mustache","template":"<!--\n  Copyright 2021, Bart Butenaers\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<script type=\"text/javascript\">\n    function getDefaultBlocklyCategories() {\n        // Note that the same blockly-contrib/npm/node-red-contrib-blockly/messages/en.js is used for all our custom categories, since we use \n        // a single language file for all our categories.  Similar to how the Blockly team at Google does it, since that is easier for the\n        // contributors that create translations in other languages...\n        // By repeating the same language file, it is possible for users to remove some categories (while the remaining categories still keep\n        // functioning correctly).\n        return [{\n                name: \"Node-RED\",\n                files: [\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/nodered/nodeRedBlocksCodeGen.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/nodered/nodeRedBlocksDefs.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/nodered/toolbox.xml\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"\n                ]\n            },\n            {\n                name: \"Objects\",\n                files: [\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/json/objectBlocksCodeGen.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/json/objectBlocksDefs.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/json/toolbox.xml\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"\n                ]\n            },\n            {\n                name: \"Buffer\",\n                files: [\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/buffer/bufferBlocksCodeGen.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/buffer/bufferBlocksDefs.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/buffer/toolbox.xml\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"\n                ]\n            },\n            {\n                name: \"Date/time\",\n                files: [\n                    // Inside this category we use a datepicker plugin, which is available as a separate NPM package.\n                    // When the npm package name contains a path separator (e.g. @blockly/field-date) then the frontend will\n                    // need to replace that separator by the string \"___SEPARATOR___\".  Otherwise the NGinx webserver installed together\n                    // with HomeAssistant will cause the Express.js routes to be messed up.\n                    // See https://github.com/bartbutenaers/node-red-contrib-blockly/issues/101\n                    \"blockly-contrib/npm/@blockly___SEPARATOR___field-date/dist/index.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/datetime/dateTimeBlocksCodeGen.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/datetime/dateTimeBlocksDefs.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/datetime/toolbox.xml\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"\n                ]\n            },\n            {\n                name: \"Timer\",\n                files: [\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/timer/timerBlocksCodeGen.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/timer/timerBlocksDefs.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/timer/toolbox.xml\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"\n                ]\n            },\n            {\n                name: \"Blockly extension\",\n                files: [\n                    // Extra blocks that we have developed to show inside the existing standard Blockly categories\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/extra/extraBlocksCodeGen.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/extra/extraBlocksDefs.js\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/extra/toolbox.xml\",\n                    \"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"\n                ]\n            },\n            {\n                name: \"Blockly standard\",\n                files: [\n                    // The Blockly block definitions and code generaters are included in blocks_compressed.js and javascript_compressed.js\",\n                    // which are offered by the Blockly team in the blockly NPM package.  Those files need to be loaded all the time, otherwise\n                    // we end up with lots of errors everywhere in this node.  Also the standard en.js file needs to be loaded always first,\n                    // because it contains a statement to clear ALL previously loaded messages.\n                    // Therefore those files will be loaded always and NOT here!!\n                    // However we have created our own toolbox.xml file, because you need to specify on your own which Blockly standard\n                    // blocks need to be displayed in the toolbox.  Therefore the toolbox.xml file is part of the node-red-contrib-blockly node.\n                    // This allows people to change this file to create their custom toolbox.\n                    \"blockly-contrib/npm/node-red-contrib-blockly/lib/basic/toolbox.xml\"\n                ]\n            }\n        ];\n    }\n\n    RED.nodes.registerType('blockly-config',{\n        category: 'config',\n        color: '#ff758d',\n        defaults: {\n            language: {value: \"en\"},\n            showTrashcan: {value: true},\n            allowComments: {value: true},\n            showZoomControl: {value: true},\n            showMiniMap: {value: true},\n            enableBackPack: {value: false},\n            // The backpackContents will be set by the Blockly nodes, but need to be defined here (otherwise it won't be persisted by Node-RED)\n            backpackContents: {value: []},\n            toolboxPosition: {value: \"left\"},\n            renderer: {value: \"geras\"},\n            theme: {value: \"classic\"},\n            categories: {value: null},\n            customizeToolbox: {value: false},\n            name: {value: \"\"}\n        },        \n        inputs:1,\n        outputs:1,\n        icon: \"font-awesome/fa-cog\",\n        label: function() {\n            return this.name || \"Blockly config\";\n        },\n        oneditprepare: function() {\n            var node = this;\n\n            // Show by default theme \"classic\" for older nodes \n            if(node.theme === null || node.theme === \"\" || (typeof node.theme === \"undefined\")) {\n                $(\"#node-config-input-theme\").val(\"classic\");\n            }\n\n            // Show tabsheets\n            node.tabs = RED.tabs.create({\n                id: \"node-blockly-config-tabs\",\n                onchange: function(tab) {\n                    // Show only the content (i.e. the children) of the selected tabsheet, and hide the others\n                    $(\"#node-blockly-config-tabs-content\").children().hide();\n                    $(\"#\" + tab.id).show();\n                    \n                    // Make sure that the editableList on this tab will fill the entire available area\n                    //resizeDialog();\n                }\n            });\n            node.tabs.addTab({\n                id: \"node-blockly-config-tab-settings\",\n                label: \"Settings\"\n            });\n            node.tabs.addTab({\n                id: \"node-blockly-config-tab-categories\",\n                label: \"Categories\"\n            });\n            \n            $('#node-config-input-customizeToolbox').change(function() {\n                // Enabling/disabling tabsheet is not supported by Node-RED (see https://discourse.nodered.org/t/disable-a-tabsheet-in-config-screen/32031)\n                if (this.checked) {\n                    // Enable the \"categories\" tabsheet\n                    $(\"#red-ui-tab-node-blockly-config-tab-categories\").css('pointer-events', \"\");\n                    $(\"#red-ui-tab-node-blockly-config-tab-categories\").css('opacity', \"\");\n                }\n                else {\n                    // Disable the \"categories\" tabsheet\n                    $(\"#red-ui-tab-node-blockly-config-tab-categories\").css('pointer-events', \"none\");\n                    $(\"#red-ui-tab-node-blockly-config-tab-categories\").css('opacity', \"0.4\");\n                }\n            });\n            $('#node-config-input-customizeToolbox').change();\n            \n            // The \"categories\" tabsheet is disabled by default, because it should only be used by advanced users!\n            // Not supported by Node-RED (see https://discourse.nodered.org/t/disable-a-tabsheet-in-config-screen/32031)\n            $(\"#red-ui-tab-node-blockly-config-tab-categories\").css('pointer-events', \"none\");\n            $(\"#red-ui-tab-node-blockly-config-tab-categories\").css('opacity', \"0.4\");\n            \n            if (!node.categories) {\n                // By default we expect all our categories need to be displayed.  Afterwards the user can modify this list if required.\n                node.categories = getDefaultBlocklyCategories();\n            }\n            \n            var categoriesList = $(\"#node-input-categories-container\").css('min-height','200px').editableList({\n                // Apply css to the parent div to have margins, to make sure the percentages of the headers match those of the html elements below.\n                // Thanks to hotNipi for this tip !!!\n                header: $(\"<div>\").css({\"margin-left\":\"28px\",\"margin-right\":\"10x\"}).append($.parseHTML(\n                   \"<div style='width:40%; display: inline-grid'><b>Category</b></div>\" +\n                   \"<div style='width:40%; display: inline-grid'><b>Resources</b></div>\")),\n                addItem: function(container, i, category) {\n                    // Add a new row to the editableList\n                    var row = $('<div/>').appendTo(container);\n                    \n                    // Column 1 : Add an input field (type text) to the new row, that represents the category name\n                    var nameField = $('<input/>',{class:\"node-input-category-name\",type:\"text\"}).css({\"width\":\"40%\",\"margin-left\":\"5px\",\"margin-right\":\"5px\"}).appendTo(row);\n                    nameField.val(category.name || \"\");                   \n\n                    // Column 2 : Add an typedinput field (type object) to the new row, that represents the category files (i.e. all the files that need to be downloaded to the frontend)\n                    var filesField = $('<input/>',{class:\"node-input-category-files\",type:\"text\"}).css({\"width\":\"40%\",\"margin-left\":\"5px\",\"margin-right\":\"5px\"}).appendTo(row);\n                    filesField.typedInput({types: ['json']});\n                    filesField.typedInput(\"type\", \"json\");\n                    filesField.typedInput(\"value\", JSON.stringify(category.files || []));\n                },\n                buttons: [{\n                    label: \"reset\",\n                    icon: \"fa fa-refresh\",\n                    title: \"reset to the default categories\",\n                    click: function(evt) { \n                        var answer = confirm(\"Do you really want to load the default categories/blocks?\");\n                        if (answer == true) {\n                            $(\"#node-input-categories-container\").editableList('empty');\n                            var defaultCategories = getDefaultBlocklyCategories();\n                            defaultCategories.forEach(function (category, index) {\n                                categoriesList.editableList('addItem', category);\n                            });\n                        }\n                    }\n                }],\n                removable: true,\n                sortable: true\n            });\n            \n            // Show all the categories (stored in this node) into the editableList\n            if (node.categories) {\n                node.categories.forEach(function (category, index) {\n                    categoriesList.editableList('addItem', category);\n                });\n            }\n        },\n        oneditsave: function() {\n            var node = this;\n\n            // Copy all the categories from the editableList to this node\n            node.categories = [];\n            var categoriesList = $(\"#node-input-categories-container\").editableList('items');\n            categoriesList.each(function(i) {\n                var category  = $(this);\n                var name      = category.find(\".node-input-category-name\").val();\n                var files     = JSON.parse(category.find(\".node-input-category-files\").typedInput('value'));\n                \n                node.categories.push({name:name, files:files});\n            });\n        },\n        oneditresize: function(size) {\n            ///resizeDialog(size);\n        }\n    });\n</script>\n\n<script type=\"text/html\" data-template-name=\"blockly-config\">\n    <div class=\"form-row\">\n        <label for=\"node-config-input-name\"><i class=\"icon-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-config-input-name\" placeholder=\"Name\">\n    </div>\n    <br>\n    <div class=\"form-row\">\n        <!-- Tabsheets -->\n        <ul style=\"background: #fff; margin-bottom: 20px;\" id=\"node-blockly-config-tabs\"></ul>\n    </div>\n    <div id=\"node-blockly-config-tabs-content\" style=\"min-height: 150px\">\n        <!-- Content of all tabsheets -->\n        <div id=\"node-blockly-config-tab-settings\" class=\"node-blockly-config-tab-content\">\n            <div class=\"form-row\">\n                <label for='node-config-input-showTrashcan'><i class='fa fa-trash'></i> Trashcan</label>\n                <input type='checkbox' id='node-config-input-showTrashcan' style='width:auto ;border:none; vertical-align:baseline;' placeholder='0'>\n                <span for='node-config-input-showTrashcan'> Show trashcan icon in workspace</span>\n            </div>\n            <div class=\"form-row\">\n                <label for='node-config-input-allowComments'><i class='fa fa-comment-o'></i> Comment</label>\n                <input type='checkbox' id='node-config-input-allowComments' style='width:auto ;border:none; vertical-align:baseline;' placeholder='0'>\n                <span for='node-config-input-allowComments'> Allow comments on blocks</span>\n            </div>    \n            <div class=\"form-row\">\n                <label for='node-config-input-showZoomControl'><i class='fa fa-binoculars'></i> Zoom</label>\n                <input type='checkbox' id='node-config-input-showZoomControl' style='width:auto ;border:none; vertical-align:baseline;' placeholder='0'>\n                <span for='node-config-input-showZoomControl'> Show zoom control icons in workspace</span>\n            </div>\n            <div class=\"form-row\">\n                <label for='node-config-input-showMiniMap'><i class='fa fa-map'></i> MiniMap</label>\n                <input type='checkbox' id='node-config-input-showMiniMap' style='width:auto ;border:none; vertical-align:baseline;' placeholder='0'>\n                <span for='node-config-input-showMiniMap'> Show a mini map in (expanded) workspace</span>\n            </div>\n            <div class=\"form-row\">\n                <label for='node-config-input-enableBackPack'><i class='fa fa-briefcase'></i> Backpack</label>\n                <input type='checkbox' id='node-config-input-enableBackPack' style='width:auto ;border:none; vertical-align:baseline;' placeholder='0'>\n                <span for='node-config-input-enableBackPack'> Show backpack icon in workspace</span>\n            </div>\n            <div class=\"form-row\">\n                <label for='node-config-input-customizeToolbox'><i class='fa fa-list'></i> Categories</label>\n                <input type='checkbox' id='node-config-input-customizeToolbox' style='width:auto ;border:none; vertical-align:baseline;' placeholder='0'>\n                <span for='node-config-input-customizeToolbox'> Customize toolbox categories (use with caution!)</span>\n            </div>\n            <div class=\"form-row\">\n                <label for=\"node-config-input-language\"><i class=\"fa fa-globe\"></i> Language</label>\n                <select id=\"node-config-input-language\">    \n                    <!--<option value='ar'>العربية</option>-->\n                    <!--<option value='be-tarask'>Taraškievica</option>-->\n                    <!--<option value='br'>Brezhoneg</option>-->\n                    <!--<option value='ca'>Català</option>-->\n                    <!--<option value='cs'>Česky</option>-->\n                    <!--<option value='da'>Dansk</option>-->\n                    <!--<option value='de'>Deutsch</option>-->\n                    <!--<option value='el'>Ελληνικά</option>-->\n                    <option value='en'>English</option>\n                    <!--<option value='es'>Español</option>-->\n                    <!--<option value='et'>Eesti</option>-->\n                    <!--<option value='fa'>فارسی</option>-->\n                    <option value='fr'>Français</option>\n                    <!--<option value='he'>עברית</option>-->\n                    <!--<option value='hrx'>Hunsrik</option>-->\n                    <!--<option value='hu'>Magyar</option>-->\n                    <!--<option value='ia'>Interlingua</option>-->\n                    <!--<option value='is'>Íslenska</option>-->\n                    <!--<option value='it'>Italiano</option>-->\n                    <option value='ja'>日本語</option>\n                    <!--<option value='kab'>Kabyle</option>-->\n                    <!--<option value='ko'>한국어</option>-->\n                    <!--<option value='mk'>Македонски</option>-->\n                    <!--<option value='ms'>Bahasa Melayu</option>-->\n                    <!--<option value='nb'>Norsk Bokmål</option>-->\n                    <option value='nl'>Nederlands, Vlaams</option>\n                    <!--<option value='oc'>Lenga d\\'òc</option>-->\n                    <!--<option value='pl'>Polski</option>-->\n                    <!--<option value='pms'>Piemontèis</option>-->\n                    <!--<option value='pt-br'>Português Brasileiro</option>-->\n                    <!--<option value='ro'>Română</option>-->\n                    <option value='ru'>Русский</option>\n                    <!--<option value='sc'>Sardu</option>-->\n                    <!--<option value='sk'>Slovenčina</option>-->\n                    <!--<option value='sr'>Српски</option>-->\n                    <!--<option value='sv'>Svenska</option>-->\n                    <!--<option value='ta'>தமிழ்</option>-->\n                    <!--<option value='th'>ภาษาไทย</option>-->\n                    <!--<option value='tlh'>tlhIngan Hol</option>-->\n                    <!--<option value='tr'>Türkçe</option>-->\n                    <!--<option value='uk'>Українська</option>-->\n                    <!--<option value='vi'>Tiếng Việt</option>-->\n                    <!--<option value='zh-hans'>简体中文</option>-->\n                    <!--<option value='zh-hant'>正體中文</option>-->\n                </select>\n            </div>    \n            <div class=\"form-row\">\n                <label for=\"node-config-input-toolboxPosition\"><i class=\"fa fa-arrows\"></i> Toolbox</label>\n                <select id=\"node-config-input-toolboxPosition\">\n                    <option value=\"left\">Left</option> \n                    <option value=\"right\">Right</option>\n                    <option value=\"top\">Top</option>\n                </select>\n            </div> \n            <div class=\"form-row\">\n                <label for=\"node-config-input-renderer\"><i class=\"fa fa-paint-brush\"></i> Renderer</label>\n                <select id=\"node-config-input-renderer\">\n                    <option value=\"geras\">Geras</option> \n                    <option value=\"thrasos\">Thrasos</option>\n                    <option value=\"zelos\">Zelos</option>\n                </select>\n            </div>\n            <div class=\"form-row\">\n                <label for=\"node-config-input-theme\"><i class=\"fa fa-paint-brush\"></i> Theme</label>\n                <select id=\"node-config-input-theme\">\n                    <option value=\"classic\">Classic</option> \n                    <option value=\"dark\">Dark</option>\n                    <option value=\"deuteranopia\">Deuteranopia</option>\n                    <option value=\"highcontrast\">High contrast</option>\n                    <option value=\"modern\">Modern</option>\n                    <option value=\"tritanopia\">Tritanopia</option>\n                </select>\n            </div>\n        </div>\n        <div id=\"node-blockly-config-tab-categories\" class=\"node-blockly-config-tab-content\">\n            <div class=\"form-row\">\n                <!-- Table with blockly toolbox categories -->\n                <ol id=\"node-input-categories-container\" class=\"auto-height-container\"></ol>\n            </div>  \n        </div>\n    </div>            \n</script>\n\n<script type=\"text/html\" data-help-name=\"blockly-config\">\n    <p><strong>Show trashcan icon in workspace:</strong><br/>\n    If activated, a trash can icon will be displayed in the Blockly workspace.</p>\n    <p><strong>Allow comments on blocks:</strong><br/>\n    If activated, comments can be added to a block (via the right-click context menu).</p>\n    <p><strong>Show zoom control icons in workspace:</strong><br/>\n    If activated, zoom control icons will be displayed in the Blockly workspace.</p> \n    <p><strong>Show mini map in workspace:</strong><br/>\n    If activated, a mini map will be displayed in the Blockly workspace (when extended to fullscreen).</p> \n    <p><strong>Show backpack icon in workspace:</strong><br/>\n    If activated, a backpack icon will be displayed in the Blockly workspace.  Via this way you can manage your favorite blocks.</p> \n    <p><strong>Categories:</strong><br/>\n    If activated, the toolbox categories can be customized.</p>\n    <p style=\"color:#FF0000\">CAUTION: if you remove block libraries (for blocks that are already being used in the workspace), then your workspace might become unusable!  Moreover when a new version of the Blockly node is published, then you most probably might not get our changes to the toolbox (e.g. a new category).  So this option should only be used by advanced users!</p>\n    <p><strong>Language:</strong><br/>\n    Specify in which language the text should appear in the workspace.</p>\n    <p><strong>Toolbox:</strong><br/>\n    Specify the location of the toolbox in the workspace (left, right or top).</p>\n    <p><strong>Renderer:</strong><br/>\n    Specify a renderer to determine how the blocks need to be drawed visually in the workspace (height, padding, border, ...):\n    <ul>\n        <li><i>Geras:</i> The default Blockly look and feel.</li>\n        <li><i>Thrasos:</i></li>\n        <li><i>Zelos:</i> A Scratch-like look and feel.</li>\n    </ul></p>\n    <p><strong>Theme:</strong><br/>\n    Specify a theme to adjust the colors in the workspace:\n    <ul>\n        <li><i>Classic:</i> The default theme in Blockly.</li>\n        <li><i>Dark:</i> A theme that uses darker colors than the default</li>\n        <li><i>Deuteranopia:</i> A theme for people that have deuteranopia (the inability to perceive green light). This can also be used for people that have protanopia (the inability to perceive red light).</li>\n        <li><i>Modern:</i> A slight variant of the default Blockly theme that uses darker borders and flatter blocks.</li>\n        <li><i>High Contrast:</i> A theme that improves accessibility by using more contrasting colors and darker text to make blocks more legible.</li>\n        <li><i>Tritanopia:</i> A theme for people that have tritanopia (the inability to perceive blue light).</li>\n    </ul></p>\n</script>\n","output":"str","x":863,"y":1222,"wires":[["7f8628ced6f47a03"]]},{"id":"7f8628ced6f47a03","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly.html","filename":"blockly.html","format":"html","syntax":"mustache","template":"<!--\n  Copyright 2018, Bart Butenaers\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n\n<script type=\"text/javascript\">\n    function loadResourcesFromServer(node, language, categories) {\n        var lastScriptToLoad;\n        \n        // When no categories are passed (e.g. when there is no config node selected), then use the default categories\n        if (!categories) {\n            categories = getDefaultBlocklyCategories();\n        }\n        \n        // Create a deep clone of the original category array (from the config node), to make sure the original array isn't updated by this function\n        categories = JSON.parse(JSON.stringify(categories));\n        \n        node.librariesLoaded = false;\n        \n        // Remove all the custom blockly scripts from the previous time.\n        // Because suppose a library has been removed in the config screen, then it would otherwise still be loaded and be used by blockly.\n        $('script[data-custom_blockly_library=true]').remove();\n\n        // Make sure that all standard Blockly library files are loaded FIRST AND IN THE CORRECT ORDER, by adding a dummy category.\n        // Don't use jQuery or script tags (see https://discourse.nodered.org/t/scope-of-variables-in-external-js-scripts/1048/2).\n        // The en.js file should be loaded before the blocks_compressed.js library, to avoid \"No message string for...\" console warnings.\n        categories.unshift({\n            name: \"Dummy category\",\n            files: [\n                \"blockly-contrib/npm/blockly/blockly_compressed.js\",    // Creates a global Blockly variable\n                \"blockly-contrib/npm/blockly/msg/en.js\",                // Fills the Blockly.Msg with english translations\n                \"blockly-contrib/npm/blockly/blocks_compressed.js\",\n                \"blockly-contrib/npm/blockly/javascript_compressed.js\",\n                // When the npm package name contains a path separator (e.g. @blockly/plugin-workspace-search) then the frontend will\n                // need to replace that separator by the string \"___SEPARATOR___\".  Otherwise the NGinx webserver installed together\n                // with HomeAssistant will cause the Express.js routes to be messed up.\n                // See https://github.com/bartbutenaers/node-red-contrib-blockly/issues/101\n                \"blockly-contrib/npm/@blockly___SEPARATOR___plugin-workspace-search/dist/index.js\",\n                \"blockly-contrib/npm/@blockly___SEPARATOR___zoom-to-fit/dist/index.js\",\n                \"blockly-contrib/npm/@blockly___SEPARATOR___workspace-backpack/dist/index.js\",\n                \"blockly-contrib/npm/@blockly___SEPARATOR___toolbox-search/dist/index.js\",\n                \"blockly-contrib/npm/@blockly___SEPARATOR___workspace-minimap/dist/index.js\"\n            ]\n        });\n\n        // When another (not-english) language has been selected, then the english files should be loaded first.\n        // And afterwards the other language files will be loaded.  That way there won't be a problem if some of\n        // the texts have not been translated: they will simply be showed in english.\n        // Note that the standard blockly en.js file contains a statement to clear all the Blockly.msg messages,\n        // which means this one needs to be loaded first.  And all translations also have to be reloaded afterwards ...\n        if (language != \"en\") {\n            categories.forEach(function(category) {\n                (category.files || []).forEach(function(file) {\n                    if(file.endsWith(\"/en.js\")) {\n                        var translationFile = file.replace(\"/en.js\", \"/\" + language + \".js\");\n                        category.files.push(translationFile);\n                    }\n                });\n            });\n        }\n\n        // As soon as the toolbox files have been loaded, the javascript files for the categories will be loaded.\n        // The javascript files will be loaded synchronous, because there is a dependency order that needs to be fullfilled.\n        // However the files will be loaded in background, so we need to wait for an event that indicates that the script is loaded...\n        categories.forEach(function(category) {\n            (category.files || []).forEach(function(file) {\n                // Note that the english language files have already been handled above...\n                if(file.endsWith(\".js\")) {\n                    // Make sure that all Blockly library files are loaded in the correct order.\n                    // Don't use jQuery (see https://discourse.nodered.org/t/scope-of-variables-in-external-js-scripts/1048/2)\n                    lastScriptToLoad = document.createElement('script');\n                    lastScriptToLoad.type=\"text/javascript\";\n                    lastScriptToLoad.async = false; // Force synchronous loading, to load them in the correct sequence\n                    lastScriptToLoad.src = file; \n                    // Set a user attribute on the script element, to allow us to identify it afterwards as on of the blockly related libs\n                    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset\n                    lastScriptToLoad.dataset.custom_blockly_library = true;\n                    document.head.appendChild(lastScriptToLoad);\n                }\n            });\n        });\n        \n        // Currently only JS and XML files are allowed.  Not sure yet how to handle other types.\n        categories.forEach(function(category) {\n            (category.files || []).forEach(function(file) {                \n                if(!file.endsWith(\".js\") && !file.endsWith(\".xml\")) {\n                    console.log(\"Unknown resource type (\" + file + \")\");\n                }\n            });\n        });\n        \n        // The workspace can only be created when all script files have been loaded, otherwise errors will occur...\n        // By loading the standard Blockly library again, a new Blockly instance will be created which must be initialized here.\n        // And then the language files can be loaded into the new empty Blockly.Msg\n        lastScriptToLoad.onload = function() {\n            node.librariesLoaded = true;\n            \n            Blockly.blocklyEditorVisible = true;\n\n            // Make sure the Blockly datetime_convert_from_date block is always aware about the number of outputs\n            Blockly.blocklyEditorLanguage = language;\n                \n            // Make sure the Blockly node_send and node_return_message blocks are already at the beginning aware about the number of outputs\n            Blockly.nodeOutputs = node.outputs\n\n            // The 'msg' variable represents the parameter from the Node-Red 'input' event.\n            // By adding it as a reserved wordt in Javascript, we can avoid that users create their own 'msg' variable.\n            // Idem for the 'global', 'flow' and 'context' memory in Node-Red.\n            Blockly.JavaScript.addReservedWords(['msg', 'flow', 'context', 'global']);\n            \n            // Blockly has an onKeyDown handler, that handles a number of key combinations (ctrl-'C' to copy the selected\n            // blocks, 'D' to delete the selected blocks, ctrl-'Z' to undo the last action).  However afterwards the keydown event\n            // is passed to Node-Red which cannot handle it, resulting in errors in the log.\n            // See https://github.com/bartbutenaers/node-red-contrib-blockly/issues/2\n            // Make sure that Blockly only handles the keydown events when the Blockly editor is visible, and otherwise Node-Red will handle them.\n            if (Blockly.blocklyEditorVisible === undefined) {\n                Blockly.originalKeyDownHandler = Blockly.onKeyDown_;\n                Blockly.onKeyDown_ = function(e) {\n                    if (Blockly.blocklyEditorVisible) {\n                        // Let Blockly handle the keydown event\n                        Blockly.originalKeyDownHandler(e);\n                        \n                        // \n                        if (e.altKey || e.ctrlKey || e.metaKey) {\n                            // Don't use meta keys during drags\n                            if (!Blockly.mainWorkspace.isDragging()) {\n                                // When pressing CTRL-V (paste) ...\n                                if (e.keyCode == 86) {\n                                    if (!Blockly.clipboardXml_ && Blockly.customClipboard) {\n                                        // When the originalClipboardXml_ is null and the customClipboard is not empty, this means\n                                        // we need to paste blocks that have been copied (to the customClipboard) in another node.\n                                        var xmlDom = Blockly.Xml.textToDom(Blockly.customClipboard);\n                                        Blockly.Xml.domToWorkspace(xmlDom, Blockly.mainWorkspace);\n                                    }\n                                }\n                            }\n                        }\n                        \n                        // Stop the events from propagating up the DOM tree\n                        e.stopPropagation();\n                    }\n                }\n            }\n            \n            if (document.implementation.createDocument) {\n                // Create a new XML document (which represents a toolbox), and keep it as a global variable.\n                // All toolbox.xml files will be loaded and combined into the XML document.  \n                // As soon as the XML document is complete, the toolbox will be displayed.\n                // In e.g. Chrome you can skip the third parameter, but e.g. in Firefox you need at least pass a null.\n                node.toolboxXmlDocument = document.implementation.createDocument(\"https://developers.google.com/blockly/xml\", \"xml\", null);\n            }\n            else {\n                console.error('This browser cannot create a Blockly toolbox XML document (via createDocument)');\n                return;\n            }\n\n            // Load the toolbox (XML) files for all categories.  This is done synchronous to make sure they are displayed in the specified order.\n            categories.forEach(function(category) {\n                (category.files || []).forEach(function(file) {                \n                    if(file.endsWith(\".xml\")) {\n                        var request = new XMLHttpRequest();\n                        request.open('GET', file, false);  // `false` makes the request synchronous\n                        request.send();\n                    \n                        if (request.readyState == 4 && request.status == 200) {\n                            // Get all categories in the new XML document\n                            var newCategories = request.responseXML.getElementsByTagName(\"category\");\n                    \n                            // Iterate backwards since categories can be moved away from this list (to the toolbox)\n                            // 2021-03-25 Jeff: changed to while-loop to accommadate nested categories\n                            while (newCategories.length > 0) {\n                                var newCategory = newCategories[0];\n                                \n\n                                // Get the category name\n                                var name = newCategory.getAttribute('name');\n\n                                // Try to find an existing category with the same name.\n                                // Indeed multiple toolboxes can put blocks in the same category...\n                                var existingCategory = node.toolboxXmlDocument.getElementsByName(name);\n                                \n                                if (existingCategory.length === 0) {\n                                    // If the new category didn't exist yet in the toolbox, append the entire new category to the toolbox\n                                    node.toolboxXmlDocument.documentElement.appendChild(newCategory);\n                                }\n                                else {\n                                    var newBlocks = newCategory.children;\n\n                                    // Move all the blocks (and their children) from the newCategory to the existingCategory.\n                                    // Remark: appendChild will remove the block from newBlocks!\n                                    while(newBlocks.length > 0) {\n                                        existingCategory[0].appendChild(newBlocks[0]);\n                                    }\n                                    // Remove the category from newCategories so the next loop is clean\n                                    newCategory.remove();\n                                }\n                            }\n                        }\n                        else {\n                            console.error(\"The toolbox XML files for Blockly cannot be loaded\"); \n                        }\n                    }\n                });\n            });\n\n            // // Add a 'Search' category at the end, which is linked automatically by Blockly to the toolbox-search plugin.\n            const searchElement = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"category\");\n            searchElement.setAttribute(\"name\", \"Search\");\n            searchElement.setAttribute(\"kind\", \"search\");\n            // When the search input field is clicked, a blue background appears.\n            // I tried to apply as color the same color as the background color (grey), but it doesn't help.\n            // The same happens in the official plugin demo (https://google.github.io/blockly-samples/plugins/toolbox-search/test/index.html)\n            searchElement.setAttribute(\"colour\", \"#B2B2B2\"); // Same color as the background\n            node.toolboxXmlDocument.documentElement.appendChild(searchElement);\n\n            load_themes();\n\n            // Create the workspace as soon as the last script has been loaded.  \n            // This is possible because the scripts are loaded sequentially (via async = false)\n            createWorkspace(node, node.workspaceXml);\n        }\n    }\n\n    let theme_guard = false;\n\n    async function load_themes() {\n\n        if (theme_guard) {\n            return;\n        }\n\n        theme_guard = true;\n\n        // Load the themes\n        let _themes = [\n            \"dark\",\n            \"deuteranopia\",\n            \"highcontrast\",\n            \"modern\",\n            \"tritanopia\"\n        ];\n\n        // Ralph:\n        // Initially Bart tried to import the Blockly Theme modules the conventional way:\n        //   node.themeModule = await import(\"/blockly-contrib/npm/@blockly___SEPARATOR___theme-\" + theme + \"/dist/index.js\");\n        // This yet runs into \"Cannot read properties of undefined (reading 'Blockly')\".\n        // Looks like there's an issue with the webpackUniversalModuleDefinition implementation. I found no way to compensate for this. Bad.\n        // As \"[...]/src/index.js\" is the pure code file (not being wrapped into the webpackUniversalModuleDefinition stuff), I tried to import from there.\n        // Fails as well, as \"import Blockly from 'blockly/core'\" cannot be resolved.\n        // The good thing: We don't need this import at all! 'Blockly' is guaranteed to be already defined!\n        // Fortunately, the Blockly Theme plugins follow a very simple & identical pattern - supporting the following hack:\n        // * Get the script as text from the runtime.\n        // * Remove \"import Blockly from 'blockly/core';\" from the script.\n        // * Replace \"export default ...\" statement by a simple \"return\".\n        // * Wrap this script into a self executing function, to assign its value to the \"Blockly.Themes\" object.\n        // * Do those steps for all defined themes.\n        // * Create a script tag and let it execute the generated code.\n        // Works like a charm!\n\n        let _script = [\"Blockly.Themes = Blockly.Themes ?? {}\"];\n        _script.push(\"Blockly.Themes['classic'] = Blockly.Themes.Classic\");\n\n        for (const thm of _themes) {\n\n            let request = new XMLHttpRequest();\n            request.open('GET', `/blockly-contrib/npm/@blockly___SEPARATOR___theme-${thm}/src/index.js`, false);  // `false` makes the request synchronous\n            request.send();\n            if (request.readyState == 4 && request.status == 200) {\n                let data = request.response;\n                data = data.replace(\"import Blockly from 'blockly/core';\", \"\");\n                data = data.replace(\"export default Blockly.\", \"return Blockly.\");\n                _script.push(`Blockly.Themes[\"${thm}\"] = (function() {${data}})();`);\n            } else {\n                console.log(`Failed to load plugin for Blockly Theme \"${thm}\": ${request.response}`);\n            }\n        }\n\n        _script = _script.join(\";\\r\\n\");\n        \n        let script = document.createElement('script');\n        script.type= \"text/javascript\";\n        script.async = false; // Force synchronous loading, to load them in the correct sequence\n        script.text = _script;\n        script.dataset.custom_blockly_library = true;\n        document.head.appendChild(script);\n\n        theme_guard = false;\n    }\n\n    function createWorkspace(node, workspaceXml) {\n        // Default settings in case no config node has been specified\n        var showTrashcan     = true;\n        var allowComments    = true;\n        var showZoomControl  = true;\n        var showMiniMap      = true;\n        var horizontalLayout = false;\n        var enableBackPack   = false;\n        var toolboxPosition  = \"start\";\n        var renderer         = \"geras\";\n        var theme            = \"classic\";\n        var configNodeId     = \"\";\n        var backpackContents = [];\n\n        // When a config node has been specified, then use the settings from that node\n        if (node.selectedConfigNodeId && node.selectedConfigNodeId !== \"_ADD_\") {\n            var configNode = RED.nodes.node(node.selectedConfigNodeId);\n            \n            if (configNode) {\n                showTrashcan    = configNode.showTrashcan;\n                allowComments   = configNode.allowComments;\n                showZoomControl = configNode.showZoomControl;\n                showMiniMap     = configNode.showMiniMap;\n                renderer        = configNode.renderer;\n                theme           = configNode.theme;\n                enableBackPack  = configNode.enableBackPack;\n                configNodeId    = configNode.id;\n \n                // The toolboxPosition from the config screen determines two separate blockly settings!\n                switch(configNode.toolboxPosition) {\n                    case \"left\":\n                        horizontalLayout = false;\n                        toolboxPosition  = \"start\";                    \n                        break;\n                    case \"right\":\n                        horizontalLayout = false;\n                        toolboxPosition  = \"end\";   \n                        break;\n                    case \"top\":\n                        horizontalLayout = true;\n                        toolboxPosition  = \"start\";   \n                        break;\n                }\n            }\n        }\n        \n        // When previously a zoom-to-fit plugin has been activated, then clean it up\n        if (node.zoomToFit) {\n            node.zoomToFit.dispose();\n            node.zoomToFit = null;\n        }\n\n        // Persist the backpack content, to make sure it can be restored in new workspace instances (e.g. when switching to full-screen mode).\n        // If backpack is not enabled, further on a new workspace setting will be created without backpack ...\n        if (enableBackPack) {\n            // Note that the backpack instance is linked to this node (since the corresponding workspace instance is also stored in this node), \n            // but its content will be stored in the config node in the oneditsave...\n            \n            if (!node.backpack || configNodeId !== node.previousConfigNodeId) {\n                if (node.selectedConfigNodeId && node.selectedConfigNodeId !== \"_ADD_\") {\n                    var configNode = RED.nodes.node(node.selectedConfigNodeId);\n                    if (configNode) {\n                        // Start from scratch (starting from the backpack content stored in the config node) when:\n                        // 1) There was previously no backpack activated in this node workspace, which means the user has enable the backpack now.\n                        // 2) The config node has changed.  Since enableBackPack is true, the user has selected another config node with its own backpack enabled.\n                        backpackContents = configNode.backpackContents;\n                    }\n                }\n            }\n            else {\n                if (node.backpack) {\n                    // We are still using the same config node.  Since the user might already have made changes to the config node backpack, we need\n                    // to start again from the previous backpack instance in this workspace (since that would contain those changes).\n                    // Otherwise all changes would be lost...\n                    backpackContents = node.backpack.getContents();\n                }\n            }\n        }\n        \n        // Remember the current config node id for the next time we arrive in this function\n        node.previousConfigNodeId = configNodeId;\n        \n        // When previously a workspace-backpack plugin has been activated (for the previous workspace instance), then clean it up\n        if (node.backpack) {\n            node.backpack.dispose();\n            node.backpack = null;\n        }\n        \n        // Blockly requires an empty array for the content of an empty backpack (instead of undefined or null)\n        if (!backpackContents) {\n            backpackContents = [];\n        }\n\n        // When previously another workspace was already created, then cleanup that one first (to avoid displaying multiple workspaces).\n        if (node.workspace) {\n            node.workspace.dispose();\n            node.workspace = null;\n        }  \n\n        // Ralph: This doesn't work!\n        // try {\n        //     // The theme plugins for Blockly are ES6 modules\n        //     node.themeModule = await import(\"/blockly-contrib/npm/@blockly___SEPARATOR___theme-\" + theme + \"/dist/index.js\");\n        // }\n        // catch (err) {\n        //     console.error(err);\n        // }\n\n        // Only load the Blockly workspace when all libraries have been loaded yet, in order to avoid errors\n        if (node.librariesLoaded == true) {\n            // Create the workspace (with the specified settings)\n            node.workspace = Blockly.inject('blocklyDiv', {\n                grid: {\n                    spacing: 25,\n                    length: 3,\n                    colour: '#ccc',\n                    snap: true\n                },     \n                toolbox: node.toolboxXmlDocument.firstElementChild,\n                zoom: {\n                    controls: showZoomControl, \n                    wheel: true\n                },\n                renderer: renderer,\n                theme: Blockly.Themes[theme],\n                trashcan: showTrashcan,\n                comments: allowComments,\n                disable: true,\n                scrollbars: true,\n                horizontalLayout: horizontalLayout,\n                toolboxPosition : toolboxPosition\n            });\n            \n            // Enable the search bar on the workspace (via the workspace-search plugin)\n            const workspaceSearch = new WorkspaceSearch(node.workspace);\n            workspaceSearch.init();\n            \n            if (showZoomControl) {\n                // Enable the zoom to fit control icon on the workspace (via the zoom-to-fit plugin)\n                node.zoomToFit = new ZoomToFitControl(node.workspace);\n                node.zoomToFit.init();\n            }\n\n            // Only show the minimap when the (fullscreen) tray is open, because the minimap is too big to fit into the node's config screen.\n            if (showMiniMap && node.isTrayOpen) {\n                // Enable the mini map on the workspace (via the workspace-minimap plugin)\n                node.minimap = new PositionedMinimap(node.workspace);\n                node.minimap.init();\n            }\n\n            if (enableBackPack) {\n                // Enable the backpack icon on the workspace (via the workspace-backpack plugin)\n                node.backpack = new Backpack(node.workspace);\n                node.backpack.init();\n                \n                // Reload the previous backpack content, to make sure it stays the same in new workspace instances (e.g. when switching to full-screen mode)\n                if (enableBackPack) {\n                    // Show the required backpack content\n                    node.backpack.setContents(backpackContents);\n                }\n            }\n     \n            // Trigger an event to indicate that a new Blockly workspace has been created.\n            // Blockly doesn't offer such an event.  See https://groups.google.com/g/blockly/c/sSpvp_Kz-To\n            // Such an event is required, because this node switches often its workspace (and some blocks need to be aware of that...).\n            // Note that custom data needs to be passed via the 'detail' field...\n            document.dispatchEvent(new CustomEvent(\"blocky_workspace_changed\", {\n                detail: {\n                    newWorkspace: node.workspace\n                }\n            }));\n            \n            try {            \n                // Load the workspace content again from the specified XML string\n                var dom = Blockly.utils.xml.textToDom(workspaceXml);\n                Blockly.Xml.domToWorkspace(dom, node.workspace); \n            }\n            catch(err) {\n                // We will arrive here when the current set of block libraries (as specified in the config node) doesn't support some blocks anymore.\n                var errorText = \"Some blocks will be removed from the workspace (because the current categories don't support them): \" + err;\n                \n                // When the config screen of this node is openened, Node-RED will call twice the onchange handler of the config node.\n                // To avoid that we would get the same error notification twice, we will skip one of both messages (during 1 second).\n                if (node.errorNotificationTimer) {\n                    clearTimeout(node.errorNotificationTimer);\n                }\n                node.errorNotificationTimer = setTimeout(function() {\n                    RED.notify(errorText, \"error\");\n                }, 500);\n\n                // When some of the block definitions are missing, we will convert the workspace to Dom and back to workspace.\n                // By doing that Blockly will remove the blocks without definition, and shows a workspace without those blocks.\n                // That is much better compared to showing an empty workspace...\n                // See https://groups.google.com/g/blockly/c/zdcUuRqWkxU/m/JfEdMv8MAQAJ\n                var dom = Blockly.Xml.workspaceToDom(node.workspace);\n                Blockly.Xml.domToWorkspace(dom, node.workspace);\n            }\n            \n            // Make sure the workspace is sized correctly in the beginning\n            resize(node);\n            node.workspace.scrollCenter();\n        }\n    }\n    \n    function cleanup(node) {\n        // Make sure that the Node-Red handles all keydown events again (e.g. 'D' to delete a node), instead of Blockly. \n        Blockly.blocklyEditorVisible = false;\n        \n        // When blocks are still available in Blockly's clipboard, Blockly CANNOT paste them in another workspace (of another node).\n        // This means we can empty the clipboard (by setting it to null).  However we will store first a copy of their clipboard \n        // (as xml string) into our own custom clipboard, which we CAN use to paste in another workspace.\n        if (Blockly.clipboardXml_) {\n            Blockly.customClipboard = '<xml xmlns=\"https://developers.google.com/blockly/xml\">' + Blockly.Xml.domToPrettyText(Blockly.clipboardXml_) + '</xml>';\n            Blockly.clipboardXml_ = null;\n        }\n                            \n        // When a copy is done in this blockly node, an error will occur if that content is pasted later in another blockly node.\n        // Copy-paste across workspaces is not supported by Blockly (https://github.com/google/blockly/issues/334)\n        Blockly.clipboardXml_ = null;\n        Blockly.clipboardSource_ = null;\n\n        // Cleanup the ACE editor\n        node.aceEditor.destroy();\n        delete node.aceEditor;\n\n        // Jeff: Cleanup the XML editor 04/18/2021\n        node.aceXMLEditor.destroy();\n        delete node.aceXMLEditor;\n\n        // When previously a zoom-to-fit plugin has been activated, then clean it up\n        if (node.zoomToFit) {\n            node.zoomToFit.dispose();\n            node.zoomToFit = null;\n        }\n\n        // When previously a workspace-minimap plugin has been activated, then clean it up\n        if (node.minimap) {\n            node.minimap.dispose();\n            node.minimap = null;\n        }\n\n        // When previously a workspace-backpack plugin has been activated (for the previous workspace instance), then clean it up\n        if (node.backpack) {\n            node.backpack.dispose();\n            node.backpack = null;\n        }\n\n        // Cleanup the Blockly workspace\n        node.workspace.dispose(); \n        delete node.workspace;\n    }\n    \n    // See https://developers.google.com/blockly/guides/configure/web/resizable\n    function resize(node) {        \n        // Resize the Blockly workspace, as soon as available (i.e. not when called from oneditprepare).\n        if (node.workspace) {\n            var blocklyArea = document.getElementById('blocklyArea');\n            var blocklyDiv = document.getElementById('blocklyDiv');\n\n            // Compute the absolute coordinates and dimensions of blocklyArea.\n            var element = blocklyArea;\n            var x = 0;\n            var y = 0;\n            //do {\n                x += element.offsetLeft;\n                y += element.offsetTop;\n            //    element = element.offsetParent;\n            //} while (element);\n            \n            // Position blocklyDiv over blocklyArea.\n            blocklyDiv.style.left = x + 'px';\n            blocklyDiv.style.top = y + 'px';\n            blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';\n            blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';\n            \n            // Make sure the Blockly svg area is resized according the DIV element.\n            // Blockly itself also calls svgResize underneath, but only when e.g. the toolbox changes size)\n            Blockly.svgResize(node.workspace);\n            \n        }\n    };\n    \n    function fillAceEditor(node) { \n        // Store the number of output ports in Blockly,  so the blocks can take that number into account (if required)\n        //Blockly.nodeOutputs = $(\"#node-input-outputs\").val();\n    \n        // Generate JavaScript code from the workspace content\n        Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n        var javascript = Blockly.JavaScript.workspaceToCode(node.workspace);\n        \n        // Show the generated Javascript code in the Ace editor\n        node.aceEditor.setValue(javascript);\n        \n        // After setValue all code will be selected otherwise\n        // Fix for clearSelection (see https://github.com/bartbutenaers/node-red-contrib-blockly/issues/74#issuecomment-862681796)\n        node.aceEditor.moveCursorTo(0,0);\n        \n        /*\n        // Count the number of (syntax) errors in the generated javascript code\n        var errorCount = 0;\n        var annotations = node.aceEditor.getSession().getAnnotations();\n        for (var k=0; k < annotations.length; k++) {\n            if (annotations[k].type === \"error\") {\n                errorCount += annotations.length;\n                break;\n            }\n        }\n    \n        // Give the \"Javascript\" tabsheet a red color if the generated javascript code contains (syntax) errors\n        if (errorCount > 0) {\n            $(\"#red-ui-tab-node-blockly-tab-javascript\").css('background-color', \"#EC7055\");\n        }\n        else {\n            // No (syntax) errors in the generated java\n            $(\"#red-ui-tab-node-blockly-tab-javascript\").css('background-color', \"#FFFFFF\");\n        }\n        */\n\n    }\n\n\n    function fillAceXMLEditor(node) {\n        // Jeff: fill aceXMLEditor 04/18/2021\n        // Store the number of output ports in Blockly,  so the blocks can take that number into account (if required)\n        //Blockly.nodeOutputs = $(\"#node-input-outputs\").val();\n\n        // Generate JavaScript code from the workspace content\n        var dom = Blockly.Xml.workspaceToDom(node.workspace);\n        var loadedxml = Blockly.Xml.domToPrettyText(dom);\n        // Show the generated XML code in the Ace editor\n        node.aceXMLEditor.setValue(loadedxml);\n\n        // After setValue all code will be selected otherwise\n        // Fix for clearSelection (see https://github.com/bartbutenaers/node-red-contrib-blockly/issues/74#issuecomment-862681796)\n        node.aceXMLEditor.moveCursorTo(0,0);\n    }\n\n\n    function reloadBlockly(node) {\n        // Jeff: fill aceXMLEditor 04/18/2021\n        var loadedXml = node.aceXMLEditor.getValue();\n        //var dom = Blockly.Xml.textToDom(loadedXml);\n        //node.workspace.clear();\n        //Blockly.Xml.domToWorkspace(dom, node.workspace);\n        createWorkspace(node, loadedXml);\n    }\n\n    RED.nodes.registerType('Blockly',{\n        category: 'function',\n        color: '#FFAAAA',       \n        defaults: {\n            // The generated Javascript code.\n            // Make sure we start without (generated) javascript code, because the Blockly workspace is also empty for new nodes.\n            // That way the (empty) Blockly workspace at startup is in sync with the (empty) Javascript tabsheet.\n            func: {value:\"\"},\n            workspaceXml: {value:\"<xml xmlns=\\\"https:\\/\\/developers.google.com\\/blockly\\/xml\\\"><\\/xml>\"}, // Needed for Blockly version \"5.20210325.1\". Can't be empty\n            outputs: {value:1}, // Standard field that will be used by Node-Red to draw N output ports in the flow editor,\n            timeout: {value:RED.settings.functionTimeout || 0},\n            blocklyConfig: {type: \"blockly-config\", required: false}, // No default value (see https://discourse.nodered.org/t/default-config-node/46773/9?u=bartbutenaers)\n            backpackContents: {value:[]},\n            // Use the noerr property to let Node-RED know whether the generated Javascript contains a syntax error or not.\n            // This way the flow editor knows whether a red triangle should be drawn for this node or not.\n            // The noerr property will be filled in the oneditsave, since it is useless to check the code for syntax errors every time the validator is called.\n            // Normally the generated function should never contain syntax errors, but due to an issue in the code generator in some block this might happen ...\n            noerr: {value:0,required:true, validate:function(v) { return !v; }},\n            name: {value:\"\"}\n        },\n        inputs:1,\n        outputs:1,\n        icon: \"font-awesome/fa-puzzle-piece\",\n        label: function() {\n            return this.name||\"Blockly\";\n        },\n        oneditprepare: function() {\n            var node = this;\n            \n            node.librariesLoaded = false;\n            node.previousEnableBackPack = \"none\";\n            node.isTrayOpen = false;\n\n            // Show a default timeout value for older nodes \n            if(node.timeout === null || node.timeout === \"\" || (typeof node.timeout === \"undefined\")) {\n                $(\"#node-input-timeout\").val(RED.settings.functionTimeout || 0);\n            }\n\n            $(\"#node-input-outputs\").spinner({\n                min:1,\n                change: function(event, ui) {\n                    var value = this.value;\n                    if (!value.match(/^\\d+$/)) { value = 1;  }\n                    else if (value < this.min) { value = this.min; }\n                    if (value !== this.value) { $(this).spinner(\"value\", value); }\n                    \n                    // Make sure the Blockly node_send and node_return_message blocks are always aware about the number of outputs\n                    Blockly.nodeOutputs = parseInt(value);\n                    \n                    var blocks = node.workspace.getAllBlocks();\n                    for(var i = 0; i < blocks.length; i++) {\n                        if (blocks[i].type === \"node_send\" || blocks[i].type === \"node_return_message\") {\n                            if( parseInt(blocks[i].getFieldValue('OUTPUT_NR')) > parseInt(value)) {\n                                alert(\"There are '\" + blocks[i].type.replace(/_/g, ' ') + \"' blocks available that use a higher output number\");\n                                break;\n                            }\n                        }\n                    }\n                }\n            });\n\n            // 4294967 is max in node.js timeout.\n            $(\"#node-input-timeout\").spinner({\n                min: 0,\n                max: 4294967,\n                change: function(event, ui) {\n                    var value = this.value;\n                    if(value == \"\"){\n                        value = 0;\n                    }\n                    else\n                    {\n                        value = parseInt(value);\n                    }\n                    value = isNaN(value) ? 1 : value;\n                    value = Math.max(value, parseInt($(this).attr(\"aria-valuemin\")));\n                    value = Math.min(value, parseInt($(this).attr(\"aria-valuemax\")));\n                    if (value !== this.value) { $(this).spinner(\"value\", value); }\n                }\n            });\n\n            node.aceEditor = RED.editor.createEditor({\n                id: 'aceDiv',\n                mode: 'ace/mode/nrjavascript', // serverside NodeRed editor\n                value: node.func,\n                readOnly: true,\n                renderValidationDecorations: \"on\" // See https://discourse.nodered.org/t/show-errors-in-ace-and-monaco-editor/48529/12?u=bartbutenaers\n            });\n            node.aceEditor.setFontSize(14); \n\n            // Jeff: create XML editor\n            node.aceXMLEditor = RED.editor.createEditor({\n                id: 'aceXMLDiv',\n                mode: 'ace/mode/xml',\n                value: node.workspaceXml,\n                readOnly: true\n            });\n            node.aceXMLEditor.setFontSize(12);\n            // Jeff: invoke when either fillAceXMLEditor triggered or loaded XML from library\n            node.aceXMLEditor.on(\"change\", function () {\n                var loadedXml = node.aceXMLEditor.getValue();\n                // Jeff: it seems everytime anything loads to the editor it removes the previous contents and then inject the new contents.\n                // so there are two changes. \n                if (loadedXml != \"\") {\n                    Blockly.nodeOutputs = parseInt($(\"#node-input-outputs\")[0].value);\n                    createWorkspace(node, loadedXml);\n                }\n            });\n\n            // Show three tabsheets\n            var tabs = RED.tabs.create({\n                id: \"node-blockly-tabs\",\n                onchange: function(tab) {\n                    // Show only the content (i.e. the children) of the selected tabsheet, and hide the others\n                    $(\"#node-blockly-tabs-content\").children().hide();\n                    $(\"#\" + tab.id).show();\n\n                    // We will also arrive here when addTab is being called.  In that case it has on use to continue...\n                    if (node.librariesLoaded) {\n                        // Every time the ace editor is displayed, the Javascript code should be regenerated (from the Blockly workspace);\n                        // and the xml editor should be refilled (from the Blockly workspace)\n                        if (tab.id === \"node-blockly-tab-javascript\") {\n                            fillAceXMLEditor(node);\n                            fillAceEditor(node);\n                        }\n                        if (tab.id === \"node-blockly-tab-xml\") {\n                            fillAceXMLEditor(node);\n                        }\n                        if (tab.id === \"node-blockly-tab-workspace\") {\n                            reloadBlockly(node);\n                        }\n                    }\n                }\n            });\n            tabs.addTab({\n                id: \"node-blockly-tab-workspace\",\n                label: \"Editor\"\n            });\n\n            // Put the expand button on top of the workspace tab\n            let expand_button = $('<div style=\"position: absolute; left: calc(100% - 20px - 5px); top: -1px; z-index: 99;\">');\n            expand_button.append($('<button id=\"blocklyExpandDiv\" class=\"red-ui-button red-ui-button-small\"><i class=\"fa fa-expand\"></i></button>'));\n            $('#red-ui-tab-node-blockly-tab-workspace').append(expand_button);\n\n            tabs.addTab({\n                id: \"node-blockly-tab-javascript\",\n                label: \"Generated Javascript\"\n            });\n            tabs.addTab({\n                id: \"node-blockly-tab-xml\",\n                label: \"Generated XML\"\n            });\n            \n            // Store the loaded config node id (temporarliy) in the node, because the blockly-node's config screen will\n            // be cleaned up before we navigate to the tray screen.  From then on the $(\"#node-input-blocklyConfig\") won't be accessible anymore...\n            // Don't use node.blocklyConfig for this purpose, because that need to be unchanged in case the \"Cancel\" button is clicked.\n            node.selectedConfigNodeId = $(\"#node-input-blocklyConfig\").val();\n\n            // Need to wait for it to be rendered before the sizing of the tabs can be properly calculated\n            setTimeout(function() {\n                tabs.resize();\n            }, 0);\n\n            RED.library.create({\n                url:\"blockly_functions\", // where to get the data from\n                type:\"Blockly\", // the type of object the library is for\n                // Jeff: load XML to aceXMLEditor instead aceEditor\n                editor:node.aceXMLEditor, // the field name the main text body goes to\n                mode:\"ace/mode/xml\",\n                fields:['name','outputs','timeout']\n            });\n            \n\n            // Display a tip if the Node-Red version is below 0.19.0\n            var versionParts = RED.settings.version.split('.');\n            if (versionParts[0] == 0 && versionParts[1] < 19) {\n                $(\"#tip-version\").show();\n            } else {\n                $(\"#tip-version\").hide();\n            }\n            \n            //Jeff: called when the expand button clicked\n            var expandTemplate = \n            '<!-- Blockly editor -->'+\n            '<div id=\"blocklyArea\" style=\"width: 100%; height: 100%; min-height:350px;\">'+\n                '<div id=\"blocklyDiv\"></div>'+\n            '</div>'+\n            '<div id=\"jsArea\" class=\"form-row node-text-editor-row\" style=\"width: 100%; height: 100%; min-height:350px; display: none;\">'+\n                '<div id=\"aceDiv\" style=\"width: 100%; height: 100%;\"></div>'+\n            '</div>';\n\n            var expandBlocklyHandler = function() {\n                return function(e) {\n                    e.preventDefault();\n                    RED.view.state(RED.state.EDITING);\n                    var trayOptions = {\n                        title: \"Blockly Workspace\",\n                        width: \"Infinity\",\n                        buttons: [\n                            {\n                                id: \"node-showBlocklyArea\",\n                                text: \"Back to Blockly Editor\",\n                                click: function() {\n                                    $(\"#jsArea\").css(\"display\",\"none\");\n                                    $(\"#blocklyArea\").css(\"display\",\"block\");\n                                    $(\"#node-showJSArea\").css(\"display\",\"block\");\n                                    $(\"#node-showBlocklyArea\").css(\"display\",\"none\");\n                                    var dom = Blockly.Xml.workspaceToDom(node.workspace);\n                                    var loadedXml = Blockly.Xml.domToPrettyText(dom);\n\n                                    createWorkspace(node, loadedXml);\n                                }\n                            },\n                            {\n                                id: \"node-showJSArea\",\n                                text: \"See Generated Javascript\",\n                                click: function() {\n                                    $(\"#blocklyArea\").css(\"display\",\"none\");\n                                    $(\"#jsArea\").css(\"display\",\"block\");\n                                    $(\"#node-showBlocklyArea\").css(\"display\",\"block\");\n                                    $(\"#node-showJSArea\").css(\"display\",\"none\");\n                                    Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n                                    var javascript = Blockly.JavaScript.workspaceToCode(node.workspace);\n                                    node.jseditor.setValue(javascript);\n                                    // Fix for clearSelection (see https://github.com/bartbutenaers/node-red-contrib-blockly/issues/74#issuecomment-862681796)\n                                    node.jseditor.moveCursorTo(0,0);\n                                }\n                            },\n                            {\n                                id: \"node-dialog-cancel\",\n                                text: RED._(\"common.label.cancel\"),\n                                click: function() {\n                                    var loadedXml = node.loadedXml;\n                                    node.isTrayOpen = false;\n                                    //Jeff: re-create workspace after RED.tray.close finished\n                                    RED.tray.close(() => createWorkspace(node, loadedXml));\n                                }\n                            },\n                            {\n                                id: \"node-dialog-ok\",\n                                text: RED._(\"common.label.done\"),\n                                class: \"primary\",\n                                click: function() {\n                                    var dom = Blockly.Xml.workspaceToDom(node.workspace);\n                                    var loadedXml = Blockly.Xml.domToPrettyText(dom);\n                                    node.isTrayOpen = false;\n                                    RED.tray.close(() => createWorkspace(node, loadedXml));\n                                }\n                            }\n                        ],\n                        resize: function(dimensions) {\n                            var height = $(\"#blocklyArea\").height();\n                            var width = $(\"#blocklyArea\").width();\n                            $(\"#blocklyDiv\").css(\"height\",height+\"px\");\n                            $(\"#blocklyDiv\").css(\"width\",width+\"px\");\n                            Blockly.svgResize(node.workspace);\n                            node.workspace.scrollCenter();\n                        },\n                        open: function(tray) {\n                            $(\"#node-showBlocklyArea\").css({\"float\":\"left\",\"display\":\"none\"});\n                            $(\"#node-showJSArea\").css(\"float\",\"left\");\n                            var trayBody = tray.find('.red-ui-tray-body');\n                            //var blocklyAreaContent = $('<div id=\"blocklyArea\" style=\"width: 100%; height: 100%; min-height:700px;\"></div>').appendTo(trayBody);\n                            //var blocklyDivContent = $('<div id=\"blocklyDiv\"></div>').appendTo(blocklyAreaContent);\n                            $(expandTemplate).appendTo(trayBody);\n                            //Jeff: load workspace to a temp XML\n                            var dom = Blockly.Xml.workspaceToDom(node.workspace);\n                            node.loadedXml = Blockly.Xml.domToPrettyText(dom);\n\n                            createWorkspace(node, node.loadedXml);\n                            node.jseditor = RED.editor.createEditor({\n                                id: 'aceDiv',\n                                mode: 'ace/mode/nrjavascript', // serverside NodeRed editor\n                                value: node.func,\n                                readOnly: true\n                            });\n                            node.jseditor.setFontSize(14); \n                        },\n                        close: function() {\n                            delete node.loadedXml;   \n                            node.jseditor.destroy();\n                            delete node.jseditor;\n                        },\n                        show: function() {\n\n                        }\n                    }\n                    node.isTrayOpen = true;\n                    RED.tray.show(trayOptions);\n                }\n            }\n\n            //Jeff: expand Blockly editing area\n            $(\"#blocklyExpandDiv\").on(\"click\", expandBlocklyHandler());\n            \n            // When a new config is selected, a new Blockly workspace should be drawn (with the new config settings)        \n            $(\"#node-input-blocklyConfig\").on('change', function(event) {\n                // Store the newly selected config node id (temporarliy) in the node, because the blockly-node's config screen will\n                // be cleaned up before we navigate to the tray screen.  From then on the $(\"#node-input-blocklyConfig\") won't be accessible anymore...\n                // Don't use node.blocklyConfig for this purpose, because that need to be unchanged in case the \"Cancel\" button is clicked.\n                node.selectedConfigNodeId = $(\"#node-input-blocklyConfig\").val();\n                \n                var counter = 0;\n                var language = \"en\";\n                var categories;\n\n                if (node.selectedConfigNodeId && node.selectedConfigNodeId !== \"_ADD_\") {\n                    var configNode = RED.nodes.node(node.selectedConfigNodeId);\n                    if (configNode) {\n                        if (configNode.language) {\n                            language = configNode.language;\n                        }\n                        \n                        // Only when the \"customize toolbox categories\" checkbox is enabled (in the config node screen), we will use the custom categories.\n                        if (configNode.customizeToolbox) {\n                            categories = configNode.categories;\n                        }\n                    }\n                }\n                                    \n                // Load all the files from the servers, as specified in the config node.\n                // This also includes the language files.  At the start we have loaded the en.js files, because we are sure that all sentences\n                // are available in english.  Afterwards other language files can be loaded, thus overwriting the english sentences.  By doing\n                // it that way, missing sentences in the translations are not a problem (since those sentences will simply be displayed in english).\n                // CAUTION: the \"blockly-contrib/npm/blockly/msg/en.js\" file contains a Blockly.Msg = {} , which means all previous loaded \n                // messages will be removed!\n                if (node.workspace) {\n                    // When there has been a previous workspace, show the content of that workspace.\n                    // Because that workspace might have changes (which have not been stored yet into node.workspaceXml), which need to be kept\n\n                    var dom = Blockly.Xml.workspaceToDom(node.workspace);\n                    node.workspaceXml = Blockly.Xml.domToPrettyText(dom);\n                }\n                loadResourcesFromServer(node, language, categories);\n            });\n            // This is being called by Node-RED also $(\"#node-input-blocklyConfig\").change();\n        },\n        oneditsave: function() {\n            var node = this;\n          \n            // Store the number of output ports in Blockly,  so the blocks can take that number into account (if required)\n            //Blockly.nodeOutputs = $(\"#node-input-outputs\").val(); \n  \n            // Generate JavaScript code from the workspace content, and store it in this node.\n            // That way it can be send to the server, where it will be executed in the sandbox.\n            Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n            node.func = Blockly.JavaScript.workspaceToCode(node.workspace);\n            \n            // Store the workspace content as an xml string (which will produce a minimal ugly string).\n            // To obtain a more readable (but larger) string, use Blockly.Xml.domToPrettyText instead.\n            var dom = Blockly.Xml.workspaceToDom(node.workspace);\n            node.workspaceXml = Blockly.Xml.domToPrettyText(dom); \n            \n            // When the generated code contains an error, store a 1 in node.noerr.  That way the validator (of the node.noerr property)\n            // can be used to show a red rectangle on the node in the flow editor.\n            // Note that the standard function-node uses node.aceEditor.getSession().getAnnotations() for this purpose.  However that \n            // seemed not to work here, when the JS editor tabsheet has not been opened.  In that case we get the errors of the previous\n            // JS code (that was loaded when the config screen opens).\n            // Therefore we will use the function node constructor:\n            try {\n                node.noerr = 0;\n                new Function(node.func);\n            }\n            catch(e) {\n                if (e instanceof SyntaxError) {\n                    node.noerr = 1;\n                }\n            }\n            \n            node.backpackContents = [];\n            if (node.backpack) {\n                // Store the current content of the backpack into the selected config node.\n                if (node.selectedConfigNodeId && node.selectedConfigNodeId !== \"_ADD_\") {\n                    var configNode = RED.nodes.node(node.selectedConfigNodeId);\n    \n                    if (configNode) {\n                        configNode.backpackContents = node.backpack.getContents();\n                        \n                        // Let Node-RED know that the config node has become dirty, so the \"Deploy\" button will become active\n                        // (because the user might only have changed the config node's backpack, and not changed this node)\n                        configNode.dirty = true;\n                        RED.nodes.dirty(true);\n                    }\n                }\n            }\n\n            cleanup(node);\n        },\n        oneditcancel: function() {\n            var node = this;\n            \n            cleanup(node);\n        },\n        oneditresize: function (size) {\n            var node = this;\n            \n            // Only execute this functionality as soon as the Blockly libraries have been loaded (i.e. the Blockly global variable exists)\n            if (window.Blockly) {\n                var height = $(\"#blocklyArea\").height();\n                var width = $(\"#blocklyArea\").width();\n                $(\"#blocklyDiv\").css(\"height\",height+\"px\");\n                $(\"#blocklyDiv\").css(\"width\",width+\"px\");\n                \n                if (node.workspace) {\n                    Blockly.svgResize(node.workspace);\n                    //node.workspace.scrollCenter();\n                }\n            }\n        }\n    });\n</script>\n\n<script type=\"text/html\" data-template-name=\"Blockly\">\n\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\" style=\"width:70%;\">\n    </div>\n    <div class=\"form-row\">\n        <label for=\"node-input-blocklyConfig\"><i class=\"fa fa-cog\"></i> Config</label>\n        <!-- Node-Red will replace this input element by a drop-down (with available OnVif device configurations) -->\n        <input type=\"text\" id=\"node-input-blocklyConfig\">\n    </div>\n    </br>\n    <div class=\"form-row\">\n        <!-- Three tabsheets -->\n        <ul style=\"background: #fff; min-width: 600px; margin-bottom: 20px;\" id=\"node-blockly-tabs\"></ul>\n    </div>\n    <div id=\"node-blockly-tabs-content\" style=\"min-height: 350px\">\n        <div id=\"node-blockly-tab-workspace\">\n            <div class=\"form-row\">\n                <!-- Blockly editor -->\n                <div id=\"blocklyArea\" style=\"width: 100%; height: 450px; min-height:350px;\">\n                    <div id=\"blocklyDiv\"></div>\n                </div>\n            </div>\n        </div>\n        <div id=\"node-blockly-tab-javascript\">\n            <div class=\"form-row node-text-editor-row\">\n                <!-- <div style=\"position: absolute; right:0; bottom:calc(100% + 3px);\"><button id=\"node-function-expand-js\" class=\"editor-button editor-button-small\"><i class=\"fa fa-expand\"></i></button></div>-->\n                <!-- Ace editor for generated Javascript code -->\n                <div id=\"aceDiv\" style=\"width: 100%; height: 450px; min-height:350px;\"></div>\n            </div>\n        </div>\n        <div id=\"node-blockly-tab-xml\">\n            <div class=\"form-row node-text-editor-row\">\n                <!-- <div style=\"position: absolute; right:0; bottom:calc(100% + 3px);\"><button id=\"node-function-expand-js\" class=\"editor-button editor-button-small\"><i class=\"fa fa-expand\"></i></button></div>-->\n                <!-- Ace XML editor for generated XML code -->\n                <div id=\"aceXMLDiv\" style=\"width: 100%; height: 450px; min-height:350px;\">\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <div class=\"form-row\" style=\"display: inline-block; margin-right: 50px;\">\n            <label for=\"node-input-outputs\"><i class=\"fa fa-random\"></i> Outputs</label>\n            <input id=\"node-input-outputs\" style=\"width: 60px;\" value=\"1\">\n        </div>\n        <div class=\"form-row\" style=\"display: inline-block;\">\n            <label for=\"node-input-timeout\"><i class=\"fa fa-clock-o\"></i> Timeout</label>\n            <input id=\"node-input-timeout\" style=\"width: 60px;\">\n        </div>\n    </div>\n    <div class=\"form-tips\" id=\"tip-version\" style=\"width: 100%;max-width: 100%;\" hidden>Tip: The 'get node property' block cannot be used, since Node-red version 0.19.0 is minimal required.</div>\n    </br>\n</script>\n\n<script type=\"text/html\" data-help-name=\"Blockly\">\n    <p>A visual programming interface, to make programming a function node easier. Just drag and drop <a target=\"_blank\" href=\"https://developers.google.com/blockly/\">Blockly</a> \n    blocks to build your program logic, without having to write the Javascript code yourself.  The generated javascript code will be run against the messages being received by the node.</p>\n    <p>The messages are passed in as a JavaScript object called <code>msg</code>.</p>\n    <p>By convention it will have a <code>msg.payload</code> property containing the body of the message.</p>\n    <p>The function is expected to return a message object (or multiple message objects), but can choose to return nothing in order to halt a flow.</p>\n    <p>See <a target=\"_blank\" href=\"https://github.com/bartbutenaers/node-red-contrib-blockly\">Github</a> for a basic introduction on writing functions with Blockly, or our \n    <a target=\"_blank\" href=\"https://github.com/bartbutenaers/node-red-contrib-blockly/wiki\">wiki</a> pages for tutorials.  And lot's of other Blockly documentation (tutorials, video's, ...) can be found all over the internet.</p>\n    <h3>Details</h3>\n    <p>The Blockly editor contains the basic blocks provided by Google.  In addition a number of extra blocks have been provided.  A number of those extra blocks allow to communicate with the Node-Red API, similar to a normal function node.</p>\n    <h3>CAUTION</h3>\n    <p>Blockly is 1-based while Javascript is 0-based, which means that Blockly starts counting from 0 in a loop.  The numbers are <strong>automatically decremented</strong> (-1) in the generated code.</p>\n</script>\n","output":"str","x":863,"y":1272,"wires":[["c6195f1bd32ccf46"]]},{"id":"c6195f1bd32ccf46","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_config.js","filename":"blockly_config.js","format":"javascript","syntax":"mustache","template":"/**\n * Copyright 2021 Bart Butenaers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n module.exports = function(RED) {\n    var settings = RED.settings;\n\n    function BlocklyConfigNode(config) {\n        RED.nodes.createNode(this, config);\n        //this.showTrashcan = config.showTrashcan;\n        //this.renderer = config.renderer;\n    }\n    \n    RED.nodes.registerType(\"blockly-config\", BlocklyConfigNode);\n}","output":"str","x":863,"y":1322,"wires":[["96fcf7073f38a445"]]},{"id":"96fcf7073f38a445","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly.js","filename":"blockly.js","format":"javascript","syntax":"mustache","template":"/**\n * Copyright 2018 Bart Butenaers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n \n// This code is copied from Node-Red's function node.\n// See https://github.com/node-red/node-red/blob/master/nodes/core/core/80-function.js\n// This means the code should be copied again, each time the function node changes.\n// That can be the case e.g. when the function node's API changes.\n// Some changes made to the original 80-function.js file:\n// - At the top, the 'path' and 'fs' npm libraries have been required.\n// - At the end of this file, a section has been added about RED.httpAdmin.get.\n// - At the end of this file, a blockly functions library has been specified.\n// - The function name is changed to BlocklyNode.\n// - The node is registered as RED.nodes.registerType(\"Blockly\",BlocklyNode);\n// - The variable node.ini will be an empty string because currently this node does only support the function node's \"on message\" tabsheet\n// - The variable node.fin will be an empty string because currently this node does only support the function node's \"on message\" tabsheet\n// - The variable node.libs will be an empty array because currently this node does not support the function node's external dependencies\n\nmodule.exports = function(RED) {\n    var util = require(\"util\");\n    var vm = require(\"vm\");\n    var acorn = require(\"acorn\");\n    var acornWalk = require(\"acorn-walk\");\n    var path = require(\"path\");\n    var fs = require(\"fs\");\n    \n    function sendResults(node,send,_msgid,msgs,cloneFirstMessage) {\n        if (msgs == null) {\n            return;\n        } else if (!util.isArray(msgs)) {\n            msgs = [msgs];\n        }\n        var msgCount = 0;\n        for (var m=0; m<msgs.length; m++) {\n            if (msgs[m]) {\n                if (!util.isArray(msgs[m])) {\n                    msgs[m] = [msgs[m]];\n                }\n                for (var n=0; n < msgs[m].length; n++) {\n                    var msg = msgs[m][n];\n                    if (msg !== null && msg !== undefined) {\n                        if (typeof msg === 'object' && !Buffer.isBuffer(msg) && !util.isArray(msg)) {\n                            if (msgCount === 0 && cloneFirstMessage !== false) {\n                                msgs[m][n] = RED.util.cloneMessage(msgs[m][n]);\n                                msg = msgs[m][n];\n                            }\n                            msg._msgid = _msgid;\n                            msgCount++;\n                        } else {\n                            var type = typeof msg;\n                            if (type === 'object') {\n                                type = Buffer.isBuffer(msg)?'Buffer':(util.isArray(msg)?'Array':'Date');\n                            }\n                            node.error(RED._(\"function.error.non-message-returned\",{ type: type }));\n                        }\n                    }\n                }\n            }\n        }\n        if (msgCount>0) {\n            send(msgs);\n        }\n    }\n\n    function createVMOpt(node, kind) {\n        var opt = {\n            filename: 'Function node'+kind+':'+node.id+(node.name?' ['+node.name+']':''), // filename for stack traces\n            displayErrors: true\n            // Using the following options causes node 4/6 to not include the line number\n            // in the stack output. So don't use them.\n            // lineOffset: -11, // line number offset to be used for stack traces\n            // columnOffset: 0, // column number offset to be used for stack traces\n        };\n        return opt;\n    }\n\n    function updateErrorInfo(err) {\n        if (err.stack) {\n            var stack = err.stack.toString();\n            var m = /^([^:]+):([^:]+):(\\d+).*/.exec(stack);\n            if (m) {\n                var line = parseInt(m[3]) -1;\n                var kind = \"body:\";\n                if (/setup/.exec(m[1])) {\n                    kind = \"setup:\";\n                }\n                if (/cleanup/.exec(m[1])) {\n                    kind = \"cleanup:\";\n                }\n                err.message += \" (\"+kind+\"line \"+line+\")\";\n            }\n        }\n    }\n\n    function BlocklyNode(n) {\n        RED.nodes.createNode(this,n);\n        var node = this;\n        node.name = n.name;\n        node.func = n.func;\n        node.outputs = n.outputs;\n        node.timeout = (n.timeout | 0)*1000;\n        if(node.timeout>0){\n            node.timeoutOptions = {\n                timeout:node.timeout,\n                breakOnSigint:true\n            }\n        }\n        node.ini = n.initialize ? n.initialize.trim() : \"\";\n        node.fin = n.finalize ? n.finalize.trim() : \"\";\n        node.libs = n.libs || [];\n\n        if (RED.settings.functionExternalModules !== true && node.libs.length > 0) {\n            throw new Error(RED._(\"function.error.externalModuleNotAllowed\"));\n        }\n\n        var functionText = \"var results = null;\"+\n            \"results = (async function(msg,__send__,__done__){ \"+\n                \"var __msgid__ = msg._msgid;\"+\n                \"var node = {\"+\n                    \"id:__node__.id,\"+\n                    \"name:__node__.name,\"+\n                    \"path:__node__.path,\"+\n                    \"outputCount:__node__.outputCount,\"+\n                    \"log:__node__.log,\"+\n                    \"error:__node__.error,\"+\n                    \"warn:__node__.warn,\"+\n                    \"debug:__node__.debug,\"+\n                    \"trace:__node__.trace,\"+\n                    \"on:__node__.on,\"+\n                    \"status:__node__.status,\"+\n                    \"send:function(msgs,cloneMsg){ __node__.send(__send__,__msgid__,msgs,cloneMsg);},\"+\n                    \"done:__done__\"+\n                \"};\\n\"+\n                node.func+\"\\n\"+\n            \"})(msg,__send__,__done__);\";\n        \n        var handleNodeDoneCall = true;\n\n        // Check to see if the Function appears to call `node.done()`. If so,\n        // we will assume it is well written and does actually call node.done().\n        // Otherwise, we will call node.done() after the function returns regardless.\n        if (/node\\.done\\s*\\(\\s*\\)/.test(functionText)) {\n            // We have spotted the code contains `node.done`. It could be in a comment\n            // so need to do the extra work to parse the AST and examine it properly.\n            acornWalk.simple(acorn.parse(functionText,{ecmaVersion: \"latest\"} ), {\n                CallExpression(astNode) {\n                    if (astNode.callee && astNode.callee.object) {\n                        if (astNode.callee.object.name === \"node\" && astNode.callee.property.name === \"done\") {\n                            handleNodeDoneCall = false;\n                        }\n                    }\n                }\n            })\n        }\n\n        var finScript = null;\n        var finOpt = null;\n        node.topic = n.topic;\n        node.outstandingTimers = [];\n        node.outstandingIntervals = [];\n        node.clearStatus = false;\n\n        var sandbox = {\n            console:console,\n            util:util,\n            Buffer:Buffer,\n            Date: Date,\n            RED: {\n                util: RED.util\n            },\n            __node__: {\n                id: node.id,\n                name: node.name,\n                path: node._path,\n                outputCount: node.outputs,\n                log: function() {\n                    node.log.apply(node, arguments);\n                },\n                error: function() {\n                    node.error.apply(node, arguments);\n                },\n                warn: function() {\n                    node.warn.apply(node, arguments);\n                },\n                debug: function() {\n                    node.debug.apply(node, arguments);\n                },\n                trace: function() {\n                    node.trace.apply(node, arguments);\n                },\n                send: function(send, id, msgs, cloneMsg) {\n                    sendResults(node, send, id, msgs, cloneMsg);\n                },\n                on: function() {\n                    if (arguments[0] === \"input\") {\n                        throw new Error(RED._(\"function.error.inputListener\"));\n                    }\n                    node.on.apply(node, arguments);\n                },\n                status: function() {\n                    node.clearStatus = true;\n                    node.status.apply(node, arguments);\n                }\n            },\n            context: {\n                set: function() {\n                    node.context().set.apply(node,arguments);\n                },\n                get: function() {\n                    return node.context().get.apply(node,arguments);\n                },\n                keys: function() {\n                    return node.context().keys.apply(node,arguments);\n                },\n                get global() {\n                    return node.context().global;\n                },\n                get flow() {\n                    return node.context().flow;\n                }\n            },\n            flow: {\n                set: function() {\n                    node.context().flow.set.apply(node,arguments);\n                },\n                get: function() {\n                    return node.context().flow.get.apply(node,arguments);\n                },\n                keys: function() {\n                    return node.context().flow.keys.apply(node,arguments);\n                }\n            },\n            global: {\n                set: function() {\n                    node.context().global.set.apply(node,arguments);\n                },\n                get: function() {\n                    return node.context().global.get.apply(node,arguments);\n                },\n                keys: function() {\n                    return node.context().global.keys.apply(node,arguments);\n                }\n            },\n            env: {\n                get: function(envVar) {\n                    var flow = node._flow;\n                    return flow.getSetting(envVar);\n                }\n            },\n            setTimeout: function () {\n                var func = arguments[0];\n                var timerId;\n                arguments[0] = function() {\n                    sandbox.clearTimeout(timerId);\n                    try {\n                        func.apply(node,arguments);\n                    } catch(err) {\n                        node.error(err,{});\n                    }\n                };\n                timerId = setTimeout.apply(node,arguments);\n                node.outstandingTimers.push(timerId);\n                return timerId;\n            },\n            clearTimeout: function(id) {\n                clearTimeout(id);\n                var index = node.outstandingTimers.indexOf(id);\n                if (index > -1) {\n                    node.outstandingTimers.splice(index,1);\n                }\n            },\n            setInterval: function() {\n                var func = arguments[0];\n                var timerId;\n                arguments[0] = function() {\n                    try {\n                        func.apply(node,arguments);\n                    } catch(err) {\n                        node.error(err,{});\n                    }\n                };\n                timerId = setInterval.apply(node,arguments);\n                node.outstandingIntervals.push(timerId);\n                return timerId;\n            },\n            clearInterval: function(id) {\n                clearInterval(id);\n                var index = node.outstandingIntervals.indexOf(id);\n                if (index > -1) {\n                    node.outstandingIntervals.splice(index,1);\n                }\n            }\n        };\n        if (util.hasOwnProperty('promisify')) {\n            sandbox.setTimeout[util.promisify.custom] = function(after, value) {\n                return new Promise(function(resolve, reject) {\n                    sandbox.setTimeout(function(){ resolve(value); }, after);\n                });\n            };\n            sandbox.promisify = util.promisify;\n        }\n\n        const moduleLoadPromises = [];\n\n        if (node.hasOwnProperty(\"libs\")) {\n            let moduleErrors = false;\n            var modules = node.libs;\n            modules.forEach(module => {\n                var vname = module.hasOwnProperty(\"var\") ? module.var : null;\n                if (vname && (vname !== \"\")) {\n                    if (sandbox.hasOwnProperty(vname) || vname === 'node') {\n                        node.error(RED._(\"function.error.moduleNameError\",{name:vname}))\n                        moduleErrors = true;\n                        return;\n                    }\n                    sandbox[vname] = null;\n                    var spec = module.module;\n                    if (spec && (spec !== \"\")) {\n                        moduleLoadPromises.push(RED.import(module.module).then(lib => {\n                            sandbox[vname] = lib.default;\n                        }).catch(err => {\n                            node.error(RED._(\"function.error.moduleLoadError\",{module:module.spec, error:err.toString()}))\n                            throw err;\n                        }));\n                    }\n                }\n            });\n            if (moduleErrors) {\n                throw new Error(RED._(\"function.error.externalModuleLoadError\"));\n            }\n        }\n\n\n        const RESOLVING = 0;\n        const RESOLVED = 1;\n        const ERROR = 2;\n        var state = RESOLVING;\n        var messages = [];\n        var processMessage = (() => {});\n\n        node.on(\"input\", function(msg,send,done) {\n            if(state === RESOLVING) {\n                messages.push({msg:msg, send:send, done:done});\n            }\n            else if(state === RESOLVED) {\n                processMessage(msg, send, done);\n            }\n        });\n        Promise.all(moduleLoadPromises).then(() => {\n            var context = vm.createContext(sandbox);\n            try {\n                var iniScript = null;\n                var iniOpt = null;\n                if (node.ini && (node.ini !== \"\")) {\n                    var iniText = `\n                    (async function(__send__) {\n                        var node = {\n                            id:__node__.id,\n                            name:__node__.name,\n                            path:__node__.path,\n                            outputCount:__node__.outputCount,\n                            log:__node__.log,\n                            error:__node__.error,\n                            warn:__node__.warn,\n                            debug:__node__.debug,\n                            trace:__node__.trace,\n                            status:__node__.status,\n                            send: function(msgs, cloneMsg) {\n                                __node__.send(__send__, RED.util.generateId(), msgs, cloneMsg);\n                            }\n                        };\n                        `+ node.ini +`\n                    })(__initSend__);`;\n                    iniOpt = createVMOpt(node, \" setup\");\n                    iniScript = new vm.Script(iniText, iniOpt);\n                    if(node.timeout>0){\n                        iniOpt.timeout = node.timeout;\n                        iniOpt.breakOnSigint = true;\n                    }\n                }\n                node.script = vm.createScript(functionText, createVMOpt(node, \"\"));\n                if (node.fin && (node.fin !== \"\")) {\n                    var finText = `(function () {\n                        var node = {\n                            id:__node__.id,\n                            name:__node__.name,\n                            path:__node__.path,\n                            outputCount:__node__.outputCount,\n                            log:__node__.log,\n                            error:__node__.error,\n                            warn:__node__.warn,\n                            debug:__node__.debug,\n                            trace:__node__.trace,\n                            status:__node__.status,\n                            send: function(msgs, cloneMsg) {\n                                __node__.error(\"Cannot send from close function\");\n                            }\n                        };\n                        `+node.fin +`\n                    })();`;\n                    finOpt = createVMOpt(node, \" cleanup\");\n                    finScript = new vm.Script(finText, finOpt);\n                    if(node.timeout>0){\n                        finOpt.timeout = node.timeout;\n                        finOpt.breakOnSigint = true;\n                    }\n                }\n                var promise = Promise.resolve();\n                if (iniScript) {\n                    context.__initSend__ = function(msgs) { node.send(msgs); };\n                    promise = iniScript.runInContext(context, iniOpt);\n                }\n\n                processMessage = function (msg, send, done) {\n                    var start = process.hrtime();\n                    context.msg = msg;\n                    context.__send__ = send;\n                    context.__done__ = done;\n                    var opts = {};\n                    if (node.timeout>0){\n                        opts = node.timeoutOptions;\n                    }\n                    node.script.runInContext(context);\n                    context.results.then(function(results) {\n                        sendResults(node,send,msg._msgid,results,false);\n                        if (handleNodeDoneCall) {\n                            done();\n                        }\n\n                        var duration = process.hrtime(start);\n                        var converted = Math.floor((duration[0] * 1e9 + duration[1])/10000)/100;\n                        node.metric(\"duration\", msg, converted);\n                        if (process.env.NODE_RED_FUNCTION_TIME) {\n                            node.status({fill:\"yellow\",shape:\"dot\",text:\"\"+converted});\n                        }\n                    }).catch(err => {\n                        if ((typeof err === \"object\") && err.hasOwnProperty(\"stack\")) {\n                            //remove unwanted part\n                            var index = err.stack.search(/\\n\\s*at ContextifyScript.Script.runInContext/);\n                            err.stack = err.stack.slice(0, index).split('\\n').slice(0,-1).join('\\n');\n                            var stack = err.stack.split(/\\r?\\n/);\n\n                            //store the error in msg to be used in flows\n                            msg.error = err;\n\n                            var line = 0;\n                            var errorMessage;\n                            if (stack.length > 0) {\n                                while (line < stack.length && stack[line].indexOf(\"ReferenceError\") !== 0) {\n                                    line++;\n                                }\n\n                                if (line < stack.length) {\n                                    errorMessage = stack[line];\n                                    var m = /:(\\d+):(\\d+)$/.exec(stack[line+1]);\n                                    if (m) {\n                                        var lineno = Number(m[1])-1;\n                                        var cha = m[2];\n                                        errorMessage += \" (line \"+lineno+\", col \"+cha+\")\";\n                                    }\n                                }\n                            }\n                            if (!errorMessage) {\n                                errorMessage = err.toString();\n                            }\n                            done(errorMessage);\n                        }\n                        else if (typeof err === \"string\") {\n                            done(err);\n                        }\n                        else {\n                            done(JSON.stringify(err));\n                        }\n                    });\n                }\n\n                node.on(\"close\", function() {\n                    if (finScript) {\n                        try {\n                            finScript.runInContext(context, finOpt);\n                        }\n                        catch (err) {\n                            node.error(err);\n                        }\n                    }\n                    while (node.outstandingTimers.length > 0) {\n                        clearTimeout(node.outstandingTimers.pop());\n                    }\n                    while (node.outstandingIntervals.length > 0) {\n                        clearInterval(node.outstandingIntervals.pop());\n                    }\n                    if (node.clearStatus) {\n                        node.status({});\n                    }\n                });\n\n                promise.then(function (v) {\n                    var msgs = messages;\n                    messages = [];\n                    while (msgs.length > 0) {\n                        msgs.forEach(function (s) {\n                            processMessage(s.msg, s.send, s.done);\n                        });\n                        msgs = messages;\n                        messages = [];\n                    }\n                    state = RESOLVED;\n                }).catch((error) => {\n                    messages = [];\n                    state = ERROR;\n                    node.error(error);\n                });\n\n            }\n            catch(err) {\n                // eg SyntaxError - which v8 doesn't include line number information\n                // so we can't do better than this\n                updateErrorInfo(err);\n                node.error(err);\n            }\n        }).catch(err => {\n            node.error(RED._(\"function.error.externalModuleLoadError\"));\n        });\n    }\n    \n    RED.nodes.registerType(\"Blockly\",BlocklyNode, {\n        dynamicModuleList: \"libs\"\n    });\n    RED.library.register(\"blockly_functions\");\n\n    var blocklyNpmPaths = new Map();\n\n    // Make all the static NPM modules resources from this node public available\n    RED.httpAdmin.get('/blockly-contrib/npm/:package/*', function(req, res) {\n        var requestedFilePath;\n        \n        // When the npm package name contains a path separator (e.g. @blockly/plugin-workspace-search) then the frontend will\n        // have replaced that separator by the string \"___SEPARATOR___\".  So we need to replace \"___SEPARATOR___\" here again by \n        // the path separator (which depends on the OS this node is running on).\n        // See https://github.com/bartbutenaers/node-red-contrib-blockly/issues/101\n        req.params.package = req.params.package.replace(\"___SEPARATOR___\", path.sep);\n\n        // Try to get the npm package path from the cache\n        var npmPackagePath = blocklyNpmPaths.get(req.params.package);\n        \n        if (!npmPackagePath) {\n            try {\n                // Try to find the path of the installed NPM package.\n                // Note that this only works for modules that have an entrypoint (main) in their package.json file...\n                // See https://github.com/nodejs/node/issues/29549#issuecomment-531411955\n                npmPackagePath = require.resolve(req.params.package);\n            }\n            catch(err) {\n                // Do nothing: error logged below ...\n            }\n            \n            // TODO add a \"main\" entrypoint in the blockly node package.json file, and remove this fix !!!!!!!!!!!!!\n            if (req.params.package == \"node-red-contrib-blockly\") {\n                npmPackagePath = __dirname;\n            }\n            else {\n                if (npmPackagePath) {\n                    // Note that the req.params.package can contain a slash (e.g. the NPM package @blockly/field-date), which need\n                    // to be replaced by the path separator of the current OS.                    \n                    var packageName = req.params.package.replace(\"/\", path.sep);\n                    \n                    // Make sure the packageName refers to the root folder of the package, because all paths in the config node \n                    // editable list are relative to that root path.  Indeed require.resolve sometimes e.g. contains the path to an \n                    // index.js or some other entry point in the package package.json file.  So remove that last part ...\n                    packageName = path.sep + packageName + path.sep;\n                    npmPackagePath = npmPackagePath.split(packageName)[0] + path.sep + packageName;\n\n                    // Cache the NPM package path\n                    blocklyNpmPaths.set(req.params.package, npmPackagePath);\n                }\n                else {\n                    console.log(\"The npm package \" + req.params.package + \" is not installed (but required via the Blockly config node)\");\n                    res.writeHead(404);\n                    return res.end(\"NPM package not found.\");\n                }\n            }\n        }\n        \n        // The wildcard * can contain multiple path levels (e.g. a/b/c/d), which represents the relate file path (in the NPM package folder)\n        var relativePath = req.params[0];\n        \n        var requestedFilePath = path.join(npmPackagePath, relativePath);\n\n        if (!fs.existsSync(requestedFilePath)) {\n            console.log(\"The NPM file path \" + requestedFilePath + \" does not exist\");\n            res.writeHead(404);\n            return res.end(\"NPM file not found.\");\n        }\n        \n        // Send the requested file to the client\n        res.sendFile(requestedFilePath)\n    });\n    \n    // Make all the static local filesystem resources from this node public available\n    RED.httpAdmin.get('/blockly-contrib/file/*', function(req, res) {\n        // The wildcard * can contain multiple path levels (e.g. a/b/c/d), which represents the absolute file path (in the filesystem)\n        var absolutePath = req.params[0];\n        \n        if (!fs.existsSync(absolutePath)) {\n            console.log(\"The local file path \" + absolutePath + \" does not exist\");\n            res.writeHead(404);\n            return res.end(\"Local file not found.\");\n        }\n        \n        // Send the requested file to the client\n        res.sendFile(absolutePath)\n    });\n}\n","output":"str","x":863,"y":1372,"wires":[["ce24466236067a91"]]},{"id":"ce24466236067a91","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"bufferBlocksCodeGen.js","filename":"lib/buffer/bufferBlocksCodeGen.js","format":"javascript","syntax":"mustache","template":"Blockly.JavaScript['buffer_from_string'] = function(block) {\n  const string_input = Blockly.JavaScript.valueToCode(block, 'STRING_INPUT', Blockly.JavaScript.ORDER_ATOMIC) || '\"\"';\n  const encoding = block.getFieldValue('ENCODING');\n  const code = 'Buffer.from(' + string_input + ', \"' + encoding + '\")';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_to_string'] = function(block) {\n  const buffer_input = Blockly.JavaScript.valueToCode(block, 'BUFFER_INPUT', Blockly.JavaScript.ORDER_ATOMIC);\n  const encoding = block.getFieldValue('ENCODING');\n  const code = buffer_input + '.toString(\"' + encoding + '\")';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_length'] = function(block) {\n  const buffer_input = Blockly.JavaScript.valueToCode(block, 'BUFFER_INPUT', Blockly.JavaScript.ORDER_ATOMIC);\n  const code = buffer_input + '.length';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_alloc'] = function(block) {\n  const length = Blockly.JavaScript.valueToCode(block, 'LENGTH', Blockly.JavaScript.ORDER_ATOMIC);\n  const code = 'Buffer.alloc(' + length + ')';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_fill'] = function(block) {\n  const buffer_input = Blockly.JavaScript.valueToCode(block, 'BUFFER_INPUT', Blockly.JavaScript.ORDER_ATOMIC);\n  const fill_value = Blockly.JavaScript.valueToCode(block, 'FILL_VALUE', Blockly.JavaScript.ORDER_ATOMIC) || 0;\n  const code = buffer_input + '.fill(' + fill_value + ');\\n';\n  return code;\n};\n\nBlockly.JavaScript['buffer_check'] = function(block) {\n  const input_object = Blockly.JavaScript.valueToCode(block, 'INPUT', Blockly.JavaScript.ORDER_ATOMIC);\n  const code = 'Buffer.isBuffer(' + input_object + ')';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_copy'] = function(block) {\n  const buffer_source = Blockly.JavaScript.valueToCode(block, 'BUFFER_SOURCE', Blockly.JavaScript.ORDER_ATOMIC);\n  const buffer_destination = Blockly.JavaScript.valueToCode(block, 'BUFFER_DESTINATION', Blockly.JavaScript.ORDER_ATOMIC);\n  const code = buffer_source + '.copy(' + buffer_destination + ');\\n';\n  return code;\n};\n\nBlockly.JavaScript['buffer_concatenate'] = function(block) {\n  const buffer_first = Blockly.JavaScript.valueToCode(block, 'BUFFER_FIRST', Blockly.JavaScript.ORDER_ATOMIC);\n  const buffer_second = Blockly.JavaScript.valueToCode(block, 'BUFFER_SECOND', Blockly.JavaScript.ORDER_ATOMIC);\n  const code = 'Buffer.concat([' + buffer_first + ', ' + buffer_second + '])';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_set_index'] = function(block) {\n  var   index = Blockly.JavaScript.valueToCode(block, 'INDEX', Blockly.JavaScript.ORDER_ATOMIC) || 1;\n  //console.log(index);\n  const buffer = Blockly.JavaScript.valueToCode(block, 'BUFFER', Blockly.JavaScript.ORDER_ATOMIC);\n  var   value = Blockly.JavaScript.valueToCode(block, 'VALUE', Blockly.JavaScript.ORDER_ATOMIC);\n\n  // Get the data type checks offered by the block that is connected to our VALUE field \n  var targetCheck = block.getInput('VALUE').connection.targetConnection.getCheck();\n\n  // Find the type of value that has been used as input.\n  // See https://groups.google.com/g/blockly/c/9fEPSGFarNM\n // Find the type of value that has been used as input.\n  // See https://groups.google.com/g/blockly/c/9fEPSGFarNM\n  var dataType = null;\n  if (targetCheck && Array.isArray(targetCheck) && targetCheck.length === 1) {\n     dataType = targetCheck[0];\n  }\n      \n  if ((dataType === null) || ((dataType == 'String') && (value.charAt(0) == '(') && (value.charAt(value.length - 1) == ')') )) {\n    // We assume the input is a variable\n    \n    // Let Blockly generate a function 'convertValueToByte' (shared by all buffer_set_index blocks that have a variable as input).\n    // Blockly will generate this function once, since all buffer_set_byte blocks will register the same name, thus overwriting each others function...\n    var functionName = Blockly.JavaScript.provideFunction_(\n      'convertValueToByte',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + '(value) {',\n       '  if (isNaN(value)) {',\n       '    return value.charCodeAt(0);',\n       '  } else {',\n       '    if (Buffer.isBuffer(value)) {',\n       '      return value[0];',\n       '    } else {',\n       //JS thinks a single \" \" is !isNan so we need to treat it as a special case\n       '      if (value == \" \") {',\n       '        return value.charCodeAt(0);',\n       '      } else {',\n       '        return Math.min(Math.max(value, 0),255);',\n       '      }',\n       '    }',\n       '  }',\n       '}']);\n\n    // Call the same function for every buffer_set_byte block\n    var code = buffer + '[' + index + ' - 1] = ' + functionName + '(' + value + ');\\n';\n    return code;\n  }\n\n     \n  switch (dataType) {\n    case \"Number\":\n      value = Math.min(Math.max(value, 0),255);\n      break;\n    case \"String\":\n      // Get the first character of the input string\n        value = value.replace(/^'(.*)'$/, '$1');  //remove any quotes \n        value = value.charCodeAt(0);\n      break;\n    case \"Buffer\":\n      // Get the first element from the input buffer\n      value = value + '[0]';\n      break;\n  }\n\n  var code = buffer + '[' + index + ' - 1] = ' + value + ';\\n';\n  return code;\n};\n\nBlockly.JavaScript['buffer_get_index'] = function(block) {\n  var   index = Blockly.JavaScript.valueToCode(block, 'INDEX', Blockly.JavaScript.ORDER_ATOMIC) || 1;\n  const buffer = Blockly.JavaScript.valueToCode(block, 'BUFFER', Blockly.JavaScript.ORDER_ATOMIC);\n\n  const code = buffer + '[' + index + ' - 1]';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_byte'] = function(block) {\n  const value = block.getFieldValue('BYTE_VALUE');\n  const code = 'Buffer.alloc(1, ' + value + ')';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['buffer_empty'] = function(block) {\n  const code = 'Buffer.alloc(0)';\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n","output":"str","x":863,"y":1422,"wires":[["346b661e8109de7c"]]},{"id":"346b661e8109de7c","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"bufferBlocksDefs.js","filename":"lib/buffer/bufferBlocksDefs.js","format":"javascript","syntax":"mustache","template":"Blockly.Blocks['buffer_from_string'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_from_string\",\n            \"message0\": Blockly.Msg.BUFFER_FROM_STRING,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"STRING_INPUT\",\n                    \"check\": \"String\"\n                },\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"ENCODING\",\n                    \"options\": [[\"UTF8\"   , \"utf8\"   ], \n                                [\"ASCII\"  , \"ascii\"  ], \n                                [\"UTF161E\", \"utf16le\"], \n                                [\"UCS2\"   , \"ucs2\"   ], \n                                [\"BASE64\" , \"base64\" ],\n                                [\"LATIN1\" , \"latin1\" ],\n                                [\"HEX\"    , \"hex\"    ]]\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Buffer',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_FROM_STRING_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_to_string'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_to_string\",\n            \"message0\": Blockly.Msg.BUFFER_TO_STRING,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_INPUT\",\n                    \"check\": \"Buffer\"\n                },\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"ENCODING\",\n                    \"options\": [[\"UTF8\"   , \"utf8\"   ], \n                                [\"ASCII\"  , \"ascii\"  ], \n                                [\"UTF161E\", \"utf16le\"], \n                                [\"UCS2\"   , \"ucs2\"   ], \n                                [\"BASE64\" , \"base64\" ],\n                                [\"LATIN1\" , \"latin1\" ],\n                                [\"HEX\"    , \"hex\"    ]]\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'String',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_TO_STRING_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_length'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_length\",\n            \"message0\": Blockly.Msg.BUFFER_LENGTH,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_INPUT\",\n                    \"check\": \"Buffer\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Number',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_LENGTH_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_alloc'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_alloc\",\n            \"message0\": Blockly.Msg.BUFFER_ALLOC,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"LENGTH\",\n                    \"check\": \"Number\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Buffer',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_ALLOC_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_fill'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_fill\",\n            \"message0\": Blockly.Msg.BUFFER_FILL,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_INPUT\",\n                    \"check\": \"Buffer\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"FILL_VALUE\",\n                    \"check\": [\"String\", \"Buffer\", \"Number\"]\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_FILL_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_check'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_check\",\n            \"message0\": Blockly.Msg.BUFFER_CHECK,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"INPUT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Boolean',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_CHECK_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_copy'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_copy\",\n            \"message0\": Blockly.Msg.BUFFER_COPY,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_SOURCE\",\n                    \"check\": \"Buffer\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_DESTINATION\",\n                    \"check\": \"Buffer\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_COPY_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_concatenate'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_concatenate\",\n            \"message0\": Blockly.Msg.BUFFER_CONCATENATE,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_FIRST\",\n                    \"check\": \"Buffer\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER_SECOND\",\n                    \"check\": \"Buffer\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Buffer',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_CONCATENATE_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\n// TODO check in generator if byte value is between 0 and 255\nBlockly.Blocks['buffer_set_index'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_set_index\",\n            \"message0\": Blockly.Msg.BUFFER_SET_INDEX,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"INDEX\",\n                    \"check\": \"Number\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER\",\n                    \"check\": \"Buffer\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"VALUE\",\n                    \"check\": [\"Number\", \"String\", \"Buffer\"]\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_SET_INDEX_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_get_index'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_get_index\",\n            \"message0\": Blockly.Msg.BUFFER_GET_INDEX,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"INDEX\",\n                    \"check\": \"Number\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"BUFFER\",\n                    \"check\": \"Buffer\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": null,\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_GET_INDEX_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_byte'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_byte\",\n            \"message0\": Blockly.Msg.BUFFER_BYTE,\n            \"args0\": [\n                {\n                    \"type\": \"field_number\",\n                    \"name\": \"BYTE_VALUE\",\n                    \"precision\": 1,\n                    \"min\": 0,\n                    \"max\": 255\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Buffer',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_BYTE_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['buffer_empty'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"buffer_empty\",\n            \"message0\": Blockly.Msg.BUFFER_EMPTY,\n            \"output\": 'Buffer',\n            \"colour\": \"#DF6C06\",\n            \"tooltip\": Blockly.Msg.BUFFER_EMPTY_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n","output":"str","x":863,"y":1472,"wires":[["7fb6c385de70eef7"]]},{"id":"7fb6c385de70eef7","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"dateTimeBlocksCodeGen.js","filename":"lib/datetime/dateTimeBlocksCodeGen.js","format":"javascript","syntax":"mustache","template":"Blockly.JavaScript['datetime_input'] = function(block) {\n    const date = block.getFieldValue('DATE');\n    \n    // The Blockly field_date block returns a date with format yyyy-mm-dd, which can be passed directly to the Date constructor\n    var code = 'new Date(' + date + ')';\n    \n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['datetime_timestamp'] = function (block) {\n    // In the old version there was no timezone, so it was UTC by default\n    const format = block.getFieldValue('TIMEZONE') || \"utc\";\n    \n    var code;\n    \n    switch (format) {\n        case \"utc\":\n            code = 'new Date().getTime()';\n            break;\n        case \"local\":\n            code = 'new Date().getTime() - new Date().getTimezoneOffset() * 60000';\n            break;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_ATOMIC]; \n};\n\nBlockly.JavaScript['datetime_convert_from_date'] = function (block) {\n    const value = Blockly.JavaScript.valueToCode(block, 'INPUT', Blockly.JavaScript.ORDER_ATOMIC);\n    const format = block.getFieldValue('FORMAT');\n    \n    // Convert the language (e.g. 'en') from the node editor dropdown to e.g. 'en-EN'.\n    // TODO check if this is correctly ???\n    var language = Blockly.blocklyEditorLanguage + '-' + Blockly.blocklyEditorLanguage.toUpperCase();\n\n    var code;\n\n    switch (format) {\n        case 'year':\n            code = 'new Date(' + value + ').getFullYear()';\n            break;\n        case 'month':\n            // First month will be 1 (instead of 0), since Blockly is 1-based (unlike Javascript which is 0-based)\n            code = '(new Date(' + value + ').getMonth() + 1)';\n            break;\n        case 'day':\n            code = 'new Date(' + value + ').getDate()';\n            break;\n        case 'hour':\n            code = 'new Date(' + value + ').getUTCHours()';\n            break;\n        case 'min':\n            code = '(new Date(' + value + ').getMinutes())';\n            break;\n        case 'sec':\n            code = 'new Date(' + value + ').getSeconds()';\n            break;\n        case 'msec':\n            code = 'new Date(' + value + ').getMilliseconds()';\n            break;\n        case 'msec':\n            code = 'new Date(' + value + ').getMilliseconds()';\n            break;\n        case 'msec':\n            code = 'new Date(' + value + ').getMilliseconds()';\n            break;\n        case 'text':\n            // Create a human readable text like 'Sat 8 Sep 2018 22:45'\n            code = 'new Date(' + value + ').toLocaleDateString(\"en-EN\", {weekday: \"short\", day: \"numeric\", month: \"short\", year: \"numeric\", hour:\"numeric\", minute:\"numeric\", timeZone: \"UTC\", hour12: false}).replace(/,/g, \"\")';\n            break;\n        case 'full_date':\n            code = 'new Date(' + value + ').toISOString().replace(\"T\", \" \").replace(\"Z\", \"\")';\n            break;\n        case 'month_name':\n            code = 'new Date(' + value + ').toLocaleDateString(\"en-EN\", {month: \"long\", timeZone: \"UTC\"})';\n            break;                         \n        case 'day_name':\n            code = 'new Date(' + value + ').toLocaleDateString(\"en-EN\", {weekday: \"long\", timeZone: \"UTC\"})';\n            break;             \n        case 'dayofweek':\n            // Normally Sunday is day 0, but since Blockly is 1-based we will increment the day number with 1\n            code = 'new Date(' + value + ').getDay() + 1';\n            break;            \n        case 'number':\n            // The number of milliseconds since 1 January 1970 00:00:00\n            code = 'new Date(' + value + ').getTime()';\n            break;\n    }\n\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\n/* The generated function in this block is not ready yet\nBlockly.JavaScript['datetime_format'] = function (block) {\n    const input = Blockly.JavaScript.valueToCode(block, \"INPUT\", Blockly.JavaScript.ORDER_NONE);\n    const format = Blockly.JavaScript.valueToCode(block, \"FORMAT\", Blockly.JavaScript.ORDER_NONE);\n    \n    // Generate a function that can format the date, which is not available in Javascript ...\n    // We could avoid this e.g. by calling a library (like Moment.js).  However to be able to call that functionality from \n    // our sandbox, we should do a couple of things:\n    // - To be able to simply generate a 'require(moment);' in our code, the user should manually add the 'moment' node to \n    //   his Node-RED settings file.  Don't think that is user-friendly, especially for novice users ...\n    // - To avoid the user having to update his settings file, we could:\n    //       * Add the 'moment' node as an automatic dependency for the blockly node.\n    //       * Do a 'require(moment);' in our blockly node.\n    //       * Add a 'moment' function to our sandbox, so it becomes automatically available in the generated code.\n    //   This will work fine until the user copies the code to a function node.  Since the function node sandbox doesn't\n    //   contain the 'moment' function, it will give syntax errors.  This will be very confusing for novice users.\n    // Therefore I have decided to generate a function that contains the required logic, so the generated code will become longer.\n    // See https://weblog.west-wind.com/posts/2008/Mar/18/A-simple-formatDate-function-for-JavaScript\n    var functionCode = ['function formatDate(date, format) {',\n                        '  var month = date.getMonth() + 1;', // Month is zero-based\n                        '  var year = date.getFullYear();',\n                        '  var hours = date.getHours();',\n                        '  format = format.replace(\"MM\",(\"0\" + month).substr(-2));', \n                        '  format = format.replace(\"yyyy\",year.toString());',\n                        '  format = format.replace(\"yy\",year.toString().substr(2,2));',\n                        '  format = format.replace(\"dd\",(\"0\" + date.getDate()).substr(-2));',\n                        '  format = format.replace(\"t\",(hours > 11) ? \"pm\" : \"am\");',\n                        '  format = format.replace(\"HH\",(\"0\" + hours).substr(-2));',\n                        '  if (hours > 12) hours = hours - 12;',\n                        '  if (hours === 0) hours = 12;',\n                        '  format = format.replace(\"hh\",(\"0\" + hours).substr(-2));',     \n                        '  format = format.replace(\"mm\",(\"0\" + date.getMinutes()).substr(-2));',\n                        '  format = format.replace(\"ss\",(\"0\" + date.getSeconds()).substr(-2));',\n                        '  return format;',\n                        '}'];\n    Blockly.JavaScript.provideFunction_('formatDate', functionCode);\n    \n    var code = 'formatDate(' + input + ' ,' + format + ')';\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n*/\n","output":"str","x":863,"y":1522,"wires":[["5606d0fd0cdc9509"]]},{"id":"5606d0fd0cdc9509","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"dateTimeBlocksDefs.js","filename":"lib/datetime/dateTimeBlocksDefs.js","format":"javascript","syntax":"mustache","template":"// The field_date is in a separate npm module (https://www.npmjs.com/package/@blockly/field-date)\nBlockly.Blocks['datetime_input'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"datetime_get\",\n            \"message0\": Blockly.Msg.DATETIME_INPUT,\n            \"args0\": [\n                {\n                    \"type\": \"field_date\",\n                    //\"date\": \"2020-02-20\",\n                    \"name\": \"DATE\"\n                }\n            ],\n            \"output\": \"Date\",\n            \"colour\": \"#D6316B\",\n            \"tooltip\": Blockly.Msg.DATETIME_INPUT_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nBlockly.Blocks['datetime_timestamp'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"datetime_timestamp\",\n            \"message0\": Blockly.Msg.DATETIME_TIMESTAMP,\n            \"args0\": [\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"TIMEZONE\",\n                    \"options\": [[Blockly.Msg.DATETIME_UTC  , 'utc'   ],\n                                [Blockly.Msg.DATETIME_LOCAL, 'local']]\n                }\n            ],\n            \"output\": \"Number\",\n            \"colour\": \"#D6316B\",\n            \"tooltip\": Blockly.Msg.DATETIME_TIMESTAMP_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nBlockly.Blocks['datetime_convert_from_date'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"datetime_convert_from_date\",\n            \"message0\": Blockly.Msg.DATETIME_CONVERT_FROM_DATE,\n            \"args0\": [\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"FORMAT\",\n                    \"options\": [[Blockly.Msg.DATETIME_CONVERT_FROM_DATE_YEAR        , 'year'      ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH       , 'month'     ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY         , 'day'       ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_HOUR        , 'hour'      ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_MIN         , 'min'       ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_SEC         , 'sec'       ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_MSEC        , 'msec'      ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_TEXT        , 'text'      ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_FULL        , 'full_date' ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH_NAME  , 'month_name'],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_NAME    , 'day_name'  ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_OF_WEEK , 'dayofweek' ],\n                                [Blockly.Msg.DATETIME_CONVERT_FROM_DATE_NR          , 'number'    ]]\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"INPUT\"\n                }\n            ],\n            \"output\": null,\n            \"colour\": '#D6316B',\n            \"tooltip\": Blockly.Msg.DATETIME_CONVERT_FROM_DATE_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    },\n};\n\n/* The generated function in this block is not ready yet\nBlockly.Blocks['datetime_format'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"datetime_format\",\n            \"message0\": Blockly.Msg.DATETIME_FORMAT,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"INPUT\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"FORMAT\",\n                    \"check\": \"String\"\n                },\n            ],\n            \"inputsInline\": true,\n            \"output\": null,\n            \"colour\": '#D6316B',\n            \"tooltip\": Blockly.Msg.DATETIME_FORMAT_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n*/\n","output":"str","x":863,"y":1572,"wires":[["d820da8dcc99360e"]]},{"id":"d820da8dcc99360e","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"en.js","filename":"messages/en.js","format":"javascript","syntax":"mustache","template":"// =========================================================================================\n// Node-RED blocks\n// =========================================================================================\nBlockly.Msg.NODE_OBJECT_GET_JSON = \"%1 %2 property %3\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET_TOOLTIP = \"Get a property of an object.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE_TOOLTIP = \"Remove a property of an object.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS_TOOLTIP = \"Check whether an object has a property.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET = \"get\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE = \"remove\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS = \"has\";\nBlockly.Msg.NODE_OBJECT_GET_WARNING = \"Make sure property variable does not return a nested value such as foo.bar.\";\nBlockly.Msg.NODE_OBJECT_SET_JSON = \"set %1 property %2 to %3\";\nBlockly.Msg.NODE_OBJECT_SET_JSON_TOOLTIP = \"Set a property of an object.\";\nBlockly.Msg.NODE_OBJECT_SET_WARNING = \"Nested properties can only be set with string literals.\";\nBlockly.Msg.NODE_LOG = \"log text %1 with %2 level\";\nBlockly.Msg.NODE_LOG_TOOLTIP = \"Log via the Node-RED function API.\";\nBlockly.Msg.NODE_LOG_LOG = \"log\";\nBlockly.Msg.NODE_LOG_WARNING = \"warning\";\nBlockly.Msg.NODE_LOG_ERROR = \"error\";\nBlockly.Msg.NODE_LOG_DEBUG = \"debug\";\nBlockly.Msg.NODE_LOG_TRACE = \"trace\";\nBlockly.Msg.NODE_MSG = \"msg\";\nBlockly.Msg.NODE_MSG_TOOLTIP = \"Get the Node-RED input message.\";\nBlockly.Msg.NODE_REMOVE_STATUS = \"remove node status\";\nBlockly.Msg.NODE_REMOVE_STATUS_TOOLTIP = \"Remove the node status via the Node-RED function API.\";\nBlockly.Msg.NODE_CLONE = \"clone %1\";\nBlockly.Msg.NODE_CLONE_TOOLTIP = \"Clone the message via the Node-RED function API.\";\nBlockly.Msg.NODE_STATUS = \"set node status to text %1 to color %2 and shape %3\";\nBlockly.Msg.NODE_STATUS_TOOLTIP = \"Set the node status via the Node-RED function API.\";\nBlockly.Msg.NODE_STATUS_RING = \"ring\";\nBlockly.Msg.NODE_STATUS_DOT = \"dot\";\nBlockly.Msg.NODE_PROPERTIES = \"get node %1\";\nBlockly.Msg.NODE_PROPERTIES_TOOLTIP = \"Get the specified node property via the Node-RED function API.\";\nBlockly.Msg.NODE_PROPERTIES_ID = \"identifier\";\nBlockly.Msg.NODE_PROPERTIES_NAME = \"name\";\nBlockly.Msg.NODE_PROPERTIES_OUTPUT_COUNT = \"output count\";\nBlockly.Msg.NODE_PROPERTIES_PATH = \"path\";\nBlockly.Msg.NODE_FLOW_MEMORY = \"flow\";\nBlockly.Msg.NODE_FLOW_MEMORY_TOOLTIP = \"Access the data in the Node-RED flow memory.\";\nBlockly.Msg.NODE_CONTEXT_MEMORY = \"(node) context\";\nBlockly.Msg.NODE_CONTEXT_MEMORY_TOOLTIP = \"Access the data in the Node-RED (node) context memory.\";\nBlockly.Msg.NODE_GLOBAL_MEMORY = \"global\";\nBlockly.Msg.NODE_GLOBAL_MEMORY_TOOLTIP = \"Access the data in the Node-RED global memory.\";\nBlockly.Msg.NODE_SEND = \"send %1 to output %2\";\nBlockly.Msg.NODE_SEND_TOOLTIP = \"Send output message via the Node-RED function API.\";\nBlockly.Msg.NODE_SEND_WARNING = \"When sending messages in a loop,\\nmake sure the messages are unique!\";\nBlockly.Msg.NODE_RETURN_MESSAGE = \"return %1 to output %2\";\nBlockly.Msg.NODE_RETURN_MESSAGE_TOOLTIP = \"Send output message and return to stop processing\";\nBlockly.Msg.NODE_RETURN = \"return\";\nBlockly.Msg.NODE_RETURN_TOOLTIP = \"Return to stop processing (without sending a message)\";\nBlockly.Msg.NODE_CLOSE = \"On node closed\";\nBlockly.Msg.NODE_CLOSE_1 = \"%1\";\nBlockly.Msg.NODE_CLOSE_TOOLTIP = \"Statements that should be executed when the node is being closed.\";\nBlockly.Msg.NODE_DONE = \"message done\";\nBlockly.Msg.NODE_DONE_TOOLTIP = \"Handling the message has been finished.\";\nBlockly.Msg.NODE_ENV = \"get environment variable %1\";\nBlockly.Msg.NODE_ENV_TOOLTIP = \"Access the value of an environment variable.\";\n\n// =========================================================================================\n// Buffer blocks\n// =========================================================================================\nBlockly.Msg.BUFFER_FROM_STRING = \"generate buffer from string %1 with encoding %2\";\nBlockly.Msg.BUFFER_FROM_STRING_TOOLTIP = \"Generate a buffer from a string.\";\nBlockly.Msg.BUFFER_TO_STRING = \"generate string from buffer %1 with encoding %2\";\nBlockly.Msg.BUFFER_TO_STRING_TOOLTIP = \"Convert a buffer to a string.\";\nBlockly.Msg.BUFFER_LENGTH = \"get length of buffer %1\";\nBlockly.Msg.BUFFER_LENGTH_TOOLTIP = \"Get the buffer length in bytes.\";\nBlockly.Msg.BUFFER_ALLOC = \"create buffer with length %1\";\nBlockly.Msg.BUFFER_ALLOC_TOOLTIP = \"Create a buffer with the specified length.\";\nBlockly.Msg.BUFFER_FILL = \"fill buffer %1 with value %2\";\nBlockly.Msg.BUFFER_FILL_TOOLTIP = \"Fill a buffer with the specified value.\";\nBlockly.Msg.BUFFER_CHECK = \"check if buffer %1\";\nBlockly.Msg.BUFFER_CHECK_TOOLTIP = \"Check if the input value is a buffer.\";\nBlockly.Msg.BUFFER_COPY = \"copy from buffer %1 to buffer %2\";\nBlockly.Msg.BUFFER_COPY_TOOLTIP = \"Copy from the first buffer to the second buffer.\";\nBlockly.Msg.BUFFER_CONCATENATE = \"concatenate buffer %1 and %2\";\nBlockly.Msg.BUFFER_CONCATENATE_TOOLTIP = \"Concatenate the two buffers to create a new buffer.\";\nBlockly.Msg.BUFFER_EMPTY = \"empty buffer\";\nBlockly.Msg.BUFFER_EMPTY_TOOLTIP = \"Create an empty buffer, i.e. buffer with size 0.\";\nBlockly.Msg.BUFFER_BYTE = \"byte %1\";\nBlockly.Msg.BUFFER_BYTE_TOOLTIP = \"A byte value.\";\nBlockly.Msg.BUFFER_GET_INDEX = \"get value at index %1 of buffer %2\";\nBlockly.Msg.BUFFER_GET_INDEX_TOOLTIP = \"Get the value of the specified buffer index.\";\nBlockly.Msg.BUFFER_SET_INDEX = \"set byte at index %1 of buffer %2 to value %3\";\nBlockly.Msg.BUFFER_SET_INDEX_TOOLTIP = \"Set the byte value of the specified buffer index.\";\n\n// =========================================================================================\n// Objects (JSON) blocks\n// =========================================================================================\nBlockly.Msg.OBJECT_FROM_JSON = \"get object from JSON text %1\";\nBlockly.Msg.OBJECT_FROM_JSON_TOOLTIP = \"Create an object from JSON formatted text string.\";\nBlockly.Msg.OBJECT_TO_JSON = \"get JSON text from object %1\";\nBlockly.Msg.OBJECT_TO_JSON_TOOLTIP = \"Create JSON formatted text string from an object.\";\nBlockly.Msg.OBJECT_CREATE = \"create object\";\nBlockly.Msg.OBJECT_CREATE_TOOLTIP = \"Create a new object, optionally with some property values.\";\nBlockly.Msg.OBJECT_FIELD_NAME = \"property name\";\nBlockly.Msg.OBJECT_KEYS = \"get keys from %1\";\nBlockly.Msg.OBJECT_KEYS_TOOLTIP = \"Get all keys from the object.\";\n\n// =========================================================================================\n// Extra blocks\n// =========================================================================================\nBlockly.Msg.TEXT_SPECIAL_CHARACTER = \"special character %1\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TOOLTIP = \"A special character that shouldn’t be escaped (by a '\\\\' prefix).\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_LF = \"line feed (LF) (\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CR = \"carriage return (CR) (\\\\r)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CRLF = \"carriage return line feed (CRLF) (\\\\r\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TAB = \"tab (TAB) (\\\\t)\";\nBlockly.Msg.TIMER_CONDITIONAL = \"repeat every %1 seconds, until %2 %3\";\nBlockly.Msg.TIMER_CONDITIONAL_TOOLTIP = \"Repeat at regular intervals until a condition is fulfilled.\";\nBlockly.Msg.TIMER_COUNTING = \"repeat %1 times every %2 seconds %3 %4\";\nBlockly.Msg.TIMER_COUNTING_TOOLTIP = \"Repeat at regular intervals for a number of times.\";\nBlockly.Msg.SWITCH = \"input value %1 in case of %2 do %3\";\nBlockly.Msg.SWITCH_TOOLTIP = \"Do some things depending on the input values.\";\nBlockly.Msg.SWITCH_DEFAULT = \"default\";\nBlockly.Msg.SWITCH_DEFAULT_TOOLTIP = \"When there are no matching cases.\";\nBlockly.Msg.SWITCH_CASE = \"the case is %1\";\nBlockly.Msg.SWITCH_CASE_TOOLTIP = \"When a specific value is matched.\";\nBlockly.Msg.SWITCH_CASE_LIST = \"in case of\";\nBlockly.Msg.SWITCH_CASE_LIST_TOOLTIP = \"List of all available cases.\";\nBlockly.Msg.SWITCH_DO = \"do\";\nBlockly.Msg.MISC_JAVASCRIPT = \"JavaScript statement %1;\";\nBlockly.Msg.MISC_JAVASCRIPT_TOOLTIP = \"Enter JavaScript code when no blocks offer certain functionality.\";\nBlockly.Msg.MISC_JSEXPRESS = \"JavaScript expression %1\";\nBlockly.Msg.MISC_JSEXPRESS_TOOLTIP = \"Use with caution. Enter JavaScript code when no blocks offer certain functionality.\";\nBlockly.Msg.MISC_COMMENT = \"comment %1\";\nBlockly.Msg.MISC_COMMENT_TOOLTIP = \"Add comments to explain how the logic works.\";\nBlockly.Msg.MISC_JSMULTILINE = \"multiline JS code %1\";\nBlockly.Msg.MISC_JSMULTILINE_TOOLTIP = \"Enter multiline JavaScript code when no blocks offer certain functionality.\";\n\n// =========================================================================================\n// Datetime blocks\n// =========================================================================================\nBlockly.Msg.DATETIME_INPUT = \"date %1\";\nBlockly.Msg.DATETIME_INPUT_TOOLTIP = \"A date.\";\nBlockly.Msg.DATETIME_TIMESTAMP = \"%1 timestamp\";\nBlockly.Msg.DATETIME_TIMESTAMP_TOOLTIP = \"Get the current timestamp (i.e. date and time of now).\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE = \"get %1 from timestamp %2\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TOOLTIP = \"Get the specified information from a timestamp.\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_NR = \"timestamp format\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MSEC = \"milliseconds\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_SEC = \"seconds\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MIN = \"minutes\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_HOUR = \"hour\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY = \"day\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_OF_WEEK = \"day of week\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH = \"month\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_YEAR = \"year\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TEXT = \"date\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_FULL = \"full date\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_NAME = \"day name\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH_NAME = \"month name\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE = \"create date from %1\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE_TOOLTIP = \"Create a date from the specified value.\";\nBlockly.Msg.DATETIME_FORMAT = \"convert timestamp %1 to format %2\";\nBlockly.Msg.DATETIME_FORMAT_TOOLTIP = \"Convert a timestamp to a specified format.\";\nBlockly.Msg.DATETIME_UTC = \"UTC\";\nBlockly.Msg.DATETIME_LOCAL = \"local\";\n\n// =========================================================================================\n// Timer blocks\n// =========================================================================================\nBlockly.Msg.TIMER_SET_TIMEOUT = \"execute timeout %1 in %2 %3\";\nBlockly.Msg.TIMER_SET_TIMEOUT_1 = \"%1\";\nBlockly.Msg.TIMER_SET_TIMEOUT_NAME = \"timeout\";\nBlockly.Msg.TIMER_SET_TIMEOUT_TOOLTIP = \"Execute the included blocks after a specified time delay.\";\nBlockly.Msg.TIMER_CLEAR_TIMEOUT = \"stop timeout %1\";\nBlockly.Msg.TIMER_CLEAR_TIMEOUT_TOOLTIP = \"Cancel the execution after the timeout.\";\nBlockly.Msg.TIMER_SET_INTERVAL = \"execute interval %1 every %2 %3\";\nBlockly.Msg.TIMER_SET_INTERVAL_1 = \"%1\";\nBlockly.Msg.TIMER_SET_INTERVAL_NAME = \"interval\";\nBlockly.Msg.TIMER_SET_INTERVAL_TOOLTIP = \"Execute the included blocks periodically at the specified time interval.\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL = \"stop interval %1\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL_TOOLTIP = \"Cancel the block execution at intervals.\";\nBlockly.Msg.TIMER_TIMER_MS = \"msec\";\nBlockly.Msg.TIMER_TIMER_SEC = \"sec\";\nBlockly.Msg.TIMER_TIMER_MIN = \"min\";\nBlockly.Msg.TIMER_NONE_SELECTED = \"none\";\n","output":"str","x":863,"y":1622,"wires":[["23661030f83ac492"]]},{"id":"23661030f83ac492","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"extraBlocksCodeGen.js","filename":"lib/extra/extraBlocksCodeGen.js","format":"javascript","syntax":"mustache","template":"// =====================================================================================\n// The timer blocks will NOT be public available yet in version 1.0.0\n// =====================================================================================\nBlockly.JavaScript['timer_counting'] = function(block) {\n    const count = block.getFieldValue('COUNT');\n    const interval = block.getFieldValue('INTERVAL') * 1000; // milliseconds\n    const statements = Blockly.JavaScript.statementToCode(block, 'STATEMENTS');\n  \n    // Generate unique variable names\n    var i = 'i_' + Math.random().toString(36).substr(2, 16);\n    var timerId = 'timerId_' + Math.random().toString(36).substr(2, 16);\n  \n    var code = 'var ' + i + ' = 0;\\nvar ' + timerId + ' = setInterval(function() {\\n' + statements + '\\n  if(++' + i + ' === ' + count + ') {\\n    clearInterval(' + timerId + ');\\n  }\\n}, ' + interval + ');';\n    return code;\n};\n\nBlockly.JavaScript['timer_conditional'] = function(block) {\n    const interval = block.getFieldValue('INTERVAL') * 1000; // milliseconds\n    const condition = Blockly.JavaScript.valueToCode(block, 'CONDITION', Blockly.JavaScript.ORDER_ATOMIC);\n    const statements = Blockly.JavaScript.statementToCode(block, 'STATEMENTS') || '';\n  \n    // Generate unique variable name\n    var timerId = 'timerId_' + Math.random().toString(36).substr(2, 16);\n  \n    var code = 'var ' + timerId + ' = setInterval(function() {\\n' + statements + '\\n  if(' + condition + ') {\\n    clearInterval(' + timerId + ');\\n  }\\n}, ' + interval + ');\\n';\n    return code;\n};\n\n// =====================================================================================\n// Blocks for the 'text' category\n// =====================================================================================\n\n// See https://groups.google.com/forum/#!topic/blockly/1g2rfcgm-aM\nBlockly.JavaScript['text_special_character'] = function(block) {\n    const character = block.getFieldValue('CHARACTER') || '';\n    \n    var code = '\\'' + character + '\\'';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n}\n\n// =====================================================================================\n// Blocks for the 'varia' category\n// =====================================================================================\n\nBlockly.JavaScript['misc_comment'] = function(block) {\n    var comment_text = Blockly.JavaScript.valueToCode(block, 'TEXT', Blockly.JavaScript.ORDER_ATOMIC);\n  \n    // Remove the quotes at the start and the end of the fieldName\n    comment_text = comment_text.replace(/^'(.*)'$/, '$1');\n    \n    const code = '// ' + comment_text + '\\n';\n    return code;\n};\n\nBlockly.JavaScript['misc_javascript'] = function(block) {\n    var statement = Blockly.JavaScript.valueToCode(block, 'STATEMENT', Blockly.JavaScript.ORDER_ATOMIC);\n    \n    // Remove the quotes at the start and the end of the fieldName\n    statement = statement.replace(/^'(.*)'$/, '$1');\n\t\n    // When the Javascript code contains a ' that will be escaped automatically by \\' \n    // Unescape the ' again by removing the \\ before the '\n    statement = statement.replace(/\\\\'/g, \"'\");\n    \n    const code = statement + ';' + \"\\n\";\n    return code;\n};\n\nBlockly.JavaScript['misc_jsmultiline'] = function(block) {\n    var statement = block.getFieldValue('STATEMENT');\n    const code = statement + \"\\n\";\n    return code;\n};\n\n\nBlockly.JavaScript['misc_jsexpress'] = function(block) {\n    var jse = Blockly.JavaScript.valueToCode(block, 'STATEMENT', Blockly.JavaScript.ORDER_ATOMIC);\n    \n    // Remove the quotes at the start and the end of the fieldName\n    jse = jse.replace(/^'(.*)'$/, '$1');\n\t\n    // When the Javascript code contains a ' that will be escaped automatically by \\' \n    // Unescape the ' again by removing the \\ before the '\n    jse = jse.replace(/\\\\'/g, \"'\");\n    \n    const code = jse;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\n// =====================================================================================\n// The code for the SWITCH block has been copied from the Blockly forum.\n// See https://groups.google.com/forum/#!topic/blockly/djhO2jUb0Xs\n// Changed some minor things:\n// - Removed the variable name test, because e.g. msg is not allowed otherwise.\n// - The /t before 'case' and 'default' is replaced by two tabs.\n// - The \\n\\t\\t before 'break' is replaced by four tabs.\n// - Two spaces are added before the do_0 and do_n (which already contain two spaces)\n// =====================================================================================\nBlockly.JavaScript['switch_case'] = function(block) {\n\tvar code = '';\n\tvar do_n;\n\tvar case_n;\n\n\tconst switchVariable = Blockly.JavaScript.valueToCode(block, 'CONDITION', Blockly.JavaScript.ORDER_NONE) || null;\n    \n\tif (switchVariable){\n        code = '\\nswitch (' + switchVariable + '){\\n';\n        var case_0 = Blockly.JavaScript.valueToCode(block, 'CASECONDITION0', Blockly.JavaScript.ORDER_NONE) || null;\n        var do_0 = Blockly.JavaScript.statementToCode(block, 'CASE0');\n        code += '  case ' + case_0 + ':\\n  ' + do_0 + '    break;\\n';\n        \n        for (var n = 1; n <= block.caseCount_; n++) {\n            case_n = Blockly.JavaScript.valueToCode(block, 'CASECONDITION' + n,\n                Blockly.JavaScript.ORDER_NONE) || null;\n            if (case_n){\n                do_n = Blockly.JavaScript.statementToCode(block, 'CASE' + n);\n                code += '  case ' + case_n + ':\\n  ' + do_n + '    break;\\n';\n            }\n        }\n        if (block.defaultCount_) {\n            do_n = Blockly.JavaScript.statementToCode(block, 'ONDEFAULT');\n            code += '  default:\\n  ' + do_n + '    break;\\n';\n        }\n        code += '}\\n';\n\t}\n\treturn code;\n};\n","output":"str","x":863,"y":1672,"wires":[["aabcfaa769089fbb"]]},{"id":"aabcfaa769089fbb","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"extraBlocksDefs.js","filename":"lib/extra/extraBlocksDefs.js","format":"javascript","syntax":"mustache","template":"// =====================================================================================\n// This EXTRA library contains blocks that needs to be added to existing Blockly \n// categories (offered by Google).  This way we can upgrade Blockly to a new\n// version, without loosing our changes.\n// =====================================================================================\n\nBlockly.Blocks['timer_counting'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"timer_counting\",\n            \"message0\": Blockly.Msg.TIMER_CONDITIONAL,\n            \"args0\": [\n                {\n                    \"type\": \"field_number\",\n                    \"name\": \"COUNT\",\n                    \"value\": 0,\n                    \"min\": 0,\n                    \"precision\": 1\n                },\n                {\n                    \"type\": \"field_number\",\n                    \"name\": \"INTERVAL\",\n                    \"value\": 0,\n                    \"min\": 0,\n                    \"precision\": 0.01\n                },\n                {\n                    \"type\": \"input_dummy\"\n                },\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"STATEMENTS\"\n                }\n            ],\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#EB984E\",\n            \"tooltip\": Blockly.Msg.TIMER_CONDITIONAL_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nBlockly.Blocks['timer_conditional'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"timer_conditional\",\n            \"message0\": Blockly.Msg.TIMER_CONDITIONAL,\n            \"args0\": [\n                {\n                    \"type\": \"field_number\",\n                    \"name\": \"INTERVAL\",\n                    \"value\": 0,\n                    \"min\": 0,\n                    \"precision\": 0.01\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"CONDITION\",\n                    \"check\": \"Boolean\"\n                },\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"STATEMENTS\"\n                }\n            ],\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#EB984E\",\n            \"tooltip\": Blockly.Msg.TIMER_CONDITIONAL_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\n// =====================================================================================\n// Blocks for the 'text' category\n// =====================================================================================\n\n// See https://groups.google.com/forum/#!topic/blockly/1g2rfcgm-aM\nBlockly.Blocks['text_special_character'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"text_special_character\",\n            \"message0\": Blockly.Msg.TEXT_SPECIAL_CHARACTER,\n            \"args0\": [\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"CHARACTER\",\n                    \"options\": [[Blockly.Msg.TEXT_SPECIAL_CHARACTER_LF  , \"\\\\n\"   ],\n                                [Blockly.Msg.TEXT_SPECIAL_CHARACTER_CR  , \"\\\\r\"   ],\n                                [Blockly.Msg.TEXT_SPECIAL_CHARACTER_CRLF, \"\\\\r\\\\n\"],\n                                [Blockly.Msg.TEXT_SPECIAL_CHARACTER_TAB , \"\\\\t\"   ]] \n                }\n            ],\n            \"output\": \"String\",\n            \"colour\": \"#5CA68D\",\n            \"tooltip\": Blockly.Msg.TEXT_SPECIAL_CHARACTER_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\n// =====================================================================================\n// Blocks for the 'varia' category\n// =====================================================================================\n\nBlockly.Blocks['misc_comment'] = {\n    // Text value.\n    init: function() {\n        this.jsonInit({\n            \"type\": \"misc_comment\",\n            \"message0\": Blockly.Msg.MISC_COMMENT,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"TEXT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#88A705\",\n            \"tooltip\": Blockly.Msg.MISC_COMMENT_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nBlockly.Blocks['misc_javascript'] = {\n    // Text value.\n    init: function() {\n        this.jsonInit({\n            \"type\": \"misc_javascript\",\n            \"message0\": Blockly.Msg.MISC_JAVASCRIPT,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"STATEMENT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#88A705\",\n            \"tooltip\": Blockly.Msg.MISC_JAVASCRIPT_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nBlockly.Blocks['misc_jsmultiline'] = {\n    // Text value.\n    init: function() {\n        this.jsonInit({\n            \"type\": \"misc_jsmultiline\",\n            \"message0\": Blockly.Msg.MISC_JSMULTILINE,\n            \"args0\": [\n                {\n                    \"type\": \"field_multilinetext\",\n                    \"name\": \"STATEMENT\",\n                    \"text\": \"\",\n                    \"spellcheck\": false\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#88A705\",\n            \"tooltip\": Blockly.Msg.MISC_JSMULTILINE_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nBlockly.Blocks['misc_jsexpress'] = {\n    // Text value.\n    init: function() {\n        this.jsonInit({\n            \"type\": \"misc_jsexpress\",\n            \"message0\": Blockly.Msg.MISC_JSEXPRESS,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"STATEMENT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": null,\n            \"colour\": \"#88A705\",\n            \"tooltip\": Blockly.Msg.MISC_JSEXPRESS_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\n// =====================================================================================\n// The code for the SWITCH block has been copied from the Blockly forum and changed.\n// See https://groups.google.com/forum/#!topic/blockly/djhO2jUb0Xs\n// =====================================================================================\n\nBlockly.Blocks['switch_case'] = {\n    init: function() {\n        \n        this.jsonInit({\n            \"type\": \"switch_case\",\n            \"message0\": Blockly.Msg.SWITCH,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"CONDITION\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"CASECONDITION0\"\n                },\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"CASE0\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"mutator\": \"switch_case_mutator\", \n            \"colour\": \"#5C81A6\",\n            \"tooltip\": Blockly.Msg.SWITCH_TOOLTIP,\n            \"helpUrl\": null\n        });\n            \n        this.caseCount_ = 0;\n        this.defaultCount_ = 0;\n    }\n};\n\nvar switchCaseMutator = {\n  mutationToDom: function() {\n    if(!this.caseCount_ && !this.defaultCount_) {\n        return null;\n    }\n    var container = document.createElement('mutation');\n    if (this.caseCount_) {\n        container.setAttribute('case', this.caseCount_);\n    }\n    if (this.defaultCount_) {\n        container.setAttribute('default', 1);\n    }\n    return container;\n  },\n\n  domToMutation: function(xmlElement) {\n    this.caseCount_ = parseInt(xmlElement.getAttribute('case'), 10);\n    this.defaultCount_ = parseInt(xmlElement.getAttribute('default'), 10);\n    for (var x = 1; x <= this.caseCount_; x++) {\n        this.appendValueInput('CASECONDITION' + x)\n            .appendField(Blockly.Msg.SWITCH_CASE_LIST);\n        this.appendStatementInput('CASE' + x)\n            .appendField(Blockly.Msg.SWITCH_DO);\n    }\n    if (this.defaultCount_) {\n        this.appendStatementInput('ONDEFAULT')\n            .appendField(Blockly.Msg.SWITCH_DEFAULT);\n    }\n  },\n\n  decompose: function(workspace) {\n    var containerBlock = workspace.newBlock('control_case');\n    containerBlock.initSvg();\n    var connection = containerBlock.getInput('STACK').connection;\n    for (var x = 1; x <= this.caseCount_; x++) {\n        var caseBlock = workspace.newBlock('case_incaseof');\n        caseBlock.initSvg();\n        connection.connect(caseBlock.previousConnection);\n        connection = caseBlock.nextConnection;\n    }\n    if(this.defaultCount_) {\n        var defaultBlock = workspace.newBlock('case_default');\n        defaultBlock.initSvg();\n        connection.connect(defaultBlock.previousConnection);\n    }\n    return containerBlock;\n  },\n\n  compose: function(containerBlock) {\n    //Disconnect all input blocks and remove all inputs.\n    if (this.defaultCount_) {\n        this.removeInput('ONDEFAULT');\n    }\n    this.defaultCount_ = 0;\n    for (var x = this.caseCount_; x > 0; x--) {\n        this.removeInput('CASECONDITION' + x);\n        this.removeInput('CASE' + x);\n    }\n    this.caseCount_ = 0;\n    var caseBlock = containerBlock.getInputTargetBlock('STACK');\n    while (caseBlock) {\n        switch(caseBlock.type) {\n            case 'case_incaseof':\n                this.caseCount_++;\n                var caseconditionInput = this.appendValueInput('CASECONDITION' + this.caseCount_)\n                                             .appendField(Blockly.Msg.SWITCH_CASE_LIST);   \n                var caseInput = this.appendStatementInput('CASE' + this.caseCount_)\n                                    .appendField(Blockly.Msg.SWITCH_DO);\n                if (caseBlock.valueConnection_) {\n                    caseconditionInput.connection.connect(caseBlock.valueConnection_);\n                }\n                if (caseBlock.statementConnection_) {\n                    caseInput.connection.connect(caseBlock.statementConnection_);\n                }\n                break;\n            case 'case_default':\n                this.defaultCount_++;\n                var defaultInput = this.appendStatementInput('ONDEFAULT')\n                                       .appendField(Blockly.Msg.SWITCH_DEFAULT);\n                if(caseBlock.statementConnection_) {\n                    defaultInput.connection.connect(caseBlock.statementConnection_);\n                }\n                break;\n            default:\n                throw 'Unknown block type.';\n        }\n        caseBlock = caseBlock.nextConnection &&\n                  caseBlock.nextConnection.targetBlock();\n    }\n  },\n\n  saveConnections: function(containerBlock) {\n    var caseBlock = containerBlock.getInputTargetBlock('STACK');\n    var x = 1;\n    while (caseBlock) {\n        switch (caseBlock.type) {\n            case'case_incaseof':\n                var caseconditionInput = this.getInput('CASECONDITION' + x);  \n                var caseInput = this.getInput('CASE' + x);\n                caseBlock.valueConnection_ = caseconditionInput && caseconditionInput.connection.targetConnection;\n                caseBlock.statementConnection_ = caseInput && caseInput.connection.targetConnection;\n                x++;\n                break;\n            case'case_default':\n                var defaultInput = this.getInput('ONDEFAULT');\n                caseBlock.satementConnection_ = defaultInput && defaultInput.connection.targetConnection;\n                break;\n            default:\n                throw 'Unknown block type';\n        }\n        caseBlock = caseBlock.nextConnection &&\n                    caseBlock.nextConnection.targetBlock();\n    }\n  }\n};\n\nBlockly.Extensions.registerMutator('switch_case_mutator', switchCaseMutator, null, ['case_incaseof', 'case_default']);\n\n// Internally used in SWITCH_CASE block mutator (so not available in the toolbox)\nBlockly.Blocks['control_case'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"control_case\",\n            \"message0\": Blockly.Msg.SWITCH_CASE,\n            \"args0\": [\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"STACK\"\n                }\n            ],\n            \"colour\": \"#5C81A6\",\n            \"tooltip\": Blockly.Msg.SWITCH_CASE_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n        this.contextMenu = false;\n    }\n};\n\n// Internally used in SWITCH_CASE block mutator (so not available in the toolbox)\nBlockly.Blocks['case_incaseof'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"case_incaseof\",\n            \"message0\": Blockly.Msg.SWITCH_CASE_LIST,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#5C81A6\",\n            \"tooltip\": Blockly.Msg.SWITCH_CASE_LIST_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n        this.contextMenu = false;\n    }\n};\n\n// Internally used in SWITCH_CASE block mutator (so not available in the toolbox)\nBlockly.Blocks['case_default'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"case_default\",\n            \"message0\": Blockly.Msg.SWITCH_DEFAULT,\n            \"previousStatement\": null,\n            \"colour\": \"#5C81A6\",\n            \"tooltip\": Blockly.Msg.SWITCH_DEFAULT_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n        this.contextMenu = false;\n    }\n};\n","output":"str","x":863,"y":1722,"wires":[["288db39e9e33d473"]]},{"id":"288db39e9e33d473","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"fr.js","filename":"messages/fr.js","format":"javascript","syntax":"mustache","template":"// =========================================================================================\n// Node-RED blocks\n// =========================================================================================\nBlockly.Msg.NODE_OBJECT_GET_JSON = \"%1 %2 la propriété %3\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET_TOOLTIP = \"Obtenir la propriété d’un objet.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE_TOOLTIP = \"Supprimer la propriété d’un objet.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS_TOOLTIP = \"S’assurer qu’un objet possède une certaine propriété.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET = \"obtenir de\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE = \"supprimer de\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS = \"il y a dans\";\nBlockly.Msg.NODE_OBJECT_GET_WARNING = \"Assurez-vous que la propriété ne renvoie pas une valeur imbriquée comme foo.bar.\";\nBlockly.Msg.NODE_OBJECT_SET_JSON = \"fixer dans %1 la propriété %2 à %3\";\nBlockly.Msg.NODE_OBJECT_SET_JSON_TOOLTIP = \"Fixer la propriété d’un objet.\";\nBlockly.Msg.NODE_OBJECT_SET_WARNING = \"Les valeurs imbriquées ne peuvent être définies qu’avec une chaîne littérale.\";\nBlockly.Msg.NODE_LOG = \"consigner le texte %1 avec le niveau %2\";\nBlockly.Msg.NODE_LOG_TOOLTIP = \"Consignation (log) via l’API de Node-RED.\";\nBlockly.Msg.NODE_LOG_LOG = \"info\";\nBlockly.Msg.NODE_LOG_WARNING = \"avertissement\";\nBlockly.Msg.NODE_LOG_ERROR = \"erreur\";\nBlockly.Msg.NODE_LOG_DEBUG = \"débogage\";\nBlockly.Msg.NODE_LOG_TRACE = \"trace\";\nBlockly.Msg.NODE_MSG = \"msg\";\nBlockly.Msg.NODE_MSG_TOOLTIP = \"Obtenir le message d’entrée de Node-RED.\";\nBlockly.Msg.NODE_REMOVE_STATUS = \"retirer le statut du nœud\";\nBlockly.Msg.NODE_REMOVE_STATUS_TOOLTIP = \"Nettoyer le statut du nœud via l’API de Node-RED.\";\nBlockly.Msg.NODE_CLONE = \"cloner %1\";\nBlockly.Msg.NODE_CLONE_TOOLTIP = \"Cloner le message via l’API de Node-RED.\";\nBlockly.Msg.NODE_STATUS = \"fixer le statut du nœud avec le texte %1 la couleur %2 et la forme %3\";\nBlockly.Msg.NODE_STATUS_TOOLTIP = \"Fixer le statut du nœud via l’API de Node-RED.\";\nBlockly.Msg.NODE_STATUS_RING = \"anneau\";\nBlockly.Msg.NODE_STATUS_DOT = \"point\";\nBlockly.Msg.NODE_PROPERTIES = \"obtenir %1 du nœud\";\nBlockly.Msg.NODE_PROPERTIES_TOOLTIP = \"Obtenir la propriété spécifiée du nœud via l’API de Node-RED.\";\nBlockly.Msg.NODE_PROPERTIES_ID = \"l’identifiant\";\nBlockly.Msg.NODE_PROPERTIES_NAME = \"le nom\";\nBlockly.Msg.NODE_PROPERTIES_OUTPUT_COUNT = \"nombre de sorties\";\nBlockly.Msg.NODE_PROPERTIES_PATH = \"chemin\";\nBlockly.Msg.NODE_FLOW_MEMORY = \"contexte du flux\";\nBlockly.Msg.NODE_FLOW_MEMORY_TOOLTIP = \"Accéder aux données dans la mémoire du flux (flow).\";\nBlockly.Msg.NODE_CONTEXT_MEMORY = \"contexte du nœud\";\nBlockly.Msg.NODE_CONTEXT_MEMORY_TOOLTIP = \"Accéder aux données dans la mémoire du nœud (contexte).\";\nBlockly.Msg.NODE_GLOBAL_MEMORY = \"contexte global\";\nBlockly.Msg.NODE_GLOBAL_MEMORY_TOOLTIP = \"Accéder aux données dans la mémoire globale (contexte).\";\nBlockly.Msg.NODE_SEND = \"envoyer %1 sur la sortie %2\";\nBlockly.Msg.NODE_SEND_TOOLTIP = \"Envoyer un message de sortie via l’API de Node-RED.\";\nBlockly.Msg.NODE_SEND_WARNING = \"Lors de l’envoi de messages dans une boucle,\\nassurez-vous que les messages soient uniques !\";\nBlockly.Msg.NODE_RETURN_MESSAGE = \"envoyer %1 sur la sortie %2 et terminer\";\nBlockly.Msg.NODE_RETURN_MESSAGE_TOOLTIP = \"Envoyer un message de sortie et sortir du nœud.\";\nBlockly.Msg.NODE_RETURN = \"terminer\";\nBlockly.Msg.NODE_RETURN_TOOLTIP = \"Sortir du nœud (sans envoyer de message de sortie).\";\nBlockly.Msg.NODE_CLOSE = \"à la fermeture du nœud\";\nBlockly.Msg.NODE_CLOSE_1 = \"%1\";\nBlockly.Msg.NODE_CLOSE_TOOLTIP = \"Blocs à exécuter à la fermeture du nœud.\";\nBlockly.Msg.NODE_DONE = \"message terminé\";\nBlockly.Msg.NODE_DONE_TOOLTIP = \"Le traitement du message est terminé.\";\nBlockly.Msg.NODE_ENV = \"obtenir la variable d’environnement %1\";\nBlockly.Msg.NODE_ENV_TOOLTIP = \"Accéder à la valeur d’une variable d’environnement.\";\n// =========================================================================================\n// Buffer blocks\n// =========================================================================================\nBlockly.Msg.BUFFER_FROM_STRING = \"créer un tampon avec la chaîne %1 et l’encodage %2\";\nBlockly.Msg.BUFFER_FROM_STRING_TOOLTIP = \"Crée un tampon (buffer) à partir d’une chaîne de caractères.\";\nBlockly.Msg.BUFFER_TO_STRING = \"créer une chaîne depuis le tampon %1 avec l’encodage %2\";\nBlockly.Msg.BUFFER_TO_STRING_TOOLTIP = \"Conversion d’un tampon (buffer) en chaîne de caractères.\";\nBlockly.Msg.BUFFER_LENGTH = \"longueur du tampon %1\";\nBlockly.Msg.BUFFER_LENGTH_TOOLTIP = \"Obtenir la longueur du tampon (buffer) en octets.\";\nBlockly.Msg.BUFFER_ALLOC = \"créer un tampon de longueur %1\";\nBlockly.Msg.BUFFER_ALLOC_TOOLTIP = \"Crée un tampon (buffer) de la longueur spécifiée en octets.\";\nBlockly.Msg.BUFFER_FILL = \"remplir le tampon %1 avec la valeur %2\";\nBlockly.Msg.BUFFER_FILL_TOOLTIP = \"Remplit le tampon (buffer) avec la valeur spécifiée.\";\nBlockly.Msg.BUFFER_CHECK = \"si %1 est un tampon\";\nBlockly.Msg.BUFFER_CHECK_TOOLTIP = \"Vérifie si l’entrée est un tampon (buffer).\";\nBlockly.Msg.BUFFER_COPY = \"copier depuis le tampon %1 vers le tampon %2\";\nBlockly.Msg.BUFFER_COPY_TOOLTIP = \"Copier depuis le premier tampon (buffer) vers le deuxième.\";\nBlockly.Msg.BUFFER_CONCATENATE = \"concaténer le tampon %1 et %2\";\nBlockly.Msg.BUFFER_CONCATENATE_TOOLTIP = \"Concaténer les deux tampons pour créer un nouveau tampon.\";\nBlockly.Msg.BUFFER_EMPTY = \"tampon vide\";\nBlockly.Msg.BUFFER_EMPTY_TOOLTIP = \"Créer un tampon (buffer) vide, donc avec une longueur de zéro.\";\nBlockly.Msg.BUFFER_BYTE = \"%1 (octet)\";\nBlockly.Msg.BUFFER_BYTE_TOOLTIP = \"Un octet.\";\nBlockly.Msg.BUFFER_GET_INDEX = \"obtenir l’octet à l’index %1 du tampon %2\";\nBlockly.Msg.BUFFER_GET_INDEX_TOOLTIP = \"Obtenir la valeur de l’octet à l’index spécifié du tampon (buffer).\";\nBlockly.Msg.BUFFER_SET_INDEX = \"fixer l’octet l’index %1 du tampon %2 à %3\";\nBlockly.Msg.BUFFER_SET_INDEX_TOOLTIP = \"Mettre l’octet à l’index spécifié du tampon (buffer) à une certaine valeur.\";\n// =========================================================================================\n// Objects (JSON) blocks\n// =========================================================================================\nBlockly.Msg.OBJECT_FROM_JSON = \"créer un objet à partir du JSON %1\";\nBlockly.Msg.OBJECT_FROM_JSON_TOOLTIP = \"Crée un objet à partir d’une chaîne de caractères JSON.\";\nBlockly.Msg.OBJECT_TO_JSON = \"créer un JSON avec %1\";\nBlockly.Msg.OBJECT_TO_JSON_TOOLTIP = \"Crée une chaîne de caractères JSON depuis l’objet spécifié.\";\nBlockly.Msg.OBJECT_CREATE = \"créer un objet\";\nBlockly.Msg.OBJECT_CREATE_TOOLTIP = \"Crée un nouvel objet, éventuellement avec quelques propriétés.\";\nBlockly.Msg.OBJECT_FIELD_NAME = \"nom de la propriété\";\nBlockly.Msg.OBJECT_KEYS = \"obtenir les clés de %1\";\nBlockly.Msg.OBJECT_KEYS_TOOLTIP = \"Obtenir toutes les clés de l’objet.\";\n// =========================================================================================\n// Extra blocks\n// =========================================================================================\nBlockly.Msg.TEXT_SPECIAL_CHARACTER = \"caractère spécial %1\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TOOLTIP = \"Un caractère spécial qui ne devrait pas être échappé (par un préfixe '\\\\').\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_LF = \"saut de ligne (LF) (\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CR = \"retour de chariot (CR) (\\\\r)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CRLF = \"retour de chariot et saut de ligne (CRLF) (\\\\r\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TAB = \"tabulation (TAB) (\\\\t)\";\nBlockly.Msg.TIMER_CONDITIONAL = \"répéter toutes les %1 secondes, jusqu’à %2 %3\";\nBlockly.Msg.TIMER_CONDITIONAL_TOOLTIP = \"Répéter à intervalles réguliers jusqu’à ce qu’une condition soit remplie.\";\nBlockly.Msg.TIMER_COUNTING = \"répéter  %1 fois toutes les %2 secondes %3 %4\";\nBlockly.Msg.TIMER_COUNTING_TOOLTIP = \"Répéter à intervalles réguliers un certain nombre de fois.\";\nBlockly.Msg.SWITCH = \"tester %1, si = %2 exécuter %3\";\nBlockly.Msg.SWITCH_TOOLTIP = \"Exécuter des blocs sur la base de valeurs d’entrée.\";\nBlockly.Msg.SWITCH_DEFAULT = \"sinon\";\nBlockly.Msg.SWITCH_DEFAULT_TOOLTIP = \"Exécuter si aucune des valeurs n’a été rencontrée.\";\nBlockly.Msg.SWITCH_CASE = \"tester %1\";\nBlockly.Msg.SWITCH_CASE_TOOLTIP = \"Exécuter si la valeur correspond.\";\nBlockly.Msg.SWITCH_CASE_LIST = \"si =\";\nBlockly.Msg.SWITCH_CASE_LIST_TOOLTIP = \"Liste tous les cas possibles.\";\nBlockly.Msg.SWITCH_DO = \"exécuter\";\nBlockly.Msg.MISC_JAVASCRIPT = \"code JavaScript %1;\";\nBlockly.Msg.MISC_JAVASCRIPT_TOOLTIP = \"Tapez du code JavaScript directement si aucun bloc ne peut vous aider.\";\nBlockly.Msg.MISC_JSEXPRESS = \"expression JavaScript %1\";\nBlockly.Msg.MISC_JSEXPRESS_TOOLTIP = \"À utiliser avec prudence. Entrez le code JavaScript si aucun bloc ne peut vous aider.\";\nBlockly.Msg.MISC_COMMENT = \"commentaire %1\";\nBlockly.Msg.MISC_COMMENT_TOOLTIP = \"Ajouter un commentaire pour expliquer comment ça fonctionne.\";\nBlockly.Msg.MISC_JSMULTILINE = \"code JS multiligne %1\";\nBlockly.Msg.MISC_JSMULTILINE_TOOLTIP = \"Tapez du code JavaScript multiligne directement si aucun bloc ne peut vous aider.\";\n// =========================================================================================\n// Datetime blocks\n// =========================================================================================\nBlockly.Msg.DATETIME_INPUT = \"date %1\";\nBlockly.Msg.DATETIME_INPUT_TOOLTIP = \"Une date.\";\nBlockly.Msg.DATETIME_TIMESTAMP = \"timestamp %1\";\nBlockly.Msg.DATETIME_TIMESTAMP_TOOLTIP = \"Obtenir le timestamp de l’instant présent.\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE = \"obtenir %1 depuis le timestamp %2\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TOOLTIP = \"Obtenir une donnée temporelle depuis un timestamp.\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_NR = \"le timestamp\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MSEC = \"les millisecondes\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_SEC = \"les secondes\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MIN = \"les minutes\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_HOUR = \"l’heure\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY = \"le jour\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_OF_WEEK = \"le jour de la semaine\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH = \"le mois\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_YEAR = \"l’année\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TEXT = \"la date\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_FULL = \"la date complète\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_NAME = \"le nom du jour\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH_NAME = \"le nom du mois\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE = \"créer une date à partir de %1\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE_TOOLTIP = \"Créer une date en utilisant la valeur spécifiée.\";\nBlockly.Msg.DATETIME_FORMAT = \"convertir le timestamp %1 au format %2\";\nBlockly.Msg.DATETIME_FORMAT_TOOLTIP = \"Convertir un timestamp au format spécifié.\";\nBlockly.Msg.DATETIME_UTC = \"UTC\";\nBlockly.Msg.DATETIME_LOCAL = \"local\";\n// =========================================================================================\n// Timer blocks\n// =========================================================================================\nBlockly.Msg.TIMER_SET_TIMEOUT = \"exécuter le délai %1 dans %2 %3\";\nBlockly.Msg.TIMER_SET_TIMEOUT_1 = \"%1\";\nBlockly.Msg.TIMER_SET_TIMEOUT_NAME = \"délai\";\nBlockly.Msg.TIMER_SET_TIMEOUT_TOOLTIP = \"Exécute les blocs inclus après un délai spécifié.\";\nBlockly.Msg.TIMER_CLEAR_TIMEOUT = \"arrêter le délai %1\";\nBlockly.Msg.TIMER_CLEAR_TIMEOUT_TOOLTIP = \"Annule l’exécution après le délai.\";\nBlockly.Msg.TIMER_SET_INTERVAL = \"exécuter l’intervalle %1 à chaque %2 %3\";\nBlockly.Msg.TIMER_SET_INTERVAL_1 = \"%1\";\nBlockly.Msg.TIMER_SET_INTERVAL_NAME = \"intervalle\";\nBlockly.Msg.TIMER_SET_INTERVAL_TOOLTIP = \"Exécute périodiquement les blocs inclus à l’intervalle de temps spécifié.\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL = \"arrêter l’intervalle %1\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL_TOOLTIP = \"Annule l’exécution du bloc à intervalles réguliers.\";\nBlockly.Msg.TIMER_TIMER_MS = \"msec\";\nBlockly.Msg.TIMER_TIMER_SEC = \"sec\";\nBlockly.Msg.TIMER_TIMER_MIN = \"min\";\nBlockly.Msg.TIMER_NONE_SELECTED = \"aucun\";\n","output":"str","x":863,"y":1772,"wires":[["631f1b09bfc0f7b3"]]},{"id":"631f1b09bfc0f7b3","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"ja.js","filename":"messages/ja.js","format":"javascript","syntax":"mustache","template":"// =========================================================================================\r\n// Node-RED blocks\r\n// =========================================================================================\r\nBlockly.Msg.NODE_OBJECT_GET_JSON = \"%2 のプロパティ %3 を %1\";\r\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET_TOOLTIP = \"オブジェクトのプロパティを取得\";\r\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE_TOOLTIP = \"オブジェクトのプロパティを削除\";\r\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS_TOOLTIP = \"オブジェクトがプロパティを持っているか確認\";\r\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET = \"取得\";\r\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE = \"削除\";\r\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS = \"持っているか確認\";\r\nBlockly.Msg.NODE_OBJECT_GET_WARNING = \"プロパティ変数がfoo.barのようなネストした戻り値を返さないようにすること\";\r\nBlockly.Msg.NODE_OBJECT_SET_JSON = \"%1 のプロパティ %2 を %3 にセット\";\r\nBlockly.Msg.NODE_OBJECT_SET_JSON_TOOLTIP = \"オブジェクトのプロパティをセット\";\r\nBlockly.Msg.NODE_OBJECT_SET_WARNING = \"ネストしたプロパティは、文字列リテラルでのみ設定できます\";\r\nBlockly.Msg.NODE_LOG = \"%2 ログレベル指定で %1 をログ出力\";\r\nBlockly.Msg.NODE_LOG_TOOLTIP = \"Node-RED function APIでログ出力\";\r\nBlockly.Msg.NODE_LOG_LOG = \"ログ出力\";\r\nBlockly.Msg.NODE_LOG_WARNING = \"警告\";\r\nBlockly.Msg.NODE_LOG_ERROR = \"エラー\";\r\nBlockly.Msg.NODE_LOG_DEBUG = \"デバッグ\";\r\nBlockly.Msg.NODE_LOG_TRACE = \"トレース\";\r\nBlockly.Msg.NODE_MSG = \"msg\";\r\nBlockly.Msg.NODE_MSG_TOOLTIP = \"Node-REDからの入力メッセージを取得\";\r\nBlockly.Msg.NODE_REMOVE_STATUS = \"ノードステータスを削除\";\r\nBlockly.Msg.NODE_REMOVE_STATUS_TOOLTIP = \"Node-RED function APIでノードステータスを削除\";\r\nBlockly.Msg.NODE_CLONE = \"%1 を複製\";\r\nBlockly.Msg.NODE_CLONE_TOOLTIP = \"Node-RED function APIでメッセージを複製\";\r\nBlockly.Msg.NODE_STATUS = \"文字列 %1 色 %2 シェイプ %3 でノードステータスをセット\";\r\nBlockly.Msg.NODE_STATUS_TOOLTIP = \"Node-RED function APIでノードステータスをセット\";\r\nBlockly.Msg.NODE_STATUS_RING = \"リング\";\r\nBlockly.Msg.NODE_STATUS_DOT = \"ドット\";\r\nBlockly.Msg.NODE_PROPERTIES = \"ノード %1 のプロパティを取得\";\r\nBlockly.Msg.NODE_PROPERTIES_TOOLTIP = \"Node-RED function APIで指定したノードのプロパティを取得\";\r\nBlockly.Msg.NODE_PROPERTIES_ID = \"ノード識別ID\";\r\nBlockly.Msg.NODE_PROPERTIES_NAME = \"ノード名称\";\r\nBlockly.Msg.NODE_PROPERTIES_OUTPUT_COUNT = \"出力数\";\r\nBlockly.Msg.NODE_PROPERTIES_PATH = \"パス\";\r\nBlockly.Msg.NODE_FLOW_MEMORY = \"flowコンテキスト\";\r\nBlockly.Msg.NODE_FLOW_MEMORY_TOOLTIP = \"Node-REDのFlowコンテキストデータにアクセス\";\r\nBlockly.Msg.NODE_CONTEXT_MEMORY = \"(ノード)コンテキスト\";\r\nBlockly.Msg.NODE_CONTEXT_MEMORY_TOOLTIP = \"Node-REDの(ノード)コンテキストデータにアクセス\";\r\nBlockly.Msg.NODE_GLOBAL_MEMORY = \"globalコンテキスト\";\r\nBlockly.Msg.NODE_GLOBAL_MEMORY_TOOLTIP = \"Node-REDのGlobalコンテキストデータにアクセス\";\r\nBlockly.Msg.NODE_SEND = \"%1 を出力ポート %2 に送信\";\r\nBlockly.Msg.NODE_SEND_TOOLTIP = \"Node-RED function APIで出力メッセージを送信\";\r\nBlockly.Msg.NODE_SEND_WARNING = \"ループ中にメッセージを送信するとき、メッセージごとに改行コードが付加されます!\";\r\nBlockly.Msg.NODE_RETURN_MESSAGE = \"%1 を出力ポート %2 に出力しノード処理終了\";\r\nBlockly.Msg.NODE_RETURN_MESSAGE_TOOLTIP = \"出力メッセージを送信して、ノード処理を終了します\";\r\nBlockly.Msg.NODE_RETURN = \"ノード処理終了\";\r\nBlockly.Msg.NODE_RETURN_TOOLTIP = \"処理を終了し戻ります(メッセージは送信しません)\";\r\nBlockly.Msg.NODE_CLOSE = \"ノードが終了する時\";\r\nBlockly.Msg.NODE_CLOSE_1 = \"%1\";\r\nBlockly.Msg.NODE_CLOSE_TOOLTIP = \"ノードが終了する時に実行されるステートメント\";\r\nBlockly.Msg.NODE_DONE = \"メッセージ処理完了\";\r\nBlockly.Msg.NODE_DONE_TOOLTIP = \"メッセージの処理終了時\";\r\nBlockly.Msg.NODE_ENV = \"環境変数 %1 を取得\";\r\nBlockly.Msg.NODE_ENV_TOOLTIP = \"環境変数の値にアクセス\";\r\n\r\n// =========================================================================================\r\n// Buffer blocks\r\n// =========================================================================================\r\nBlockly.Msg.BUFFER_FROM_STRING = \"エンコード %2 で文字列 %1 から Buffer生成\";\r\nBlockly.Msg.BUFFER_FROM_STRING_TOOLTIP = \"文字列からBufferを生成\";\r\nBlockly.Msg.BUFFER_TO_STRING = \"エンコード %2 で Buffer %1 から文字列を生成\";\r\nBlockly.Msg.BUFFER_TO_STRING_TOOLTIP = \"Bufferを文字列に変換\";\r\nBlockly.Msg.BUFFER_LENGTH = \"Buffer %1 の長さを取得\";\r\nBlockly.Msg.BUFFER_LENGTH_TOOLTIP = \"Bufferの長さをバイトで取得\";\r\nBlockly.Msg.BUFFER_ALLOC = \"長さ %1 のBufferを生成\";\r\nBlockly.Msg.BUFFER_ALLOC_TOOLTIP = \"指定した長さでBufferを生成\";\r\nBlockly.Msg.BUFFER_FILL = \"値 %2 でBuffer %1 を満たす\";\r\nBlockly.Msg.BUFFER_FILL_TOOLTIP = \"指定した値でBufferを満たす\";\r\nBlockly.Msg.BUFFER_CHECK = \"%1 がBufferかチェック\";\r\nBlockly.Msg.BUFFER_CHECK_TOOLTIP = \"入力値がBufferかどうかチェック\";\r\nBlockly.Msg.BUFFER_COPY = \"Buffer %1 から %2 にコピー\";\r\nBlockly.Msg.BUFFER_COPY_TOOLTIP = \"最初のBufferを次のBufferにコピー\";\r\nBlockly.Msg.BUFFER_CONCATENATE = \"Buffer %1 と %2 を連結\";\r\nBlockly.Msg.BUFFER_CONCATENATE_TOOLTIP = \"2つの Buffer を連結して、新しい Buffer を作成\";\r\nBlockly.Msg.BUFFER_EMPTY = \"空のBuffer\";\r\nBlockly.Msg.BUFFER_EMPTY_TOOLTIP = \"空のBufferを作る(サイズゼロのBuffer)\";\r\nBlockly.Msg.BUFFER_BYTE = \"バイト値 %1\";\r\nBlockly.Msg.BUFFER_BYTE_TOOLTIP = \"バイト値\";\r\nBlockly.Msg.BUFFER_GET_INDEX = \"Buffer %2 の %1 バイト目の値を取得\";\r\nBlockly.Msg.BUFFER_GET_INDEX_TOOLTIP = \"Bufferの指定された位置の値を取得\";\r\nBlockly.Msg.BUFFER_SET_INDEX = \"Buffer %2 の %1 バイト目の文字を %3 にセット\";\r\nBlockly.Msg.BUFFER_SET_INDEX_TOOLTIP = \"Bufferの指定された位置へ1バイトセット\";\r\n\r\n// =========================================================================================\r\n// Objects (JSON) blocks\r\n// =========================================================================================\r\nBlockly.Msg.OBJECT_FROM_JSON = \"JSON文字列 %1 からオブジェクトを取得\";\r\nBlockly.Msg.OBJECT_FROM_JSON_TOOLTIP = \"JSON形式の文字列からオブジェクトを生成\";\r\nBlockly.Msg.OBJECT_TO_JSON = \"オブジェクト %1 からJSON文字列を生成\";\r\nBlockly.Msg.OBJECT_TO_JSON_TOOLTIP = \"オブジェクトからJSON形式の文字列を生成\";\r\nBlockly.Msg.OBJECT_CREATE = \"オブジェクト生成\";\r\nBlockly.Msg.OBJECT_CREATE_TOOLTIP = \"いくつかのプロパティ値を含む新しいオブジェクトを生成\";\r\nBlockly.Msg.OBJECT_FIELD_NAME = \"プロパティ名\";\r\nBlockly.Msg.OBJECT_KEYS = \"%1 からキーを取得\";\r\nBlockly.Msg.OBJECT_KEYS_TOOLTIP = \"オブジェクトからすべてのキーを取得\";\r\n\r\n// =========================================================================================\r\n// Extra blocks\r\n// =========================================================================================\r\nBlockly.Msg.TEXT_SPECIAL_CHARACTER = \"特殊文字 %1\";\r\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TOOLTIP = \"'\\\\'を前につけてエスケープしない特殊文字\";\r\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_LF = \"改行(LF) (\\\\n)\";\r\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CR = \"キャリッジリターン(CR) (\\\\r)\";\r\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CRLF = \"CRLF (\\\\r\\\\n)\";\r\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TAB = \"水平タブ(TAB) (\\\\t)\";\r\nBlockly.Msg.TIMER_CONDITIONAL = \"%2 から %3 まで %1 秒ごとにくりかえす\";\r\nBlockly.Msg.TIMER_CONDITIONAL_TOOLTIP = \"条件が満たされるまで定期的にくりかえす\";\r\nBlockly.Msg.TIMER_COUNTING = \"%2 秒ごとに %3 %4 を %1 回 くりかえす\";\r\nBlockly.Msg.TIMER_COUNTING_TOOLTIP = \"定期的に何回かくりかえす\";\r\nBlockly.Msg.SWITCH = \"入力値 %1 が %2 の時 %3 を実行\";\r\nBlockly.Msg.SWITCH_TOOLTIP = \"入力値に応じた条件で実行\";\r\nBlockly.Msg.SWITCH_DEFAULT = \"デフォルト\";\r\nBlockly.Msg.SWITCH_DEFAULT_TOOLTIP = \"マッチする条件がない時\";\r\nBlockly.Msg.SWITCH_CASE = \"が %1 の場合\";\r\nBlockly.Msg.SWITCH_CASE_TOOLTIP = \"指定した値にマッチした場合\";\r\nBlockly.Msg.SWITCH_CASE_LIST = \"の場合\";\r\nBlockly.Msg.SWITCH_CASE_LIST_TOOLTIP = \"全ての有効な条件\";\r\nBlockly.Msg.SWITCH_DO = \"do\";\r\nBlockly.Msg.MISC_JAVASCRIPT = \"JavaScript ステートメント %1;\";\r\nBlockly.Msg.MISC_JAVASCRIPT_TOOLTIP = \"特定の機能を提供するブロックがない場合、JavaScriptコードを入力できる\";\r\nBlockly.Msg.MISC_JSEXPRESS = \"JavaScript式 %1\";\r\nBlockly.Msg.MISC_JSEXPRESS_TOOLTIP = \"(使用には注意が必要)特定の機能を提供するブロックがない場合、JavaScriptコードを入力できる\";\r\nBlockly.Msg.MISC_COMMENT = \"%1 のコメント\";\r\nBlockly.Msg.MISC_COMMENT_TOOLTIP = \"ロジックの動作を説明するコメントを追加\";\r\nBlockly.Msg.MISC_JSMULTILINE = \"複数行のJSコード %1\";\r\nBlockly.Msg.MISC_JSMULTILINE_TOOLTIP = \"特定の機能を提供するブロックがない場合に、複数行のJavaScriptコードを入力できる\";\r\n\r\n// =========================================================================================\r\n// Datetime blocks\r\n// =========================================================================================\r\nBlockly.Msg.DATETIME_INPUT = \"日付 %1\";\r\nBlockly.Msg.DATETIME_INPUT_TOOLTIP = \"日付\";\r\nBlockly.Msg.DATETIME_TIMESTAMP = \"%1 タイムスタンプ\";\r\nBlockly.Msg.DATETIME_TIMESTAMP_TOOLTIP = \"今のタイムスタンプを取得 (今の日付時刻のこと)\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE = \"タイムスタンプ %2 から日時情報 %1 を取得\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TOOLTIP = \"タイムスタンプから指定した情報を取得\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_NR = \"タイムスタンプ形式\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MSEC = \"ミリ秒\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_SEC = \"秒\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MIN = \"分\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_HOUR = \"時\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY = \"日\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_OF_WEEK = \"曜日\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH = \"月\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_YEAR = \"年\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TEXT = \"日付\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_FULL = \"長い形式の日付\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_NAME = \"曜日名\";\r\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH_NAME = \"月名称\";\r\nBlockly.Msg.DATETIME_CONVERT_TO_DATE = \"%1 から日付を生成\";\r\nBlockly.Msg.DATETIME_CONVERT_TO_DATE_TOOLTIP = \"指定した値から日付を生成\";\r\nBlockly.Msg.DATETIME_FORMAT = \"タイムスタンプ %1 を %2 形式に変換\";\r\nBlockly.Msg.DATETIME_FORMAT_TOOLTIP = \"タイムスタンプを指定した形式に変換\";\r\nBlockly.Msg.DATETIME_UTC = \"UTC\";\r\nBlockly.Msg.DATETIME_LOCAL = \"ローカル\";\r\n\r\n// =========================================================================================\r\n// Timer blocks\r\n// =========================================================================================\r\nBlockly.Msg.TIMER_SET_TIMEOUT = \"%1 を 遅延時間 %2 %3 後に実行\";\r\nBlockly.Msg.TIMER_SET_TIMEOUT_1 = \"%1\";\r\nBlockly.Msg.TIMER_SET_TIMEOUT_NAME = \"タイマー実行\";\r\nBlockly.Msg.TIMER_SET_TIMEOUT_TOOLTIP = \"指定した遅延時間後に含まれたブロックを実行\";\r\nBlockly.Msg.TIMER_CLEAR_TIMEOUT = \"タイマー実行 %1 を停止\";\r\nBlockly.Msg.TIMER_CLEAR_TIMEOUT_TOOLTIP = \"タイマー実行をキャンセル\";\r\nBlockly.Msg.TIMER_SET_INTERVAL = \"%1 を %2 %3 毎に定期実行\";\r\nBlockly.Msg.TIMER_SET_INTERVAL_1 = \"%1\";\r\nBlockly.Msg.TIMER_SET_INTERVAL_NAME = \"定期実行\";\r\nBlockly.Msg.TIMER_SET_INTERVAL_TOOLTIP = \"指定された時間間隔で含まれたブロックを定期的に実行\";\r\nBlockly.Msg.TIMER_CLEAR_INTERVAL = \"定期実行 %1 を停止\";\r\nBlockly.Msg.TIMER_CLEAR_INTERVAL_TOOLTIP = \"定期実行ブロックをキャンセル\";\r\nBlockly.Msg.TIMER_TIMER_MS = \"ミリ秒\";\r\nBlockly.Msg.TIMER_TIMER_SEC = \"秒\";\r\nBlockly.Msg.TIMER_TIMER_MIN = \"分\";\r\nBlockly.Msg.TIMER_NONE_SELECTED = \"選択なし\";\r\n","output":"str","x":863,"y":1822,"wires":[["2f88b9cacf9acb03"]]},{"id":"2f88b9cacf9acb03","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"nl.js","filename":"messages/nl.js","format":"javascript","syntax":"mustache","template":"// =========================================================================================\n// Node-RED blocks\n// =========================================================================================\nBlockly.Msg.NODE_OBJECT_GET_JSON = \"%1 %2 eigenschap %3\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET_TOOLTIP = \"Zoek een eigenschap van een object.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE_TOOLTIP = \"Verwijder een eigenschap van een object.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS_TOOLTIP = \"Controleer of een object een eigenschap heeft.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET = \"zoek\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE = \"verwijder\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS = \"heeft\";\nBlockly.Msg.NODE_OBJECT_GET_WARNING = \"Zorg er voor dat de variabele geen dieperliggende waarde bevat zoals foo.bar.\";\nBlockly.Msg.NODE_OBJECT_SET_JSON = \"zet %1 eigenschap %2 op %3\";\nBlockly.Msg.NODE_OBJECT_SET_JSON_TOOLTIP = \"Zet de eigenschap van een object.\";\nBlockly.Msg.NODE_OBJECT_SET_WARNING = \"Dieperliggende eigenschappen kunnen enkel als waarde een vaste tekst hebben.\";\nBlockly.Msg.NODE_LOG = \"log tekst %1 met niveau %2\";\nBlockly.Msg.NODE_LOG_TOOLTIP = \"Log de tekst via de Node-RED functie API.\";\nBlockly.Msg.NODE_LOG_LOG = \"log\";\nBlockly.Msg.NODE_LOG_WARNING = \"waarschuwing\";\nBlockly.Msg.NODE_LOG_ERROR = \"fout\";\nBlockly.Msg.NODE_LOG_DEBUG = \"debug\";\nBlockly.Msg.NODE_LOG_TRACE = \"trace\";\nBlockly.Msg.NODE_MSG = \"msg\";\nBlockly.Msg.NODE_MSG_TOOLTIP = \"De Node-RED input message.\";\nBlockly.Msg.NODE_REMOVE_STATUS = \"node status verwijderen\";\nBlockly.Msg.NODE_REMOVE_STATUS_TOOLTIP = \"Verwijder de node status via de Node-RED functie API.\";\nBlockly.Msg.NODE_CLONE = \"kopiëer %1\";\nBlockly.Msg.NODE_CLONE_TOOLTIP = \"Kopiëer het bericht via de Node-RED functie API.\";\nBlockly.Msg.NODE_STATUS = \"zet node status text %1 met kleur %2 en vorm %3\";\nBlockly.Msg.NODE_STATUS_TOOLTIP = \"Zet de node status via de Node-RED functie API.\";\nBlockly.Msg.NODE_STATUS_RING = \"ring\";\nBlockly.Msg.NODE_STATUS_DOT = \"bol\";\nBlockly.Msg.NODE_PROPERTIES = \"zoek node %1\";\nBlockly.Msg.NODE_PROPERTIES_TOOLTIP = \"Zoek de opgegeven eigenschap via de Node-RED functie API.\";\nBlockly.Msg.NODE_PROPERTIES_ID = \"identificatie nummer\";\nBlockly.Msg.NODE_PROPERTIES_NAME = \"naam\";\nBlockly.Msg.NODE_PROPERTIES_OUTPUT_COUNT = \"aantal uitgangen\";\nBlockly.Msg.NODE_PROPERTIES_PATH = \"pad\";\nBlockly.Msg.NODE_FLOW_MEMORY = \"flow\";\nBlockly.Msg.NODE_FLOW_MEMORY_TOOLTIP = \"Toegang krijgen tot de gegevens in het Node-RED flow geheugen.\";\nBlockly.Msg.NODE_CONTEXT_MEMORY = \"(node) context\";\nBlockly.Msg.NODE_CONTEXT_MEMORY_TOOLTIP = \"Toegang krijgen tot de gegevens in het Node-RED node (context) geheugen.\";\nBlockly.Msg.NODE_GLOBAL_MEMORY = \"globaal\";\nBlockly.Msg.NODE_GLOBAL_MEMORY_TOOLTIP = \"Toegang krijgen tot de gegevens in het Node-RED globale geheugen.\";\nBlockly.Msg.NODE_SEND = \"verzend %1 naar uitgang %2\";\nBlockly.Msg.NODE_SEND_TOOLTIP = \"Verzend het bericht via the Node-RED functie API.\";\nBlockly.Msg.NODE_SEND_WARNING = \"Wanneer berichten in een lus verzonden worden,\\ndan moeten de berichten uniek zijn!\";\nBlockly.Msg.NODE_RETURN_MESSAGE = \"geef %1 terug naar uitgang %2\";\nBlockly.Msg.NODE_RETURN_MESSAGE_TOOLTIP = \"Verstuur uitgangsbericht en keer terug om de verwerking te stoppen.\";\nBlockly.Msg.NODE_RETURN = \"terugkeren\";\nBlockly.Msg.NODE_RETURN_TOOLTIP = \"Keer terug om de verwerking te stoppen (zonder een uitgangsbericht te versturen).\";\nBlockly.Msg.NODE_CLOSE = \"bij sluiten van de node\";\nBlockly.Msg.NODE_CLOSE_1 = \"%1\";\nBlockly.Msg.NODE_CLOSE_TOOLTIP = \"Acties die uitgevoerd moeten worden wanneer de node gesloten wordt.\";\nBlockly.Msg.NODE_DONE = \"bericht afgehandeld\";\nBlockly.Msg.NODE_DONE_TOOLTIP = \"Verwerking van het bericht is afgehandeld.\";\nBlockly.Msg.NODE_ENV = \"zoek omgevings veranderlijke %1\";\nBlockly.Msg.NODE_ENV_TOOLTIP = \"Haal de waarde van de omgevings veranderlijke op.\";\n\n// =========================================================================================\n// Buffer blocks\n// =========================================================================================\nBlockly.Msg.BUFFER_FROM_STRING = \"maak buffer vanuit tekst %1 met codering %2\";\nBlockly.Msg.BUFFER_FROM_STRING_TOOLTIP = \"Genereer een buffer vanuit een tekst.\";\nBlockly.Msg.BUFFER_TO_STRING = \"maak tekst van buffer %1 met codering %2\";\nBlockly.Msg.BUFFER_TO_STRING_TOOLTIP = \"Zet de buffer om naar een tekst.\";\nBlockly.Msg.BUFFER_LENGTH = \"zoek lengte van buffer %1\";\nBlockly.Msg.BUFFER_LENGTH_TOOLTIP = \"Zoek de buffer lengte in bytes.\";\nBlockly.Msg.BUFFER_ALLOC = \"maak buffer met lengte %1\";\nBlockly.Msg.BUFFER_ALLOC_TOOLTIP = \"Maak een buffer met de opgegeven lengte.\";\nBlockly.Msg.BUFFER_FILL = \"vul buffer %1 met waarde %2\";\nBlockly.Msg.BUFFER_FILL_TOOLTIP = \"Vul de buffer met de opgegeven waarde.\";\nBlockly.Msg.BUFFER_CHECK = \"controleer of %1 buffer is\";\nBlockly.Msg.BUFFER_CHECK_TOOLTIP = \"Controleer of de ingangswaarde een buffer is.\";\nBlockly.Msg.BUFFER_COPY = \"kopiëer van buffer %1 naar buffer %2\";\nBlockly.Msg.BUFFER_COPY_TOOLTIP = \"Kopiëer van de eerste buffer naar de tweede buffer.\";\nBlockly.Msg.BUFFER_CONCATENATE = \"voeg buffer %1 en %2 samen\";\nBlockly.Msg.BUFFER_CONCATENATE_TOOLTIP = \"Voeg de 2 buffers samen om 1 grote nieuwe buffer te maken.\";\nBlockly.Msg.BUFFER_EMPTY = \"lege buffer\";\nBlockly.Msg.BUFFER_EMPTY_TOOLTIP = \"Maak een lege buffer, d.w.z; een buffer met lengte 0.\";\nBlockly.Msg.BUFFER_BYTE = \"byte %1\";\nBlockly.Msg.BUFFER_BYTE_TOOLTIP = \"Een byte waarde.\";\nBlockly.Msg.BUFFER_GET_INDEX = \"zoek waarde op positie %1 van buffer %2\";\nBlockly.Msg.BUFFER_GET_INDEX_TOOLTIP = \"Zoek de waarde van de opgegeven buffer positie.\";\nBlockly.Msg.BUFFER_SET_INDEX = \"zet de byte op positie %1 van buffer %2 op waarde %3\";\nBlockly.Msg.BUFFER_SET_INDEX_TOOLTIP = \"Zet de waarde van de byte op de opgegeven buffer positie.\";\n\n// =========================================================================================\n// Objects (JSON) blocks\n// =========================================================================================\nBlockly.Msg.OBJECT_FROM_JSON = \"maak object van JSON tekst %1\";\nBlockly.Msg.OBJECT_FROM_JSON_TOOLTIP = \"Maak een object van een JSON tekst.\";\nBlockly.Msg.OBJECT_TO_JSON = \"genereer JSON tekst van objekt %1\";\nBlockly.Msg.OBJECT_TO_JSON_TOOLTIP = \"Bewaar het object als een JSON tekst.\";\nBlockly.Msg.OBJECT_CREATE = \"maak een object\";\nBlockly.Msg.OBJECT_CREATE_TOOLTIP = \"Maak een nieuw object, optioneel met eigenschap waarden.\";\nBlockly.Msg.OBJECT_FIELD_NAME = \"eigenschap\";\nBlockly.Msg.OBJECT_KEYS = \"zoek eigenschappen van %1\";\nBlockly.Msg.OBJECT_KEYS_TOOLTIP = \"Zoek alle eigenschappen van het object.\";\n\n// =========================================================================================\n// Extra blocks\n// =========================================================================================\nBlockly.Msg.TEXT_SPECIAL_CHARACTER = \"speciaal leesteken %1\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TOOLTIP = \"Een speciaal leesteken dat niet vermeden moet worden (door een '\\\\' ontsnappingsteken).\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_LF = \"regel opschuiving (LF) (\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CR = \"sprong naar links (CR) (\\\\r)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CRLF = \"sprong naar links, nieuwe regel (CRLF) (\\\\r\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TAB = \"inspringing (TAB) (\\\\t)\";\nBlockly.Msg.TIMER_CONDITIONAL = \"herhaal elke %1 seconden, totdat %2 %3\";\nBlockly.Msg.TIMER_CONDITIONAL_TOOLTIP = \"Herhaal met vaste intervallen tot een bepaalde voorwaarde voldaan is.\";\nBlockly.Msg.TIMER_COUNTING = \"herhaal %1 keer elke %2 seconden %3 %4\";\nBlockly.Msg.TIMER_COUNTING_TOOLTIP = \"Herhaal een aantal keren op vaste intervallen.\";\nBlockly.Msg.SWITCH = \"ingangswaarde %1 in het geval van %2 doe %3\";\nBlockly.Msg.SWITCH_TOOLTIP = \"Voer bepaalde acties uit afhankelijk van de ingangswaarden.\";\nBlockly.Msg.SWITCH_DEFAULT = \"standaard\";\nBlockly.Msg.SWITCH_DEFAULT_TOOLTIP = \"Wanneer er geen gevallen overeenkomen.\";\nBlockly.Msg.SWITCH_CASE = \"in geval van %1\";\nBlockly.Msg.SWITCH_CASE_TOOLTIP = \"Wanneer een specifieke waarde overeenkomt.\";\nBlockly.Msg.SWITCH_CASE_LIST = \"in geval van\";\nBlockly.Msg.SWITCH_CASE_LIST_TOOLTIP = \"Lijst van alle mogelijke gevallen.\";\nBlockly.Msg.SWITCH_DO = \"doe\";\nBlockly.Msg.MISC_JAVASCRIPT = \"JavaScript statement %1;\";\nBlockly.Msg.MISC_JAVASCRIPT_TOOLTIP = \"Voer JavaScript code in, wanneer de andere blokken bepaalde functionaliteit niet aanbieden.\";\nBlockly.Msg.MISC_JSEXPRESS = \"JavaScript uitdrukking %1\";\nBlockly.Msg.MISC_JSEXPRESS_TOOLTIP = \"Gebruik dit voorzichtig. Geef enkel JavaScript code in wanneer geen bloks deze functionaliteit aanbieden.\";\nBlockly.Msg.MISC_COMMENT = \"commentaar %1\";\nBlockly.Msg.MISC_COMMENT_TOOLTIP = \"Voeg commentaar toe om uit te leggen hoe de logica werkt.\";\nBlockly.Msg.MISC_JSMULTILINE = \"meerder lijnen JS code %1\";\nBlockly.Msg.MISC_JSMULTILINE_TOOLTIP = \"Geef enkel meerdere lijnen JavaScript code in, wanneer geen andere blokken deze functionaliteit aanbieden.\";\n\n// =========================================================================================\n// Datetime blocks\n// =========================================================================================\nBlockly.Msg.DATETIME_INPUT = \"datum %1\";\nBlockly.Msg.DATETIME_INPUT_TOOLTIP = \"Een datum.\";\nBlockly.Msg.DATETIME_TIMESTAMP = \"%1 tijdstip\";\nBlockly.Msg.DATETIME_TIMESTAMP_TOOLTIP = \"Zoek het huidige tijdstip (d.w.z. datum en tijd van nu).\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE = \"zoek %1 van tijdstip %2\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TOOLTIP = \"Zoek de opgegeven infromatie van een tijdstip.\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_NR = \"tijdstip formaat\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MSEC = \"milliseconden\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_SEC = \"seconden\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MIN = \"minuten\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_HOUR = \"uur\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY = \"dag\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_OF_WEEK = \"dag van de week\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH = \"maand\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_YEAR = \"jaar\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TEXT = \"datum\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_FULL = \"volledige datum\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_NAME = \"naam van de dag\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH_NAME = \"naam van de maand\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE = \"maak datum van %1\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE_TOOLTIP = \"Maak een datum o.b.v. de opgegeven waarde.\";\nBlockly.Msg.DATETIME_FORMAT = \"zet tijdstip %1 om naar formaat %2\";\nBlockly.Msg.DATETIME_FORMAT_TOOLTIP = \"Zet een tijdstip om naar een bepaald formaat.\";\nBlockly.Msg.DATETIME_UTC = \"UTC\";\nBlockly.Msg.DATETIME_LOCAL = \"lokaal\";\n\n// =========================================================================================\n// Timer blocks\n// =========================================================================================\nBlockly.Msg.TIMER_SET_TIMEOUT = \"voer %1 vertraagd uit na %2 %3\";\nBlockly.Msg.TIMER_SET_TIMEOUT_1 = \"%1\";\nBlockly.Msg.TIMER_SET_TIMEOUT_NAME = \"vertraging\";\nBlockly.Msg.TIMER_SET_TIMEOUT_TOOLTIP = \"Voer de ingesloten blokken uit na een opgegeven vertraging.\";\nBlockly.Msg.TIMER_CLEAR_TIMEOUT = \"stop vertraging %1\";\nBlockly.Msg.TIMER_CLEAR_TIMEOUT_TOOLTIP = \"Annuleer de vertraagde uitvoering.\";\nBlockly.Msg.TIMER_SET_INTERVAL = \"voer het interval %1 elke %2 %3 uit\";\nBlockly.Msg.TIMER_SET_INTERVAL_1 = \"%1\";\nBlockly.Msg.TIMER_SET_INTERVAL_NAME = \"interval\";\nBlockly.Msg.TIMER_SET_INTERVAL_TOOLTIP = \"Voer de ingesloten blokken periodiek uit met het opgegeven interval.\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL = \"stop interval %1\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL_TOOLTIP = \"Annuleer de periodieke uitvoering van de blokken.\";\nBlockly.Msg.TIMER_TIMER_MS = \"msec\";\nBlockly.Msg.TIMER_TIMER_SEC = \"sec\";\nBlockly.Msg.TIMER_TIMER_MIN = \"min\";\nBlockly.Msg.TIMER_NONE_SELECTED = \"geen\";\n","output":"str","x":863,"y":1872,"wires":[["07ee5293c9a74dc5"]]},{"id":"07ee5293c9a74dc5","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"nodeRedBlocksCodeGen.js","filename":"lib/nodered/nodeRedBlocksCodeGen.js","format":"javascript","syntax":"mustache","template":"Blockly.JavaScript['node_object_get'] = function(block) {\n    const value_field_name = Blockly.JavaScript.valueToCode(block, 'field_name', Blockly.JavaScript.ORDER_ATOMIC) || '\"\"';\n    const value_object = Blockly.JavaScript.valueToCode(block, 'object', Blockly.JavaScript.ORDER_ATOMIC); \n    const value_action = block.getFieldValue('action');\n    var code;\n    \n    // Two syntaxes are available to get the content of an object property:\n    // * someObject.someProperty\n    // * someObject['someProperty']\n    // The first syntax is more readable, especially when working with nested properties:\n    // * someObject.someProperty.someNestedProperty\n    // * someObject['someProperty']['someNestedProperty']\n    // However we will need to use the second syntax (i.e. property by string name), because you can \n    // only use the second case in some circumstances:\n    // * when a property name contains spaces (which is allowed in Javascript)\n    // * when a property name is not passed as a literal (but e.g. as a string variable):\n    //     someObject[someVariable]\n    // To avoid having a mix of both syntaxes, we will always generate the second syntax.\n    \n    function splitNestedFields(fieldName) {\n        // We split string literals into multiple string literals, if one or more '.' available.\n        // However when the input is not a string literal (e.g. a variable) then we should leave it unchanged.\n        if (!fieldName.match(/^'(.*)'$/)) {\n            return '[' + fieldName + ']';\n        }        \n        \n        // Remove the quotes at the start and the end of the fieldName\n        fieldName = fieldName.replace(/^'(.*)'$/, '$1');\n\n        var fields = fieldName.split(\".\");\n        var splittedFields = '';\n\n        for (var i = 0; i < fields.length; i++ ) {\n            splittedFields += '[\\'' + fields[i] + '\\']';\n        }\n\n        return splittedFields;\n    }\n  \n    // When a Node-Red memory area is applied, we will get the property from that memory.\n    // Otherwise we will read the property from the Javascript object.\n    switch (value_action) {\n        case \"REMOVE\":\n            switch(value_object) {\n                case 'context':\n                    code = 'context.set(' + value_field_name + ', undefined);\\n';\n                    break;\n                case 'flow':\n                    code = 'flow.set(' + value_field_name + ', undefined);\\n';\n                    break;\n                case 'global':\n                    code = 'global.set(' + value_field_name + ', undefined);\\n';\n                    break;\n                default: // normal object (i.e. no Node-RED specific memory)\n                    code = 'delete ' + value_object + splitNestedFields(value_field_name) + ';\\n';\n            }\n            \n            // Return the code as a statement\n            return code;\n        case \"HAS\":\n            switch(value_object) {\n                case 'context':\n                    code = 'context.keys().includes(' + value_field_name + ')';\n                    break;\n                case 'flow':\n                    code = 'flow.keys().includes(' + value_field_name + ')';\n                    break;\n                case 'global':\n                    code = 'global.keys().includes(' + value_field_name + ')';\n                    break;\n                default: // normal object (i.e. no Node-RED specific memory)\n                    code = value_field_name + ' in ' + value_object;\n            }\n            \n            // Return the code as a value\n            return [code, Blockly.JavaScript.ORDER_NONE];        \n        default: // \"GET\"\n            switch(value_object) {\n                case 'context':\n                    code = 'context.get(' + value_field_name + ')';\n                    break;\n                case 'flow':\n                    code = 'flow.get(' + value_field_name + ')';\n                    break;\n                case 'global':\n                    code = 'global.get(' + value_field_name + ')';\n                    break;\n                default: // normal object (i.e. no Node-RED specific memory)\n                    code = value_object + splitNestedFields(value_field_name);\n            }\n            \n            // Return the code as a value\n            return [code, Blockly.JavaScript.ORDER_NONE];\n    }\n};\n\nBlockly.JavaScript['node_object_set'] = function(block) {\n    const value_field_name = Blockly.JavaScript.valueToCode(block, 'field_name', Blockly.JavaScript.ORDER_ATOMIC) || '\"\"';\n    const value_object_field = Blockly.JavaScript.valueToCode(block, 'object_field', Blockly.JavaScript.ORDER_ATOMIC);\n    const value_value_field = Blockly.JavaScript.valueToCode(block, 'value_field', Blockly.JavaScript.ORDER_ATOMIC);\n    var code;\n    \n    function splitNestedFields(fieldName) {\n        // We split string literals into multiple string literals, if one or more '.' available.\n        // However when the input is not a string literal (e.g. a variable) then we should leave it unchanged.\n        if (!fieldName.match(/^'(.*)'$/)) {\n            return '[' + fieldName + ']';\n        }\n        // Remove the quotes at the start and the end of the fieldName\n        fieldName = fieldName.replace(/^'(.*)'$/, '$1');\n\n        var fields = fieldName.split(\".\");\n        var splittedFields = '';\n\n        for (var i = 0; i < fields.length; i++ ) {\n            splittedFields += '[\\'' + fields[i] + '\\']';\n        }\n\n        return splittedFields;\n    }\n\n    // When a Node-Red memory area is applied, we will set the property to that memory.\n    // Otherwise we will write the property to the Javascript object.  \n    switch(value_object_field) {\n        case 'context':\n            code = 'context.set(' + value_field_name + ', ' + value_value_field + ');\\n';\n            break;\n        case 'flow':\n            code = 'flow.set(' + value_field_name + ', ' + value_value_field + ');\\n';\n            break;\n        case 'global':\n            code = 'global.set(' + value_field_name + ', ' + value_value_field + ');\\n';\n            break;\n        default:\n            code = value_object_field + splitNestedFields(value_field_name) + ' = ' + value_value_field + ';\\n';\n    }\n    \n    return code;\n};\n\nBlockly.JavaScript['node_log'] = function(block) {\n   var code;\n\n   const inputValue = Blockly.JavaScript.valueToCode(block, 'LOG_MESSAGE_INPUT', Blockly.JavaScript.ORDER_ATOMIC) || '\"\"';\n    \n   // The 'warn' and 'error' also get sent to the flow editor debug tab (in contradiction to 'log').\n   // For finer grained logging 'trace' and 'debug' are only visible, when a logger is configured to show those levels.\n   switch(block.getFieldValue('LOG_LEVEL')) {\n        case 'LOG':\n            code = 'node.log(' + inputValue + ');\\n';\n            break;\n        case 'WARN':\n            code = 'node.warn(' + inputValue + ');\\n';\n            break;\n        case 'ERR':\n            code = 'node.error(' + inputValue + ');\\n';\n            break;\n        case 'DEBUG':\n            code = 'node.debug(' + inputValue + ');\\n';\n            break;\n        case 'TRACE':\n            code = 'node.trace(' + inputValue + ');\\n';                           \n            break;\n    }\n    \n    return code;\n};\n\nBlockly.JavaScript['node_msg'] = function(block) {\n    var code = 'msg';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['node_send'] = function(block) {\n    const outputNumber = block.getFieldValue('OUTPUT_NR') || 1;\n    const inputValue = Blockly.JavaScript.valueToCode(block, 'MESSAGE_INPUT', Blockly.JavaScript.ORDER_ATOMIC) || '{}';\n    \n    if (!Blockly.nodeOutputs || outputNumber > Blockly.nodeOutputs) {\n        // When an unexisting output number is specified, don't send anything\n        return 'node.error(\"Cannot send to output ' + outputNumber + ', since only ' + Blockly.nodeOutputs + ' outputs available\");\\n';\n    }\n    \n    var code = 'node.send([';\n    \n    // Send the message only to the specified output number, and null to all other outputs.\n    for (var i = 1; i <= Blockly.nodeOutputs; i++) {\n        if (i > 1) {\n            code += ', ';\n        }\n        \n        if (i == outputNumber) {\n            code += inputValue;\n        }\n        else {\n            code += 'null';\n        }\n    }\n    \n    code += ']);\\n';\n    \n    return code;\n};\n\nBlockly.JavaScript['node_return_message'] = function(block) {\n    const outputNumber = block.getFieldValue('OUTPUT_NR') || 1;\n    const inputValue = Blockly.JavaScript.valueToCode(block, 'MESSAGE_INPUT', Blockly.JavaScript.ORDER_ATOMIC) || '{}';\n    \n    if (!Blockly.nodeOutputs || outputNumber > Blockly.nodeOutputs) {\n        // When an unexisting output number is specified, don't return anything\n        return 'node.error(\"Cannot return to output ' + outputNumber + ', since only ' + Blockly.nodeOutputs + ' outputs available\");\\nreturn\\n';\n    }\n    \n    var code = 'return ';\n    \n    if (Blockly.nodeOutputs > 1) {\n        code += '[';\n    }\n    \n    // Return the message only to the specified output number, and null to all other outputs.\n    for (var i = 1; i <= Blockly.nodeOutputs; i++) {\n        if (i > 1) {\n            code += ', ';\n        }\n        \n        if (i == outputNumber) {\n            code += inputValue;\n        }\n        else {\n            code += 'null';\n        }\n    }\n    \n    if (Blockly.nodeOutputs > 1) {\n        code += ']';\n    }\n    \n    code += ';\\n';\n    \n    return code;\n};\n\nBlockly.JavaScript['node_return'] = function(block) {\n    var code = 'return;\\n';\n    return code;\n};\n\nBlockly.JavaScript['node_clone'] = function(block) {\n    const inputValue = Blockly.JavaScript.valueToCode(block, 'OBJECT_INPUT', Blockly.JavaScript.ORDER_ATOMIC) || '{}';\n    \n    var code = 'RED.util.cloneMessage(' + inputValue + ')';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['node_properties'] = function(block) {\n    var code;\n\n    // node.id and node.name will become available in the sandbox, starting from node-red version 0.19\n    // node.path was added in node-red version 3.1.0\n    switch(block.getFieldValue('PROPERTY_NAME')) {\n        case 'ID':\n            code = 'node.id';\n            break;\n        case 'NAME':\n            code = 'node.name';\n            break;\n        case 'OUTPUT_COUNT':\n            code = 'node.outputCount';\n            break;\n        case 'PATH':\n            code = 'node.path';\n            break;\n    }\n    \n    return [code, Blockly.JavaScript.ORDER_ATOMIC]; \n};\n\nBlockly.JavaScript['node_status'] = function(block) {\n    var code, colourName;\n    \n    // Convert the hex colour value to colour name\n    switch(block.getFieldValue('COLOUR').toUpperCase()) {\n        case '#FF0000':\n            colourName = 'red';\n            break;\n        case '#00FF00':\n            colourName = 'green';\n            break;\n        case '#FFFF00':\n            colourName = 'yellow';\n            break;\n        case '#0000FF':\n            colourName = 'blue';\n            break;\n        case '#888888':\n            colourName = 'grey';\n            break;\n        default:\n            colourName = 'blue';\n    }\n    \n    const shape = block.getFieldValue('SHAPE').toLowerCase();\n    const textValue = Blockly.JavaScript.valueToCode(block, 'TEXT_INPUT', Blockly.JavaScript.ORDER_ATOMIC);\n    \n    // Remark: the ${textValue} already contains quotes\n    if(!textValue || textValue === '\\'\\'') {\n        // When the status text is empty (i.e. contains only ''), an error text will be displayed as node status by Node-RED.\n        // Therefore we will consider that an empty status text, means that the node doesn't need a status.\n        code = 'node.status({});\\n';\n    }\n    else {        \n        code = 'node.status({fill:\"' + colourName + '\", shape:\"' + shape + '\", text:' + textValue + '});\\n';\n    }\n    \n    return code;\n};\n\nBlockly.JavaScript['node_remove_status'] = function(block) {\n    var code = 'node.status({});\\n';\n    return code;\n};\n\nBlockly.JavaScript['node_close'] = function(block) {\n    const statements = Blockly.JavaScript.statementToCode(block, 'STATEMENTS') || '';\n\n    var code = 'node.on(\"close\", function() {\\n ' + statements + '});\\n';\n    return code;\n};\n\nBlockly.JavaScript['node_done'] = function(block) {\n    var code = 'node.done();\\n';\n    return code;\n};\n\nBlockly.JavaScript['node_env'] = function(block) {\n    const variableName = Blockly.JavaScript.valueToCode(block, 'VARIABLE_NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    const code = 'env.get(' + variableName + ')';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['node_global_memory'] = function(block) {\n    var code = 'global';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['node_flow_memory'] = function(block) {\n    var code = 'flow';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['node_context_memory'] = function(block) {\n    var code = 'context';\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","output":"str","x":1224,"y":1018,"wires":[["d2350b7e87cf4db2"]]},{"id":"d2350b7e87cf4db2","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"nodeRedBlocksDefs.js","filename":"lib/nodered/nodeRedBlocksDefs.js","format":"javascript","syntax":"mustache","template":"Blockly.Blocks['node_object_get'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_object_get\",\n            \"message0\": Blockly.Msg.NODE_OBJECT_GET_JSON,\n            \"args0\": [\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"action\",\n                    \"options\": [[Blockly.Msg.NODE_OBJECT_GET_JSON_GET   , \"GET\"   ],\n                                [Blockly.Msg.NODE_OBJECT_GET_JSON_HAS   , \"HAS\"   ],\n                                [Blockly.Msg.NODE_OBJECT_GET_JSON_REMOVE, \"REMOVE\"]]\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"object\",\n                    \"check\": \"Object\",\n                    \"align\": \"RIGHT\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"field_name\",\n                    \"check\": \"String\",\n                    \"align\": \"RIGHT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": null,\n            \"colour\": '#BB8FCE',\n            \"helpUrl\": \"\"\n        });\n        \n        // Assign 'this' to a variable for use in both callback functions below.\n        var thisBlock = this;\n        \n        // Create a dynamic tooltip that depends on the selected action\n        this.setTooltip(function() {\n            const action = thisBlock.getFieldValue('action');\n      \n            switch (action) {\n                case 'REMOVE':\n                    return Blockly.Msg.NODE_OBJECT_GET_JSON_REMOVE_TOOLTIP;\n                case 'HAS':\n                    return Blockly.Msg.NODE_OBJECT_GET_JSON_HAS_TOOLTIP;\n                default: // GET\n                    return Blockly.Msg.NODE_OBJECT_GET_JSON_GET_TOOLTIP;\n            }\n        });\n        \n        // When another 'action' in the dropdown is selected, the shape of this block will need to be changed:\n        // - action = 'remove' : The block should be displayed as a statement\n        // - action = 'get' : The block should be displayed as a value\n        this.getField('action').setValidator(function(action) {\n            // Only update the shape of the block if we switch from input to statement (or the other way around).\n            // Don't do the unplug if the shape doesn't need to change, otherwise Blockly will automatically detach \n            // this (value) block from any other block it was attached to.  It would also be visually moved away in the editor...\n            // When the node' config screen is opened, the block shape should be immediately correct (thisBlock.previousAction is undefined).\n            if (thisBlock.previousAction !== action) {\n                if(thisBlock.previousAction) {\n                    thisBlock.unplug(true, true);\n                }\n                \n                switch (action) {\n                    case 'REMOVE': \n                        // statement block\n                        thisBlock.setOutput(false);\n                        thisBlock.setPreviousStatement(true);\n                        thisBlock.setNextStatement(true);\n                        break;\n                    case 'HAS':\n                        // value block\n                        thisBlock.setPreviousStatement(false);\n                        thisBlock.setNextStatement(false);\n                        thisBlock.setOutput(true, 'Boolean');\n                        break;\n                    default: // GET\n                        thisBlock.setPreviousStatement(false);\n                        thisBlock.setNextStatement(false);\n                        thisBlock.setOutput(true); // Any type\n                        break;\n                }\n            }\n            \n            thisBlock.previousAction = action;\n        });\n    },\n    mutationToDom: function() {\n        const actionDropdown = this.getField('action');\n        const action = actionDropdown.getValue();\n\n        // Store the action in a mutation element (otherwise the domToMutation is never called afterwards)\n        var container = document.createElement('mutation');\n        container.setAttribute('action', action);\n        return container;\n    },\n    domToMutation: function(xmlElement) {\n        const actionDropdown = this.getField('action');\n        \n        // Get the stored action from the mutator container element\n        const action = xmlElement.getAttribute('action');\n        \n        // When the initial 'action' value (from the workspace XML) will be loaded into the dropdown, the \n        // dropdown validator will NOT be triggered!  So we need to call the validator ourselves for the initial value.\n        // Otherwise the block shape will not be correct when the node's config screen is opened.\n        actionDropdown.getValidator().call(this, action);\n    },\n    onchange: function() {\n        if(!this.workspace.isDragging || this.workspace.isDragging()) {\n            return;  // Don't change state at the start of a drag.\n        }\n\n        // Show a warning if the input is not a string literal (but e.g. a variable)\n        if (this.getInputTargetBlock('field_name').type !== \"text\") {\n            this.setWarningText(Blockly.Msg.NODE_OBJECT_GET_WARNING);\n        } \n        else {\n            this.setWarningText(null);\n        }\n    }\n};\n\n// This block has external inputs, unlike the other blocks (request of Simon Walters)\nBlockly.Blocks['node_object_set'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_object_set\",\n            \"message0\": Blockly.Msg.NODE_OBJECT_SET_JSON,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"object_field\",\n                    \"check\": \"Object\",\n                    \"align\": \"RIGHT\"\n                },    \n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"field_name\",\n                    \"check\": \"String\",\n                    \"align\": \"RIGHT\"\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"value_field\",\n                    \"align\": \"RIGHT\"\n                }\n            ],\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": '#BB8FCE',\n            \"tooltip\": Blockly.Msg.NODE_OBJECT_SET_JSON_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    },\n    onchange: function() {\n        if(!this.workspace.isDragging || this.workspace.isDragging()) {\n            return;  // Don't change state at the start of a drag.\n        }\n        \n        // Show a warning if the input is not a string literal (but e.g. a variable)\n        if (this.getInputTargetBlock('field_name').type !== \"text\") {\n            this.setWarningText(Blockly.Msg.NODE_OBJECT_GET_WARNING);\n        } \n        else {\n            this.setWarningText(null);\n        }\n    }\n};  \n\nBlockly.Blocks['node_log'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_log\",\n            \"message0\": Blockly.Msg.NODE_LOG,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"LOG_MESSAGE_INPUT\",\n                    \"check\": \"String\"\n                },\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"LOG_LEVEL\",\n                    \"options\": [[Blockly.Msg.NODE_LOG_LOG    , \"LOG\"   ], \n                                [Blockly.Msg.NODE_LOG_WARNING, \"WARN\"  ], \n                                [Blockly.Msg.NODE_LOG_ERROR  , \"ERR\"   ], \n                                [Blockly.Msg.NODE_LOG_DEBUG  , \"DEBUG\" ], \n                                [Blockly.Msg.NODE_LOG_TRACE  , \"TRACE\" ]]\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": true,\n            \"nextStatement\": true,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_LOG_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_msg'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_msg\",\n            \"message0\": Blockly.Msg.NODE_MSG,\n            \"output\": 'Object',\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_MSG_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_send'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_send\",\n            \"message0\": Blockly.Msg.NODE_SEND,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"MESSAGE_INPUT\",\n                    \"check\": \"Object\"\n                },\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"OUTPUT_NR_PLACEHOLDER\",\n                },\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_SEND_TOOLTIP,\n            \"helpUrl\": null,\n            \"extensions\": [\"output_numbers_extension\"]\n        });\n    },\n    onchange: function() {\n        if(!this.workspace.isDragging || this.workspace.isDragging()) {\n            return;  // Don't change state at the start of a drag.\n        }\n        \n        var insideLoop = false;\n        var block = this;\n\n        // Check whether this node_send block is (nested) inside a loop, by searching up the hierarchy to the root block\n        do {\n            if(Blockly.libraryBlocks.loops.loopTypes.has(block.type)) {\n                insideLoop = true;\n                break;\n            }\n            block = block.getSurroundParent();\n        } while (block);\n        \n        // Show a warning on the node_send block, when it is being used inside a loop\n        if (insideLoop) {\n            this.setWarningText(Blockly.Msg.NODE_SEND_WARNING);\n        } \n        else {\n            this.setWarningText(null);\n        }\n    }\n};\n\n// This block doesn't need an onchange event (similar to the node_send event), since the return would end the loop anyway.\nBlockly.Blocks['node_return_message'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_return_message\",\n            \"message0\": Blockly.Msg.NODE_RETURN_MESSAGE,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"MESSAGE_INPUT\",\n                    \"check\": \"Object\"\n                },\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"OUTPUT_NR_PLACEHOLDER\",\n                },\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_RETURN_MESSAGE_TOOLTIP,\n            \"helpUrl\": null,\n            \"extensions\": [\"output_numbers_extension\"]\n        });\n    }\n};\n\n// Extension to create a dropdown with available output numbers\nBlockly.Extensions.register('output_numbers_extension', function() {\n    var placeholder = this.inputList[1];\n    \n    // Create a dropdown that calculates its content as soon as the dropdown is opened\n    var dropdown = new Blockly.FieldDropdown(function() {\n        var options = [];\n        for (var i = 1; i <= Blockly.nodeOutputs; i++) {\n            options.push([i.toString(), i.toString()]);\n        }\n        return options;\n    });\n\n    // Remark: don't change the OUTPUT_NR field name, because it is also used in the blockly.html file!\n    placeholder.appendField(dropdown, 'OUTPUT_NR');\n});\n\nBlockly.Blocks['node_return'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_return\",\n            \"message0\": Blockly.Msg.NODE_RETURN,\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_RETURN_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_clone'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_clone\",\n            \"message0\": Blockly.Msg.NODE_CLONE,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"OBJECT_INPUT\",\n                    \"check\": \"Object\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'Object',\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_CLONE_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_properties'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_properties\",\n            \"message0\": Blockly.Msg.NODE_PROPERTIES,\n            \"args0\": [\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"PROPERTY_NAME\",\n                    \"options\": [[Blockly.Msg.NODE_PROPERTIES_ID, \"ID\"   ], \n                                [Blockly.Msg.NODE_PROPERTIES_NAME, \"NAME\" ],\n                                [Blockly.Msg.NODE_PROPERTIES_OUTPUT_COUNT, \"OUTPUT_COUNT\" ],\n                                [Blockly.Msg.NODE_PROPERTIES_PATH, \"PATH\" ]]\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": 'String',\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_PROPERTIES_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\n// Currently it is not possible to set the allowed colours of a colour field in JSON.\n// See issue https://github.com/google/blockly/issues/286.\n// This means currently you cannot do it like this:\n//                {\n//                    \"type\": \"field_colour\",\n//                    \"name\": \"COLOUR\",\n//                    \"colour\": \"#0000ff\",\n//                    \"colours\": ['#ff0000', '#00ff00', '#ffff00', '#0000ff', '#888888']\n//                },\n// Therefore I created a temporary workaround using an extension.\n// See https://groups.google.com/d/msg/blockly/CmKfC-Ri69k/RO-gjR1pAQAJ\n// TODO: remove the workaround as soon as the issue is solved by Google !!\nBlockly.Blocks['node_status'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_status\",\n            \"message0\": Blockly.Msg.NODE_STATUS,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"TEXT_INPUT\",\n                    \"check\": \"String\"\n                },\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"COLOUR_PLACEHOLDER\",\n                },\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"SHAPE\",\n                    \"options\": [[Blockly.Msg.NODE_STATUS_RING, \"RING\" ], \n                                [Blockly.Msg.NODE_STATUS_DOT , \"DOT\"  ]]\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_STATUS_TOOLTIP,\n            \"helpUrl\": null,\n            \"extensions\": [\"limited_colorpicker_extension\"]\n        });\n    }\n}\n\n// Extension to create a limited colour picker for the node_status block\nBlockly.Extensions.register('limited_colorpicker_extension', function() {\n    var placeholder = this.inputList[1];\n\n    // Set the allowed status colours (red, green, orange, blue, grey).    \n    var colourField = new Blockly.FieldColour('#00f');\n    colourField.setColours(['#ff0000', '#00ff00', '#ffff00', '#0000ff', '#888888']).setColumns(3);\n            \n    placeholder.appendField(colourField, 'COLOUR');\n});\n\nBlockly.Blocks['node_remove_status'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_remove_status\",\n            \"message0\": Blockly.Msg.NODE_REMOVE_STATUS,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_REMOVE_STATUS_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_close'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_close\",\n            \"message0\": Blockly.Msg.NODE_CLOSE,\n            \"message1\": Blockly.Msg.NODE_CLOSE_1,\n            \"args1\": [\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"STATEMENTS\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_CLOSE_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_done'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_done\",\n            \"message0\": Blockly.Msg.NODE_DONE,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_DONE_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_env'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_env\",\n            \"message0\": Blockly.Msg.NODE_ENV,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"VARIABLE_NAME\",\n                    \"check\": \"String\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": \"String\",\n            \"colour\": '#BB8FCE',\n            \"tooltip\": Blockly.Msg.NODE_ENV_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_flow_memory'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_flow_memory\",\n            \"message0\": Blockly.Msg.NODE_FLOW_MEMORY,\n            \"output\": 'Object',\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_FLOW_MEMORY_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_context_memory'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_context_memory\",\n            \"message0\": Blockly.Msg.NODE_CONTEXT_MEMORY,\n            \"output\": 'Object',\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_CONTEXT_MEMORY_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['node_global_memory'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"node_global_memory\",\n            \"message0\": Blockly.Msg.NODE_GLOBAL_MEMORY,\n            \"output\": 'Object',\n            \"colour\": \"#BB8FCE\",\n            \"tooltip\": Blockly.Msg.NODE_GLOBAL_MEMORY_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n","output":"str","x":1224,"y":1068,"wires":[["e1b99164f7d10118"]]},{"id":"e1b99164f7d10118","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"objectBlocksCodeGen.js","filename":"lib/json/objectBlocksCodeGen.js","format":"javascript","syntax":"mustache","template":"// Downloaded from https://gist.github.com/mark-friedman/48f43a9b62b1c8ad029a75d4b4e61f31\n// - And removed first line const Blockly = window.Blockly;\n// - Added support for Node-Red memory\n\nBlockly.JavaScript['object_from_json'] = function(block) {\n    const value_json = Blockly.JavaScript.valueToCode(block, 'JSON', Blockly.JavaScript.ORDER_ATOMIC);\n    const code = 'JSON.parse(' + value_json + ')';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['object_to_json'] = function(block) {\n    const value_object = Blockly.JavaScript.valueToCode(block, 'object', Blockly.JavaScript.ORDER_ATOMIC);\n    const code = 'JSON.stringify(' + value_object + ')';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['object_create'] = function(block) {\n    if (!block.numFields) {\n        return ['{}', Blockly.JavaScript.ORDER_NONE];\n    }\n    \n    var fieldInitCode = '';\n    for (var i = 1; i <= block.numFields; i++) {\n        if (i > 1) { \n            fieldInitCode += ', '; \n        }\n        \n        const fieldName = block.getFieldValue('field' + i);\n        const fieldValue = Blockly.JavaScript.valueToCode(block, 'field_input' + i, Blockly.JavaScript.ORDER_ATOMIC);\n        fieldInitCode += '\"' + fieldName + '\": ' + fieldValue;\n    }\n    var code = '{ ' + fieldInitCode + ' }';\n  \n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.JavaScript['object_keys'] = function(block) {\n    const value_object = Blockly.JavaScript.valueToCode(block, 'object_input', Blockly.JavaScript.ORDER_ATOMIC);\n    var code;\n    \n    switch(value_object) {\n        case 'context':\n            code = 'context.keys()';\n            break;\n        case 'flow':\n            code = 'flow.keys()';\n            break;\n        case 'global':\n            code = 'global.keys()';\n            break;\n        default: // normal object (i.e. no Node-RED specific memory)\n            code = 'Object.keys(' + value_object + ')';\n    }\n    \n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","output":"str","x":1224,"y":1118,"wires":[["7de0ac76305f3a04"]]},{"id":"7de0ac76305f3a04","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"objectBlocksDefs.js","filename":"lib/json/objectBlocksDefs.js","format":"javascript","syntax":"mustache","template":"Blockly.Blocks['object_from_json'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"object_from_json\",\n            \"message0\": Blockly.Msg.OBJECT_FROM_JSON,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"JSON\",\n                    \"check\": \"String\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": \"Object\",\n            \"colour\": '#F99EA3',\n            \"tooltip\": Blockly.Msg.OBJECT_FROM_JSON_TOOLTIP,\n            \"helpUrl\": \"http://www.json.org/\"\n        });\n    }\n};\n\nBlockly.Blocks['object_to_json'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"object_to_json\",\n            \"message0\": Blockly.Msg.OBJECT_TO_JSON,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"object\",\n                    \"check\": \"Object\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": null,\n            \"colour\": '#F99EA3',\n            \"tooltip\": Blockly.Msg.OBJECT_TO_JSON_TOOLTIP,\n            \"helpUrl\": \"http://www.json.org/\"\n        });\n    }\n};\n\nBlockly.Blocks['object_keys'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"object_keys\",\n            \"message0\": Blockly.Msg.OBJECT_KEYS,\n            \"args0\": [\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"object_input\",\n                    \"check\": \"Object\",\n                    \"align\": \"RIGHT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"output\": \"Array\",\n            \"colour\": '#F99EA3',\n            \"tooltip\": Blockly.Msg.OBJECT_KEYS_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};  \n\nBlockly.Blocks['object_create'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"object_create\",\n            \"message0\": Blockly.Msg.OBJECT_CREATE,\n            \"output\": \"Object\",\n            \"mutator\": \"controls_create_mutator\",\n            \"colour\": \"#F99EA3\",\n            \"tooltip\": Blockly.Msg.OBJECT_CREATE_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\nvar objectCreateMutator = {\n  numFields: 0,\n  fields: [],\n\n  /**\n   * Standard function for Mutator mixin. It's called to update the block based on contents of the mutator's XML\n   * DOM element.\n   */\n  domToMutation: function(xmlElement) {\n    this.fields = [];\n    for (let i = 0, childNode; childNode = xmlElement.childNodes[i]; i++) {\n      if (childNode.nodeName.toLowerCase() == 'field') {\n        this.fields.push(childNode.getAttribute('name'));\n      }\n    }\n    this.numFields = this.fields.length;\n    this.updateShape();\n  },\n\n  /**\n   * Standard function for Mutator mixin. It's called to generate the mutator's XML DOM element based on the content\n   * of the block.\n   */\n  mutationToDom: function() {\n    if (!this.numFields) {\n      return null;\n    }\n    const container = document.createElement('mutation');\n    container.setAttribute('num_fields', '' + this.numFields);\n    for (let i = 0; i < this.fields.length; i++) {\n      const field = document.createElement('field');\n      field.setAttribute('name', this.fields[i]);\n      container.appendChild(field);\n    }\n    return container;\n  },\n\n  /**\n   * Standard function for Mutator mixin when the mutator uses the standard mutator UI. It's called to update the\n   * block based on changes to the mutator's UI.\n   */\n  compose: function(topBlock) {\n    let fieldBlock = topBlock.nextConnection && topBlock.nextConnection.targetBlock();\n    this.numFields = 0;\n    this.fields = [];\n    let connectionsToRestore = [null];\n    while (fieldBlock) {\n      this.fields.push(fieldBlock.getFieldValue('field_name'));\n      this.numFields++;\n      connectionsToRestore.push(fieldBlock.savedConnection);\n      fieldBlock = fieldBlock.nextConnection && fieldBlock.nextConnection.targetBlock();\n    }\n    this.updateShape();\n    // Reconnect any child blocks.\n    for (let i = 1; i <= this.numFields; i++) {\n      Blockly.Mutator.reconnect(connectionsToRestore[i], this, 'field_input' + i);\n    }\n  },\n\n  /**\n   * Standard function for Mutator mixin when the mutator uses the standard mutator UI.  It's called to populate the\n   * mutator UI.\n   */\n  decompose: function(workspace) {\n    const topBlock = workspace.newBlock('object_create_mutator_top');\n    topBlock.initSvg();\n    let connection = topBlock.nextConnection;\n    for (let i = 0; i < this.fields.length; i++) {\n      const fieldBlock = workspace.newBlock('object_field');\n      fieldBlock.initSvg();\n      fieldBlock.setFieldValue(this.fields[i], 'field_name');\n      connection.connect(fieldBlock.previousConnection);\n      connection = fieldBlock.nextConnection;\n    }\n    return topBlock;\n  },\n\n  /**\n   * Standard function for Mutator mixin when the mutator uses the standard mutator UI.  It's called on any changes to\n   * the block and is generally used to keep track of input connections (by saving them with their corresponding mutator\n   * blocks), so that if the mutator later causes changes to the block it can restore those input connections.\n   *\n   * We're also using this function to update the mutator block field name values if the user changes the name in the\n   * block.\n   */\n  saveConnections: function(topBlock) {\n    let fieldBlock = topBlock.nextConnection && topBlock.nextConnection.targetBlock();\n    let i = 1;\n    while (fieldBlock) {\n      const input = this.getInput('field_input' + i);\n      fieldBlock.savedConnection = input && input.connection.targetConnection;\n      // Set mutator block field name from the corresponding 'real' Object.create block\n      fieldBlock.setFieldValue(this.getFieldValue('field' + i), 'field_name');\n      i++;\n      fieldBlock = fieldBlock.nextConnection &&\n        fieldBlock.nextConnection.targetBlock();\n    }\n  },\n\n  updateShape: function() {\n    // Delete everything.\n    if (this.getInput('with')) {\n      this.removeInput('with');\n    }\n    let i = 1;\n    while (this.getInput('field_input' + i)) {\n      this.removeInput('field_input' + i);\n      i++;\n    }\n    // Rebuild block.\n    if (this.numFields > 0) {\n      this.appendDummyInput('with')\n      .setAlign(Blockly.ALIGN_RIGHT)\n      .appendField(\"with fields\");\n    }\n    for (let i = 1; i <= this.numFields; i++) {\n      const fieldName = this.fields[i - 1];\n      this.appendValueInput(\"field_input\" + i)\n        .setCheck(null)\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(new Blockly.FieldTextInput(fieldName), \"field\" + i);\n    }\n  },\n};\n\nBlockly.Extensions.registerMutator('controls_create_mutator', objectCreateMutator, null, ['object_field']);\n\n// Internally used in SWITCH_CASE block mutator (so not available in the toolbox)\nBlockly.Blocks['object_field'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"object_field\",\n            \"message0\": \"%1 %2\",\n            \"args0\": [\n                {\n                    \"type\": \"field_input\",\n                    \"name\": \"field_name\",\n                    \"text\": Blockly.Msg.OBJECT_FIELD_NAME\n                },\n                {\n                    \"type\": \"input_value\",\n                    \"name\": \"field_value\"\n                }\n            ],\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#F99EA3\",\n            \"tooltip\": \"\",\n            \"helpUrl\": \"\"\n        });\n    }\n};\n\n// Internally used in SWITCH_CASE block mutator (so not available in the toolbox)\nBlockly.Blocks['object_create_mutator_top'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"object_create_mutator\",\n            \"message0\": Blockly.Msg.OBJECT_CREATE,\n            \"nextStatement\": null,\n            \"colour\": \"#F99EA3\",\n            \"tooltip\": Blockly.Msg.OBJECT_CREATE_TOOLTIP,\n            \"helpUrl\": \"\"\n        });\n    }\n};\n","output":"str","x":1224,"y":1168,"wires":[["cd1047af947c5f3c"]]},{"id":"cd1047af947c5f3c","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"ru.js","filename":"messages/ru.js","format":"javascript","syntax":"mustache","template":"// =========================================================================================\n// Node-RED blocks\n// =========================================================================================\nBlockly.Msg.NODE_OBJECT_GET_JSON = \"%1 %2 свойство %3\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET_TOOLTIP = \"Получить свойство объекта.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE_TOOLTIP = \"Удалить свойство объекта.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS_TOOLTIP = \"Проверить, есть ли у объекта свойство.\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_GET = \"получить\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_REMOVE = \"удалить\";\nBlockly.Msg.NODE_OBJECT_GET_JSON_HAS = \"имеет\";\nBlockly.Msg.NODE_OBJECT_GET_WARNING = \"Убедитесь, что переменная свойства не возвращает вложенное значение, такое как foo.bar.\";\nBlockly.Msg.NODE_OBJECT_SET_JSON = \"установить %1 свойство %2 на %3\";\nBlockly.Msg.NODE_OBJECT_SET_JSON_TOOLTIP = \"Установить свойство объекта.\";\nBlockly.Msg.NODE_OBJECT_SET_WARNING = \"Вложенные свойства могут быть установлены только с помощью строковых литералов.\";\nBlockly.Msg.NODE_LOG = \"текст журнала %1 с %2 уровнем\";\nBlockly.Msg.NODE_LOG_TOOLTIP = \"Войти через API функции Node-RED.\";\nBlockly.Msg.NODE_LOG_LOG = \"журнал\";\nBlockly.Msg.NODE_LOG_WARNING = \"предупреждение\";\nBlockly.Msg.NODE_LOG_ERROR = \"ошибка\";\nBlockly.Msg.NODE_LOG_DEBUG = \"отладка\";\nBlockly.Msg.NODE_LOG_TRACE = \"отслеживать\";\nBlockly.Msg.NODE_MSG = \"сообщение\";\nBlockly.Msg.NODE_MSG_TOOLTIP = \"Получить входное сообщение Node-RED.\";\nBlockly.Msg.NODE_REMOVE_STATUS = \"удалить статус узла\";\nBlockly.Msg.NODE_REMOVE_STATUS_TOOLTIP = \"Удалите статус узла через API функции Node-RED.\";\nBlockly.Msg.NODE_CLONE = \"клон %1\";\nBlockly.Msg.NODE_CLONE_TOOLTIP = \"Клонировать сообщение через API функции Node-RED.\";\nBlockly.Msg.NODE_STATUS = \"установить статус узла на текст %1 для цвета %2 и формы %3\";\nBlockly.Msg.NODE_STATUS_TOOLTIP = \"Установить статус узла через API функции Node-RED.\";\nBlockly.Msg.NODE_STATUS_RING = \"кольцо\";\nBlockly.Msg.NODE_STATUS_DOT = \"точка\";\nBlockly.Msg.NODE_PROPERTIES = \"получить узел %1\";\nBlockly.Msg.NODE_PROPERTIES_TOOLTIP = \"Получить указанное свойство узла через API функции Node-RED.\";\nBlockly.Msg.NODE_PROPERTIES_ID = \"идентификатор\";\nBlockly.Msg.NODE_PROPERTIES_NAME = \"имя\";\nBlockly.Msg.NODE_PROPERTIES_OUTPUT_COUNT = \"количество выходов\";\nBlockly.Msg.NODE_PROPERTIES_PATH = \"путь\";\nBlockly.Msg.NODE_FLOW_MEMORY = \"поток\";\nBlockly.Msg.NODE_FLOW_MEMORY_TOOLTIP = \"Доступ к данным в памяти потока Node-RED.\";\nBlockly.Msg.NODE_CONTEXT_MEMORY = \"(узел) контекст\";\nBlockly.Msg.NODE_CONTEXT_MEMORY_TOOLTIP = \"Доступ к данным в контекстной памяти Node-RED (узла).\";\nBlockly.Msg.NODE_GLOBAL_MEMORY = \"глобальный\";\nBlockly.Msg.NODE_GLOBAL_MEMORY_TOOLTIP = \"Доступ к данным в глобальной памяти Node-RED.\";\nBlockly.Msg.NODE_SEND = \"отправить %1 на выход% %2\";\nBlockly.Msg.NODE_SEND_TOOLTIP = \"Отправить выходное сообщение через API функции Node-RED.\";\nBlockly.Msg.NODE_SEND_WARNING = \"При отправке сообщений в цикле,\\nmake убедитесь, что сообщения уникальны!\";\nBlockly.Msg.NODE_RETURN_MESSAGE = \"вернуть %1 к выходу %2\";\nBlockly.Msg.NODE_RETURN_MESSAGE_TOOLTIP = \"Отправить выходное сообщение и вернуться для остановки обработки.\";\nBlockly.Msg.NODE_RETURN = \"возврат\";\nBlockly.Msg.NODE_RETURN_TOOLTIP = \"Вернуться, чтобы остановить обработку (без отправки сообщения).\";\nBlockly.Msg.NODE_CLOSE = \"узел закрыт\";\nBlockly.Msg.NODE_CLOSE_1 = \"%1\";\nBlockly.Msg.NODE_CLOSE_TOOLTIP = \"Операторы, которые должны выполняться при закрытии узла.\";\nBlockly.Msg.NODE_DONE = \"сообщение завершено\";\nBlockly.Msg.NODE_DONE_TOOLTIP = \"Обработка сообщения завершена.\";\nBlockly.Msg.NODE_ENV = \"получить переменную окружения %1\";\nBlockly.Msg.NODE_ENV_TOOLTIP = \"Доступ к значению переменной среды.\";\n\n// =========================================================================================\n// Buffer blocks\n// =========================================================================================\nBlockly.Msg.BUFFER_FROM_STRING = \"создать буфер из строки %1 с кодировкой %2\";\nBlockly.Msg.BUFFER_FROM_STRING_TOOLTIP = \"Создать буфер из строки.\";\nBlockly.Msg.BUFFER_TO_STRING = \"сгенерировать строку из буфера %1 с кодировкой %2\";\nBlockly.Msg.BUFFER_TO_STRING_TOOLTIP = \"Преобразовать буфер в строку.\";\nBlockly.Msg.BUFFER_LENGTH = \"получить длину буфера %1\";\nBlockly.Msg.BUFFER_LENGTH_TOOLTIP = \"Получить длину буфера в байтах.\";\nBlockly.Msg.BUFFER_ALLOC = \"создать буфер длиной %1\";\nBlockly.Msg.BUFFER_ALLOC_TOOLTIP = \"Создать буфер указанной длины.\";\nBlockly.Msg.BUFFER_FILL = \"заполнить буфер %1 значением %2\";\nBlockly.Msg.BUFFER_FILL_TOOLTIP = \"Заполните буфер указанным значением.\";\nBlockly.Msg.BUFFER_CHECK = \"проверить наличие буфера %1\";\nBlockly.Msg.BUFFER_CHECK_TOOLTIP = \"Проверить, является ли входное значение буфером.\";\nBlockly.Msg.BUFFER_COPY = \"копировать из буфераr %1 в буфер %2\";\nBlockly.Msg.BUFFER_COPY_TOOLTIP = \"CКопировать из первого буфера во второй буфер.\";\nBlockly.Msg.BUFFER_CONCATENATE = \"Объединить буфер %1 и %2\";\nBlockly.Msg.BUFFER_CONCATENATE_TOOLTIP = \"Объедините два буфера, чтобы создать новый буфер\";\nBlockly.Msg.BUFFER_EMPTY = \"пустой буфер\";\nBlockly.Msg.BUFFER_EMPTY_TOOLTIP = \"Создать пустой буфер, то есть буфер размером 0.\";\nBlockly.Msg.BUFFER_BYTE = \"байт %1\";\nBlockly.Msg.BUFFER_BYTE_TOOLTIP = \"Байтовое значение.\";\nBlockly.Msg.BUFFER_GET_INDEX = \"получить байт по индексу %1 буфера %2\";\nBlockly.Msg.BUFFER_GET_INDEX_TOOLTIP = \"Получить байтовое значение указанного индекса буфера.\";\nBlockly.Msg.BUFFER_SET_INDEX = \"установить байт в индексе %1 буфера %2 в значение %3\";\nBlockly.Msg.BUFFER_SET_INDEX_TOOLTIP = \"Установить байтовое значение указанного индекса буфера.\";\n\n// =========================================================================================\n// Objects (JSON) blocks\n// =========================================================================================\nBlockly.Msg.OBJECT_FROM_JSON = \"получить объект из текста JSON %1\";\nBlockly.Msg.OBJECT_FROM_JSON_TOOLTIP = \"Создать объект из текстовой строки в формате JSON.\";\nBlockly.Msg.OBJECT_TO_JSON = \"получить текст JSON из объекта %1\";\nBlockly.Msg.OBJECT_TO_JSON_TOOLTIP = \"Создать текстовую строку в формате JSON из объекта.\";\nBlockly.Msg.OBJECT_CREATE = \"создать объект\";\nBlockly.Msg.OBJECT_CREATE_TOOLTIP = \"Создайте новый объект, необязательно с некоторыми значениями свойств.\";\nBlockly.Msg.OBJECT_FIELD_NAME = \"название свойства\";\nBlockly.Msg.OBJECT_KEYS = \"получить ключи от %1\";\nBlockly.Msg.OBJECT_KEYS_TOOLTIP = \"Получить все ключи от объекта.\";\n\n// =========================================================================================\n// Extra blocks\n// =========================================================================================\nBlockly.Msg.TEXT_SPECIAL_CHARACTER = \"специальный символ %1\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TOOLTIP = \"Специальный символ, который нельзя экранировать (префиксом '\\\\').\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_LF = \"перевод строки (LF) (\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CR = \"возврат каретки (CR) (\\\\r)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_CRLF = \"перевод строки возврата каретки (CRLF) (\\\\r\\\\n)\";\nBlockly.Msg.TEXT_SPECIAL_CHARACTER_TAB = \"вкладка (TAB) (\\\\t)\";\nBlockly.Msg.TIMER_CONDITIONAL = \"повторять каждые %1 секунды, до %2 %3\";\nBlockly.Msg.TIMER_CONDITIONAL_TOOLTIP = \"Повторять через равные промежутки времени, пока условие не будет выполнено.\";\nBlockly.Msg.TIMER_COUNTING = \"повторять %1 раз каждые %2 секунды %3 %4\";\nBlockly.Msg.TIMER_COUNTING_TOOLTIP = \"Повторять через равные промежутки времени несколько раз.\";\nBlockly.Msg.SWITCH = \"входное значение %1 в случае %2 до %3\";\nBlockly.Msg.SWITCH_TOOLTIP = \"Выполните некоторые действия в зависимости от входных значений.\";\nBlockly.Msg.SWITCH_DEFAULT = \"по умолчанию\";\nBlockly.Msg.SWITCH_DEFAULT_TOOLTIP = \"Когда нет подходящих случаев.\";\nBlockly.Msg.SWITCH_CASE = \"случай %1\";\nBlockly.Msg.SWITCH_CASE_TOOLTIP = \"Когда определенное значение совпадает.\";\nBlockly.Msg.SWITCH_CASE_LIST = \"в случае\";\nBlockly.Msg.SWITCH_CASE_LIST_TOOLTIP = \"Список всех доступных случаев\";\nBlockly.Msg.SWITCH_DO = \"делать\";\nBlockly.Msg.MISC_JAVASCRIPT = \"Оператор JavaScript %1;\";\nBlockly.Msg.MISC_JAVASCRIPT_TOOLTIP = \"Введите код JavaScript, если нет блоков, предлагающих определенные функции.\";\nBlockly.Msg.MISC_JSEXPRESS = \"Выражение JavaScript %1\";\nBlockly.Msg.MISC_JSEXPRESS_TOOLTIP = \"Используйте с осторожностью. Введите код JavaScript, если нет блоков, предлагающих определенные функции.\";\nBlockly.Msg.MISC_COMMENT = \"Комментарий %1\";\nBlockly.Msg.MISC_COMMENT_TOOLTIP = \"Добавьте комментарии, чтобы объяснить, как работает логика.\";\nBlockly.Msg.MISC_JSMULTILINE = \"Многострочный код JS %1\";\nBlockly.Msg.MISC_JSMULTILINE_TOOLTIP = \"Введите многострочный код Javascript, если нет блоков, предлагающих определенные функции.\";\n\n// =========================================================================================\n// Datetime blocks\n// =========================================================================================\nBlockly.Msg.DATETIME_INPUT = \"дата %1\";\nBlockly.Msg.DATETIME_INPUT_TOOLTIP = \"Свидание.\";\nBlockly.Msg.DATETIME_TIMESTAMP = \"отметка времени\";\nBlockly.Msg.DATETIME_TIMESTAMP_TOOLTIP = \"Получить текущую отметку времени (т.е. дату и время).\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE = \"получить %1 из отметки времени %2\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TOOLTIP = \"Получить указанную информацию из отметки времени.\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_NR = \"формат временной метки\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MSEC = \"миллисекунды\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_SEC = \"секунды\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MIN = \"минут\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_HOUR = \"час\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY = \"день\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_OF_WEEK = \"день недели\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH = \"месяц\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_YEAR = \"год\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_TEXT = \"дата\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_FULL = \"олная дата\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_DAY_NAME = \"название дня\";\nBlockly.Msg.DATETIME_CONVERT_FROM_DATE_MONTH_NAME = \"название месяца\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE = \"дата создания с %1\";\nBlockly.Msg.DATETIME_CONVERT_TO_DATE_TOOLTIP = \"Создать дату из указанного значения.\";\nBlockly.Msg.DATETIME_FORMAT = \"преобразовать отметку времени %1 в формат %2\";\nBlockly.Msg.DATETIME_FORMAT_TOOLTIP = \"Преобразовать метку времени в указанный форматt.\";\nBlockly.Msg.DATETIME_UTC = \"UTC\";\n//Blockly.Msg.DATETIME_LOCAL = \"local\";\n\n// =========================================================================================\n// Timer blocks\n// =========================================================================================\n//Blockly.Msg.TIMER_SET_TIMEOUT = \"Execute timeout %1 in %2 %3\";\nBlockly.Msg.TIMER_SET_TIMEOUT_1 = \"%1\";\n//Blockly.Msg.TIMER_SET_TIMEOUT_NAME = \"timeout\";\n//Blockly.Msg.TIMER_SET_TIMEOUT_TOOLTIP = \"Execute the included blocks after a specified time delay.\";\n//Blockly.Msg.TIMER_CLEAR_TIMEOUT = \"Stop timeout %1\";\n//Blockly.Msg.TIMER_CLEAR_TIMEOUT_TOOLTIP = \"Cancel the execution after the timeout\";\n//Blockly.Msg.TIMER_SET_INTERVAL = \"Execute interval %1 every %2 %3\";\nBlockly.Msg.TIMER_SET_INTERVAL_1 = \"%1\";\nBlockly.Msg.TIMER_SET_INTERVAL_NAME = \"интервал\";\n//Blockly.Msg.TIMER_SET_INTERVAL_TOOLTIP = \"Execute the included blocks periodically at the specified time interval.\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL = \"Остановить интервал %1\";\nBlockly.Msg.TIMER_CLEAR_INTERVAL_TOOLTIP = \"Отменяйте выполнение блока через определенные промежутки времени.\";\nBlockly.Msg.TIMER_TIMER_MS = \"мсек\";\nBlockly.Msg.TIMER_TIMER_SEC = \"сек\";\nBlockly.Msg.TIMER_TIMER_MIN = \"мин\";\nBlockly.Msg.TIMER_NONE_SELECTED = \"нет\";\n","output":"str","x":1224,"y":1218,"wires":[["5142bef757aad640"]]},{"id":"5142bef757aad640","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"timerBlocksCodeGen.js","filename":"lib/timer/timerBlocksCodeGen.js","format":"javascript","syntax":"mustache","template":"/*\n* Copyright: ioBroker/ioBroker.javascript is licensed under the MIT license.\n* This code has been copied from https://github.com/ioBroker/ioBroker.javascript/blob/master/admin/google-blockly/own/blocks_timeout.js.\n* See their MIT license for more information: https://github.com/ioBroker/ioBroker.javascript/blob/master/LICENSE\n*/\nBlockly.JavaScript['set_timeout'] = function(block) {\n    var delay = block.getFieldValue('DELAY');\n    var name  = block.getFieldValue('NAME');\n    var unit  = block.getFieldValue('UNIT');\n    \n    switch(unit) {\n        case 'min':\n            delay *= 60000;\n            break;\n        case 'sec':\n            delay *= 1000;\n            break;\n    }\n    \n    var statements = Blockly.JavaScript.statementToCode(block, 'STATEMENT');\n\n    // The code should store the timeout timer id in the node context, in order to be able to clear it when the next input message arrives.\n    // see https://discourse.nodered.org/t/cancelling-a-javascript-countdown-in-function/15790/5?u=bartbutenaers\n    var code = 'var ' + name + ' = setTimeout(function() {\\n' + statements + '}, ' + delay + ');\\ncontext.set(\"' + name + '\", ' + name + ');';\n    return code;\n};\n\nBlockly.JavaScript['set_interval'] = function(block) {\n    var delay = block.getFieldValue('INTERVAL');\n    var name  = block.getFieldValue('NAME');\n    var unit  = block.getFieldValue('UNIT');\n\n    switch(unit) {\n        case 'min':\n            delay *= 60000;\n            break;\n        case 'sec':\n            delay *= 1000;\n            break;\n    }\n\n    var statements = Blockly.JavaScript.statementToCode(block, 'STATEMENT');\n\n    // The code should store the interval timer id in the node context, in order to be able to clear it when the next input message arrives.\n    // see https://discourse.nodered.org/t/cancelling-a-javascript-countdown-in-function/15790/5?u=bartbutenaers\n    var code = 'if (context.get(\"' + name + '\")) {\\n  clearInterval(context.get(\"' + name + '\"));\\n}\\n';\n    code += 'var ' + name + ' = setInterval(function() {\\n' + statements + '}, ' + delay + ');\\ncontext.set(\"' + name + '\", ' + name + ');';\n    return code;\n};\n\nBlockly.JavaScript['clear_timeout'] = function(block) {\n    // Get the selected name value and label from the dropdown\n    var nameValue = block.getField('NAME').getValue();\n    var nameText = block.getField('NAME').getText_();\n\n    if (nameValue === \"nothing_selected\") {\n        return '';\n    }\n    else {\n        return 'if (context.get(\"' + nameText + '\")) {\\n  clearTimeout(context.get(\"' + nameText + '\"));\\n  context.set(\"' + nameText + '\", undefined);\\n}\\n';\n    }\n};\n\nBlockly.JavaScript['clear_interval'] = function(block) {\n    // Get the selected name value and label from the dropdown\n    var nameValue = block.getField('NAME').getValue();\n    var nameText = block.getField('NAME').getText_();\n\n    if (nameValue === \"nothing_selected\") {\n        return '';\n    }\n    else {\n        return 'if (context.get(\"' + nameText + '\")) {\\n  clearInterval(context.get(\"' + nameText + '\"));\\n  context.set(\"' + nameText + '\", undefined);\\n}\\n';\n    }\n};","output":"str","x":1224,"y":1268,"wires":[["ef00fb47b341e224"]]},{"id":"ef00fb47b341e224","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"timerBlocksDefs.js","filename":"lib/timer/timerBlocksDefs.js","format":"javascript","syntax":"mustache","template":"function getUniqueNameForBlock(prefix, block) {\n    var counter = 1;\n    var existingNames = [];\n    \n    var blocks = block.workspace.getBlocksByType(block.type);\n\n    for (var i = 0; i < blocks.length; i++) {\n        var name = blocks[i].getFieldValue('NAME');\n        existingNames.push(name);\n    }    \n    \n    while(true) {\n        var newName = prefix + \"_\" + counter;\n        \n        if (!existingNames.includes(newName)) {\n            return newName;\n        }\n        \n        counter++;\n    }\n}\n\n// When a new Blockly workspace is created by our Node-RED node, then we should start listening for changes on that workspace ...\n// Note that this event is triggered by the node, immediately afterwards the new workspace has been created.\ndocument.addEventListener('blocky_workspace_changed', function(workspaceChangedEvent) {\n    var newWorkspace = workspaceChangedEvent.detail.newWorkspace;\n    \n    // When a change (related to a set_interval/set_timeout block) happens in the workspace, then the clear_interval/clear_timeout blocks need to be updated.\n    // All that functionality has been centralized here, because otherwise it becomes a mess that is hard to troubleshoot ...\n    newWorkspace.addChangeListener(function(event) {\n        // We are only interested in some particular events, so ignore other events for performance reasons\n        if (![Blockly.Events.BLOCK_CREATE, Blockly.Events.BLOCK_DELETE, Blockly.Events.BLOCK_CHANGE].includes(event.type)) {\n            return;\n        }\n\n        // Not all events have an ids field, but only a blockId field.  Make sure we have always an array, in both cases ...\n        var eventBlockIds = event.ids;\n        if (!eventBlockIds) {\n            eventBlockIds = [event.blockId];\n        }\n\n        var allBlocks = newWorkspace.getAllBlocks();\n\n        // Execute the logic for every block that has been created/deleted/updated in the workspace\n        eventBlockIds.forEach(function(eventBlockId) {\n            switch(event.type) {\n                case Blockly.Events.BLOCK_CREATE:\n                    var newBlock = newWorkspace.getBlockById(eventBlockId);\n\n                    switch(newBlock.type) {\n                        case \"set_timeout\":\n                            var newBlockName = newBlock.getField('NAME').getValue();\n                            \n                            // When a new set_timeout block is added (from the flyout) to the workspace, its name will be \"timeout\".\n                            // However it should become \"timeout_x\" with x the first integer number that is not being used yet by the other \n                            // set_timeout blocks in the workspace.                        \n                            if (newBlockName === Blockly.Msg.TIMER_SET_TIMEOUT_NAME) {\n                                var newUniqueName = getUniqueNameForBlock(Blockly.Msg.TIMER_SET_TIMEOUT_NAME, newBlock);\n                                newBlock.setFieldValue(newUniqueName, 'NAME');\n                            }\n\n                            // The name of the new set_timeout block, should be added to the dropdown options of every clear_timeout block\n                            allBlocks.forEach(function(otherBlock) {\n                                if (otherBlock.type === \"clear_timeout\") {\n                                    otherBlock.dropdownOptions[newBlock.id] = newBlockName;\n                                }\n                            });\n                            break;\n                        case \"set_interval\":\n                            var newBlockName = newBlock.getField('NAME').getValue();\n                            \n                            // When a new set_interval block is added (from the flyout) to the workspace, its name will be \"interval\".\n                            // However it should become \"interval_x\" with x the first integer number that is not being used yet by the other \n                            // set_interval blocks in the workspace.                        \n                            if (newBlockName === Blockly.Msg.TIMER_SET_INTERVAL_NAME) {\n                                var newUniqueName = getUniqueNameForBlock(Blockly.Msg.TIMER_SET_INTERVAL_NAME, newBlock);\n                                newBlock.setFieldValue(newUniqueName, 'NAME');\n                            }\n\n                            // The name of the new set_interval block, should be added to the dropdown options of every clear_interval block\n                            allBlocks.forEach(function(otherBlock) {\n                                if (otherBlock.type === \"clear_interval\") {\n                                    otherBlock.dropdownOptions[newBlock.id] = newBlockName;\n                                }\n                            });\n                            break;\n                        case \"clear_timeout\":\n                            // When a new clear_timout block has been created, all the names (of the existing set_timeout blocks) should be added to its dropdown options\n                            allBlocks.forEach(function(otherBlock) {\n                                if (otherBlock.type === \"set_timeout\") {\n                                    var otherBlockName = otherBlock.getField('NAME').getValue();\n                                    newBlock.dropdownOptions[otherBlock.id] = otherBlockName;\n                                }\n                            });\n                            break;\n                        case \"clear_interval\":\n                            // When a new clear_interval block has been created, all the names (of the existing set_interval blocks) should be added to its dropdown options\n                            allBlocks.forEach(function(otherBlock) {\n                                if (otherBlock.type === \"set_interval\") {\n                                    var otherBlockName = otherBlock.getField('NAME').getValue();\n                                    newBlock.dropdownOptions[otherBlock.id] = otherBlockName;\n                                }\n                            });\n                            break;\n                    }\n                    break;\n                case Blockly.Events.BLOCK_CHANGE:\n                    var updatedBlock = newWorkspace.getBlockById(eventBlockId);\n                    \n                    if (event.name === \"NAME\") {\n                        var updatedBlockName = updatedBlock.getField('NAME').getValue();\n                        \n                        switch (updatedBlock.type) {\n                            case \"set_timeout\":\n                                // When the name of a set_timeout block has been changed, then that name should also be updated in the dropdown options of every existing clear_timout block\n                                allBlocks.forEach(function(otherBlock) {\n                                    if (otherBlock.type === \"clear_timeout\") {\n                                        otherBlock.dropdownOptions[updatedBlock.id] = updatedBlockName;\n                                        \n                                        // When the (changed) name of the set_timeout was currently selected in the clear_timeout block,\n                                        // then the name in that block should also be changed\n                                        var currentSelectedOption = otherBlock.getField('NAME').getValue()\n                                        if (currentSelectedOption === updatedBlock.id) {\n                                            // Make sure the (dynamic) dropdown list is removed from the cache, and reloaded again by blockly\n                                            otherBlock.getField('NAME').getOptions(false);\n                                            // Select another option temporarily, because setting the same option (as currently already selected) has no effect\n                                            otherBlock.getField('NAME').setValue(\"nothing_selected\");\n                                            // Select the original selected option again, to show it's changed name (label)\n                                            otherBlock.getField('NAME').setValue(currentSelectedOption);\n                                        }\n                                    }\n                                });\n                                break;\n                            case \"set_interval\":\n                                // When the name of a set_interval block has been changed, then that name should also be updated in the dropdown options of every existing clear_interval block\n                                allBlocks.forEach(function(otherBlock) {\n                                    if (otherBlock.type === \"clear_interval\") {\n                                        otherBlock.dropdownOptions[updatedBlock.id] = updatedBlockName;\n                                        \n                                        // When the (changed) name of the set_interval was currently selected in the clear_interval block,\n                                        // then the name in that block should also be changed\n                                        var currentSelectedOption = otherBlock.getField('NAME').getValue()\n                                        if (currentSelectedOption === updatedBlock.id) {\n                                            // Make sure the (dynamic) dropdown list is removed from the cache, and reloaded again by blockly\n                                            otherBlock.getField('NAME').getOptions(false);\n                                            // Select another option temporarily, because setting the same option (as currently already selected) has no effect\n                                            otherBlock.getField('NAME').setValue(\"nothing_selected\");\n                                            // Select the original selected option again, to show it's changed name (label)\n                                            otherBlock.getField('NAME').setValue(currentSelectedOption);\n                                        }\n                                    }\n                                });\n                                break;\n                        }\n                    }\n                    break;  \n                case Blockly.Events.BLOCK_DELETE:\n                    // It is not possible to get a reference (based on the eventBlockId) to a block that has been deleted from a workspace.\n                    // Since we cannot determine anymore which block type has been deleted, we won't do any type checks here ...\n                    // So we \"try\" to remove the id of EVERY deleted block from the dropdown options of the existing clear_interval/clear_timeout blocks.\n                    allBlocks.forEach(function(otherBlock) {\n                        if ([\"clear_interval\", \"clear_timeout\"].includes(otherBlock.type)) {\n                            delete otherBlock.dropdownOptions[eventBlockId];\n\n                            // When the name of the removed set_interval/set_timeout was currently selected in the clear_interval/clear_timeout block,\n                            // then the selected name in that block should become 'none'\n                            var otherBlockSelectedOption = otherBlock.getField('NAME').getValue()\n                            if (otherBlockSelectedOption === eventBlockId) {\n                                otherBlock.getField('NAME').setValue(\"nothing_selected\");\n                            }\n                        }\n                    });\n                    break;\n            }\n        });\n    });\n});\n\nBlockly.Blocks['set_timeout'] = {\n    init: function() {\n        this.jsonInit({\n            \"type\": \"set_timeout\",\n            \"message0\": Blockly.Msg.TIMER_SET_TIMEOUT,\n            \"args0\": [\n                {\n                    \"type\": \"field_input\",\n                    \"name\": \"NAME\",\n                    \"text\": Blockly.Msg.TIMER_SET_TIMEOUT_NAME,\n                    \"spellcheck\": false\n                },\n                {\n                    \"type\": \"field_number\",\n                    \"name\": \"DELAY\",\n                    \"value\": 1000,\n                    \"min\": 0,\n                    \"precision\": 1\n                },\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"UNIT\",\n                    \"options\": [[Blockly.Msg.TIMER_TIMER_MS , \"ms\"   ], \n                                [Blockly.Msg.TIMER_TIMER_SEC, \"sec\"  ], \n                                [Blockly.Msg.TIMER_TIMER_MIN, \"min\"  ]]\n                }\n            ],\n            \"message1\": Blockly.Msg.TIMER_SET_TIMEOUT_1,\n            \"args1\": [\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"STATEMENT\"\n                }\n            ],\n            \"inputsInline\": false,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DEDE1F\",\n            \"tooltip\": Blockly.Msg.TIMER_SET_TIMEOUT_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Blocks['set_interval'] = {\n    init: function() {\n        this.jsonInit({\n            \"type\": \"set_interval\",\n            \"message0\": Blockly.Msg.TIMER_SET_INTERVAL,\n            \"args0\": [\n                {\n                    \"type\": \"field_input\",\n                    \"name\": \"NAME\",\n                    \"text\": Blockly.Msg.TIMER_SET_INTERVAL_NAME,\n                    \"spellcheck\": false\n                },\n                {\n                    \"type\": \"field_number\",\n                    \"name\": \"INTERVAL\",\n                    \"value\": 1000,\n                    \"min\": 0,\n                    \"precision\": 1\n                },\n                {\n                    \"type\": \"field_dropdown\",\n                    \"name\": \"UNIT\",\n                    \"options\": [[Blockly.Msg.TIMER_TIMER_MS , \"ms\"   ], \n                                [Blockly.Msg.TIMER_TIMER_SEC, \"sec\"  ], \n                                [Blockly.Msg.TIMER_TIMER_MIN, \"min\"  ]]\n                }\n            ],\n            \"message1\": Blockly.Msg.TIMER_SET_INTERVAL_1,\n            \"args1\": [\n                {\n                    \"type\": \"input_statement\",\n                    \"name\": \"STATEMENT\"\n                }\n            ],\n            \"inputsInline\": false,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DEDE1F\",\n            \"tooltip\": Blockly.Msg.TIMER_SET_INTERVAL_TOOLTIP,\n            \"helpUrl\": null\n        });\n    }\n};\n\nBlockly.Extensions.register('dropdown_extension', function() {\n    // Initialize the dropdown options, BEFORE the dropdown is added (in the next statement)\n    if (!this.dropdownOptions) {\n        this.dropdownOptions = { \n            nothing_selected: Blockly.Msg.TIMER_NONE_SELECTED\n        }\n    }\n\n    // Add a dropdown field \"NAME\", that displays dynamically all options in this.dropdownOptions\n    var block = this;\n    this.getInput('INPUT').appendField(new Blockly.FieldDropdown(function() {\n        var optionsAsArray = [];\n        \n        // The dropdownOptions is a Javascript object:\n        //   { key1: value1, key2:value2, ...}\n        // Which needs to be converted to a 2 dimensional array:\n        //   [[key1, value1], [key2, value2], ...]\n        Object.keys(block.dropdownOptions).forEach(function(key) {\n            var value = block.dropdownOptions[key];\n            optionsAsArray.push([value, key]);\n        });\n        \n        return optionsAsArray;\n    }), \"NAME\");\n});\n\n// Save and load the dropdown options in the clear_timeout/clear_interval blocks, to make sure they are again available after  the workspace is reloaded.\nvar dropdownMutator = {\n    mutationToDom: function() {\n        // Save the dropdown options, to make sure they are still available when the workspace is loaded.\n        var mutationXml = document.createElement('mutation');\n        var dropdownOptionsAsJson = JSON.stringify(this.dropdownOptions);\n        mutationXml.setAttribute('dropdown_options', dropdownOptionsAsJson);\n        return mutationXml;\n    },\n     domToMutation: function(xmlElement) {\n        // Load the saved dropdown field options into this block\n        var selectedOption = xmlElement.getAttribute('dropdown_selected');\n        var dropdownOptionsAsJson = xmlElement.getAttribute('dropdown_options');\n        this.dropdownOptions = JSON.parse(dropdownOptionsAsJson);\n    }\n};\nBlockly.Extensions.registerMutator(\"dropdown_mutator\", dropdownMutator);\n\nBlockly.Blocks['clear_timeout'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"clear_timeout\",\n            \"message0\": Blockly.Msg.TIMER_CLEAR_TIMEOUT,\n            \"args0\": [\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"INPUT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DEDE1F\",\n            \"tooltip\": Blockly.Msg.TIMER_CLEAR_TIMEOUT_TOOLTIP,\n            \"helpUrl\": null,\n            \"extensions\": [\"dropdown_extension\"],\n            \"mutator\": [\"dropdown_mutator\"]\n        });\n    }\n}\n\nBlockly.Blocks['clear_interval'] = {\n    init: function () {\n        this.jsonInit({\n            \"type\": \"clear_interval\",\n            \"message0\": Blockly.Msg.TIMER_CLEAR_INTERVAL,\n            \"args0\": [\n                {\n                    \"type\": \"input_dummy\",\n                    \"name\": \"INPUT\"\n                }\n            ],\n            \"inputsInline\": true,\n            \"previousStatement\": null,\n            \"nextStatement\": null,\n            \"colour\": \"#DEDE1F\",\n            \"tooltip\": Blockly.Msg.TIMER_CLEAR_INTERVAL_TOOLTIP,\n            \"helpUrl\": null,\n            \"extensions\": [\"dropdown_extension\"],\n            \"mutator\": [\"dropdown_mutator\"]\n        });\n    }\n}","output":"str","x":1224,"y":1318,"wires":[["e0eced5eb487ec62"]]},{"id":"e0eced5eb487ec62","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"hello_world.json","filename":"examples/hello_world.json","format":"json","syntax":"mustache","template":"[{\"id\":\"726f49bab272a7c8\",\"type\":\"inject\",\"z\":\"c2a7925b.6e143\",\"name\":\"Start\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payloadType\":\"date\",\"x\":920,\"y\":340,\"wires\":[[\"a9f0963b0aa786f9\"]]},{\"id\":\"a9f0963b0aa786f9\",\"type\":\"Blockly\",\"z\":\"c2a7925b.6e143\",\"func\":\"msg['payload'] = 'Hello world';\\nnode.send([msg]);\\n\",\"workspaceXml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\">\\n  <block type=\\\"node_object_set\\\" id=\\\"{HhMU.r!93@,X*U]cnOO\\\" x=\\\"-312\\\" y=\\\"-187\\\">\\n    <value name=\\\"object_field\\\">\\n      <shadow type=\\\"node_msg\\\" id=\\\"DSrocV,iepv#xI5CNnR*\\\"></shadow>\\n    </value>\\n    <value name=\\\"field_name\\\">\\n      <shadow type=\\\"text\\\" id=\\\"QY[2X`uT|j(|9hEjRP@i\\\">\\n        <field name=\\\"TEXT\\\">payload</field>\\n      </shadow>\\n    </value>\\n    <value name=\\\"value_field\\\">\\n      <shadow type=\\\"text\\\" id=\\\"#!`_0-/,RL$v7g2V3k5[\\\">\\n        <field name=\\\"TEXT\\\">Hello world</field>\\n      </shadow>\\n    </value>\\n    <next>\\n      <block type=\\\"node_send\\\" id=\\\"FUZ=O)cx}X$rVR|}@noO\\\">\\n        <field name=\\\"OUTPUT_NR\\\">1</field>\\n        <value name=\\\"MESSAGE_INPUT\\\">\\n          <shadow type=\\\"node_msg\\\" id=\\\"X,6T+0~8X!$Xd?G}Q-Ot\\\"></shadow>\\n        </value>\\n      </block>\\n    </next>\\n  </block>\\n</xml>\",\"outputs\":1,\"blocklyConfig\":\"46e073e1.66e10c\",\"backpackContents\":[],\"noerr\":0,\"name\":\"\",\"x\":1090,\"y\":340,\"wires\":[[\"b8f850db4b40e28b\"]]},{\"id\":\"b8f850db4b40e28b\",\"type\":\"debug\",\"z\":\"c2a7925b.6e143\",\"name\":\"Blockly output\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"payload\",\"targetType\":\"msg\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":1280,\"y\":340,\"wires\":[]},{\"id\":\"46e073e1.66e10c\",\"type\":\"blockly-config\",\"language\":\"en\",\"showTrashcan\":true,\"allowComments\":true,\"showZoomControl\":true,\"enableBackPack\":true,\"backpackContents\":[\"<block xmlns=\\\"https://developers.google.com/blockly/xml\\\" type=\\\"object_create\\\" inline=\\\"true\\\"><mutation xmlns=\\\"http://www.w3.org/1999/xhtml\\\" num_fields=\\\"1\\\"><field name=\\\"property name\\\"></field></mutation><field name=\\\"field1\\\">payload</field></block>\",\"<block xmlns=\\\"https://developers.google.com/blockly/xml\\\" type=\\\"node_return_message\\\"><field name=\\\"OUTPUT_NR\\\">1</field><value name=\\\"MESSAGE_INPUT\\\"><shadow type=\\\"node_msg\\\"></shadow></value></block>\",\"<block xmlns=\\\"https://developers.google.com/blockly/xml\\\" type=\\\"node_object_set\\\" inline=\\\"true\\\"><value name=\\\"object_field\\\"><shadow type=\\\"node_msg\\\"></shadow></value><value name=\\\"field_name\\\"><shadow type=\\\"text\\\"><field name=\\\"TEXT\\\">payload</field></shadow></value><value name=\\\"value_field\\\"><shadow type=\\\"text\\\"><field name=\\\"TEXT\\\"></field></shadow></value></block>\",\"<block xmlns=\\\"https://developers.google.com/blockly/xml\\\" type=\\\"node_object_get\\\"><mutation xmlns=\\\"http://www.w3.org/1999/xhtml\\\" action=\\\"GET\\\"></mutation><field name=\\\"action\\\">GET</field><value name=\\\"object\\\"><shadow type=\\\"node_msg\\\"></shadow></value><value name=\\\"field_name\\\"><shadow type=\\\"text\\\"><field name=\\\"TEXT\\\">payload</field></shadow></value></block>\"],\"toolboxPosition\":\"left\",\"renderer\":\"geras\",\"categories\":[{\"name\":\"Node-RED\",\"files\":[\"blockly-contrib/npm/node-red-contrib-blockly/lib/nodered/nodeRedBlocksCodeGen.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/nodered/nodeRedBlocksDefs.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/nodered/toolbox.xml\",\"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"]},{\"name\":\"Objects\",\"files\":[\"blockly-contrib/npm/node-red-contrib-blockly/lib/json/objectBlocksCodeGen.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/json/objectBlocksDefs.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/json/toolbox.xml\",\"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"]},{\"name\":\"Buffer\",\"files\":[\"blockly-contrib/npm/node-red-contrib-blockly/lib/buffer/bufferBlocksCodeGen.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/buffer/bufferBlocksDefs.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/buffer/toolbox.xml\",\"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"]},{\"name\":\"Date/time\",\"files\":[\"blockly-contrib/npm/@blockly%2Ffield-date/dist/date_compressed.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/datetime/dateTimeBlocksCodeGen.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/datetime/dateTimeBlocksDefs.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/datetime/toolbox.xml\",\"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"]},{\"name\":\"Timer\",\"files\":[\"blockly-contrib/npm/node-red-contrib-blockly/lib/timer/timerBlocksCodeGen.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/timer/timerBlocksDefs.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/timer/toolbox.xml\",\"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"]},{\"name\":\"Blockly extension\",\"files\":[\"blockly-contrib/npm/node-red-contrib-blockly/lib/extra/extraBlocksCodeGen.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/extra/extraBlocksDefs.js\",\"blockly-contrib/npm/node-red-contrib-blockly/lib/extra/toolbox.xml\",\"blockly-contrib/npm/node-red-contrib-blockly/messages/en.js\"]},{\"name\":\"Blockly standard\",\"files\":[\"blockly-contrib/npm/node-red-contrib-blockly/lib/basic/toolbox.xml\"]}],\"customizeToolbox\":false,\"name\":\"\"}]\n","output":"str","x":1224,"y":1368,"wires":[["a44db034eaf2f468"]]},{"id":"a44db034eaf2f468","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"package.json","filename":"package.json","format":"json","syntax":"mustache","template":"{\n    \"name\"         : \"node-red-contrib-blockly\",\n    \"version\"      : \"2.3.0\",\n    \"description\"  : \"A Node Red node for visual programming a function using Blockly\",\n    \"dependencies\": {\n        \"blockly\": \"^10.1.3\",\n        \"@blockly/field-date\": \"^8.0.3\",\n        \"@blockly/plugin-workspace-search\": \"^8.0.6\",\n        \"@blockly/zoom-to-fit\": \"^5.0.4\",\n        \"@blockly/workspace-backpack\": \"^5.2.0\",\n        \"@blockly/plugin-workspace-search\": \"^8.0.4\",\n        \"@blockly/toolbox-search\": \"^1.1.6\",\n        \"@blockly/workspace-minimap\": \"^0.1.0\",\n        \"@blockly/theme-dark\": \"^6.0.1\",\n        \"@blockly/theme-highcontrast\": \"^5.0.1\",\n        \"@blockly/theme-tritanopia\": \"^5.0.1\",\n        \"@blockly/theme-deuteranopia\": \"^5.0.1\",\n        \"@blockly/theme-modern\": \"^5.0.1\",\n        \"acorn\": \"^8.10.0\",\n        \"acorn-walk\": \"^8.2.0\"\n    },\n    \"author\": {\n        \"name\": \"Bart Butenaers\"\n    },\n    \"contributors\": [\n        {\n            \"name\": \"Simon Walters\",\n            \"url\": \"https://github.com/cymplecy\"\n        },\n        {\n            \"name\": \"Jeff SC Cheng\",\n            \"url\": \"https://github.com/jsccjj\"\n        },\n        {\n            \"name\": \"Ralph Wetzel\",\n            \"url\": \"https://github.com/ralphwetzel\"\n        }\n    ],\n    \"license\": \"Apache-2.0\",\n    \"keywords\": [ \"node-red\", \"blockly\", \"function\", \"visual\", \"programming\", \"javascript\", \"generate\" ],\n    \"bugs\": {\n        \"url\": \"https://github.com/bartbutenaers/node-red-contrib-blockly/issues\"\n    },\n    \"homepage\": \"https://github.com/bartbutenaers/node-red-contrib-blockly\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/bartbutenaers/node-red-contrib-blockly.git\"\n    },\n    \"node-red\"     : {\n        \"nodes\": {\n            \"blockly\": \"blockly.js\",\n            \"blockly-config\": \"blockly_config.js\"\n        }\n    }\n}\n","output":"str","x":1224,"y":1418,"wires":[["8565e76e92987965"]]},{"id":"8565e76e92987965","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"timers.json","filename":"examples/timers.json","format":"json","syntax":"mustache","template":"[{\"id\":\"6f9044a0.b3870c\",\"type\":\"Blockly\",\"z\":\"c2a7925b.6e143\",\"func\":\"if (context.get(\\\"timeout_1\\\")) {\\n  clearTimeout(context.get(\\\"timeout_1\\\"));\\n  context.set(\\\"timeout_1\\\", undefined);\\n}\\nvar timeout_1 = setTimeout(function() {\\n  node.send([msg]);\\n}, 3000);\\ncontext.set(\\\"timeout_1\\\", timeout_1);\",\"workspaceXml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\">\\n  <block type=\\\"clear_timeout\\\" id=\\\"Q83YfytwSD~%X8Vn832C\\\" x=\\\"-187\\\" y=\\\"-162\\\">\\n    <mutation xmlns=\\\"http://www.w3.org/1999/xhtml\\\" dropdown_options=\\\"{&quot;nothing_selected&quot;:&quot;none&quot;,&quot;;qWY9%iIXdYS{7I@S1s0&quot;:&quot;timeout_1&quot;}\\\"></mutation>\\n    <field name=\\\"NAME\\\">;qWY9%iIXdYS{7I@S1s0</field>\\n    <next>\\n      <block type=\\\"set_timeout\\\" id=\\\";qWY9%iIXdYS{7I@S1s0\\\">\\n        <field name=\\\"NAME\\\">timeout_1</field>\\n        <field name=\\\"DELAY\\\">3</field>\\n        <field name=\\\"UNIT\\\">sec</field>\\n        <statement name=\\\"STATEMENT\\\">\\n          <block type=\\\"node_send\\\" id=\\\"(GgJ]u-3f|Nf^?KS,u:S\\\">\\n            <field name=\\\"OUTPUT_NR\\\">1</field>\\n            <value name=\\\"MESSAGE_INPUT\\\">\\n              <shadow type=\\\"node_msg\\\" id=\\\"O=fXK^rqJuO|7R~-feV)\\\"></shadow>\\n            </value>\\n          </block>\\n        </statement>\\n      </block>\\n    </next>\\n  </block>\\n</xml>\",\"outputs\":1,\"blocklyConfig\":\"d7a036fa.2c0298\",\"name\":\"\",\"x\":460,\"y\":520,\"wires\":[[\"23f77ae.7ac7086\"]]},{\"id\":\"bb11da23.5f7ff8\",\"type\":\"inject\",\"z\":\"c2a7925b.6e143\",\"name\":\"Delay this msg 3 seconds\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"Delayed with 3 seconds\",\"payloadType\":\"str\",\"x\":210,\"y\":520,\"wires\":[[\"6f9044a0.b3870c\"]]},{\"id\":\"23f77ae.7ac7086\",\"type\":\"debug\",\"z\":\"c2a7925b.6e143\",\"name\":\"Delayed msg\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"payload\",\"targetType\":\"msg\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":630,\"y\":520,\"wires\":[]},{\"id\":\"abafc1856f0580f5\",\"type\":\"Blockly\",\"z\":\"c2a7925b.6e143\",\"func\":\"if (context.get(\\\"interval_1\\\")) {\\n  clearInterval(context.get(\\\"interval_1\\\"));\\n  context.set(\\\"interval_1\\\", undefined);\\n}\\nvar interval_1 = setInterval(function() {\\n  node.send([msg]);\\n}, 2000);\\ncontext.set(\\\"interval_1\\\", interval_1);\",\"workspaceXml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\">\\n  <block type=\\\"clear_interval\\\" id=\\\"lxEB}pT[]h;|XRLCw;MH\\\" x=\\\"-237\\\" y=\\\"-287\\\">\\n    <mutation xmlns=\\\"http://www.w3.org/1999/xhtml\\\" dropdown_options=\\\"{&quot;nothing_selected&quot;:&quot;none&quot;,&quot;9x|||hb7Dv071Rpxc8t(&quot;:&quot;interval_1&quot;}\\\"></mutation>\\n    <field name=\\\"NAME\\\">9x|||hb7Dv071Rpxc8t(</field>\\n    <next>\\n      <block type=\\\"set_interval\\\" id=\\\"9x|||hb7Dv071Rpxc8t(\\\">\\n        <field name=\\\"NAME\\\">interval_1</field>\\n        <field name=\\\"INTERVAL\\\">2</field>\\n        <field name=\\\"UNIT\\\">sec</field>\\n        <statement name=\\\"STATEMENT\\\">\\n          <block type=\\\"node_send\\\" id=\\\"Xqj)7E{pqs!}R4^ad1B*\\\">\\n            <field name=\\\"OUTPUT_NR\\\">1</field>\\n            <value name=\\\"MESSAGE_INPUT\\\">\\n              <shadow type=\\\"node_msg\\\" id=\\\"WRdFmo@ZPjzy4o|Hbmm*\\\"></shadow>\\n            </value>\\n          </block>\\n        </statement>\\n      </block>\\n    </next>\\n  </block>\\n</xml>\",\"outputs\":1,\"blocklyConfig\":\"d7a036fa.2c0298\",\"name\":\"\",\"x\":460,\"y\":580,\"wires\":[[\"b6d7c80b9cd67967\"]]},{\"id\":\"3d2d2c395dc5c3d8\",\"type\":\"inject\",\"z\":\"c2a7925b.6e143\",\"name\":\"Repeat this msg every 2 seconds\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"Resend every 2 seconds\",\"payloadType\":\"str\",\"x\":230,\"y\":580,\"wires\":[[\"abafc1856f0580f5\"]]},{\"id\":\"b6d7c80b9cd67967\",\"type\":\"debug\",\"z\":\"c2a7925b.6e143\",\"name\":\"Repeated msg\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"payload\",\"targetType\":\"msg\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":640,\"y\":580,\"wires\":[]},{\"id\":\"d7a036fa.2c0298\",\"type\":\"blockly-config\",\"showTrashcan\":true,\"allowComments\":true,\"showZoomControl\":true,\"toolboxPosition\":\"left\",\"renderer\":\"geras\",\"name\":\"Left\"}]\n","output":"str","x":1224,"y":1468,"wires":[["005b7a555297df07"]]},{"id":"005b7a555297df07","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"trigger_complete_node.json","filename":"examples/trigger_complete_node.json","format":"json","syntax":"mustache","template":"[{\"id\":\"bb6162cc.e1704\",\"type\":\"Blockly\",\"z\":\"c2a7925b.6e143\",\"language\":\"en\",\"func\":\"node.send([msg]);\\nif ((msg['payload']) == 'activate_done') {\\n  node.done();\\n}\\n\",\"workspaceXml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\">\\n  <block type=\\\"node_send\\\" id=\\\"Yoqo0*^[cs89^n:s:mB:\\\" x=\\\"-587\\\" y=\\\"-537\\\">\\n    <field name=\\\"OUTPUT_NR\\\">1</field>\\n    <value name=\\\"MESSAGE_INPUT\\\">\\n      <shadow type=\\\"node_msg\\\" id=\\\"54X^[E^pMXOTtqY3prub\\\"></shadow>\\n      <block type=\\\"node_msg\\\" id=\\\"2pz7$WcP#?EYH`4,t}rO\\\"></block>\\n    </value>\\n    <next>\\n      <block type=\\\"controls_if\\\" id=\\\"f4)[rrPR|B;uWPhziE]T\\\">\\n        <value name=\\\"IF0\\\">\\n          <block type=\\\"logic_compare\\\" id=\\\"UM.)|z.!+]O^@#z+qaD]\\\">\\n            <field name=\\\"OP\\\">EQ</field>\\n            <value name=\\\"A\\\">\\n              <block type=\\\"node_object_get\\\" id=\\\"FCAkJxW%BN$,0],!tE=*\\\">\\n                <mutation xmlns=\\\"http://www.w3.org/1999/xhtml\\\" action=\\\"GET\\\"></mutation>\\n                <field name=\\\"action\\\">GET</field>\\n                <value name=\\\"object\\\">\\n                  <shadow type=\\\"node_msg\\\" id=\\\"L.1CSMob$,3W[o0)]1B8\\\"></shadow>\\n                  <block type=\\\"node_msg\\\" id=\\\"g@IOruwt,yUL,zy[|jA3\\\"></block>\\n                </value>\\n                <value name=\\\"field_name\\\">\\n                  <shadow type=\\\"text\\\" id=\\\"eHgGVFgeUM:q^-r!FFP`\\\">\\n                    <field name=\\\"TEXT\\\">payload</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </value>\\n            <value name=\\\"B\\\">\\n              <block type=\\\"text\\\" id=\\\"%a|;]8Jx=84[U#9ooWD!\\\">\\n                <field name=\\\"TEXT\\\">activate_done</field>\\n              </block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\\"DO0\\\">\\n          <block type=\\\"node_done\\\" id=\\\"BE:%8^@,:?;!$W1~^w_o\\\"></block>\\n        </statement>\\n      </block>\\n    </next>\\n  </block>\\n</xml>\",\"outputs\":1,\"name\":\"\",\"x\":380,\"y\":100,\"wires\":[[\"38459650.ac32da\"]]},{\"id\":\"88a2a218.f1f35\",\"type\":\"inject\",\"z\":\"c2a7925b.6e143\",\"name\":\"Don't activate \\\"done\\\"\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"dont_activate_done\",\"payloadType\":\"str\",\"x\":170,\"y\":100,\"wires\":[[\"bb6162cc.e1704\"]]},{\"id\":\"38459650.ac32da\",\"type\":\"debug\",\"z\":\"c2a7925b.6e143\",\"name\":\"Blockly output\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"payload\",\"targetType\":\"msg\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":600,\"y\":100,\"wires\":[]},{\"id\":\"e48085d7.32f838\",\"type\":\"complete\",\"z\":\"c2a7925b.6e143\",\"name\":\"\",\"scope\":[\"bb6162cc.e1704\"],\"uncaught\":false,\"x\":390,\"y\":220,\"wires\":[[\"c8ab2289.02c92\"]]},{\"id\":\"c8ab2289.02c92\",\"type\":\"debug\",\"z\":\"c2a7925b.6e143\",\"name\":\"Msg completed\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"payload\",\"targetType\":\"msg\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":600,\"y\":220,\"wires\":[]},{\"id\":\"bf4e9e59.f7a49\",\"type\":\"inject\",\"z\":\"c2a7925b.6e143\",\"name\":\"Activate \\\"done\\\"\",\"props\":[{\"p\":\"payload\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"activate_done\",\"payloadType\":\"str\",\"x\":160,\"y\":140,\"wires\":[[\"bb6162cc.e1704\"]]}]\n","output":"str","x":1224,"y":1518,"wires":[["8d017fbde3c610b2"]]},{"id":"8d017fbde3c610b2","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"README.md","filename":"README.md","format":"markdown","syntax":"mustache","template":"# node-red-contrib-blockly\nA Node Red node that offers a visual programming interface, to make programming a function node easier.  Just drag and drop blocks to build your program logic, without having to write the Javascript code yourself.  By building your code in a visual way, you don't have to learn the Javascript syntax, which makes programming very difficult for beginners.\n\nMoreover the generated Javascript code can be displayed, so you can learn Javascript coding step by step...\n\nThanks to lots of people, for their assistance during the development of this node:\n* A lot of folks on the Google Blockly [forum](https://groups.google.com/forum/#!forum/blockly) ...\n* [Simon Walters](https://github.com/cymplecy) as analyst and righteous judge of this repository.\n* [Jeff](https://github.com/jsccjj) for contributing to features like full-screen mode.\n* All the translator folks that translate our block texts in multiple languages.\n\n## Install\nRun the following npm command in your Node-RED user directory (typically ~/.node-red):\n```\nnpm install node-red-contrib-blockly\n```\n\n## Support my Node-RED developments\nPlease buy my wife a coffee to keep her happy, while I am busy developing Node-RED stuff for you ...\n\n<a href=\"https://www.buymeacoffee.com/bartbutenaers\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy my wife a coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Performance\nThe performance of this node is identical to the standard Function-node!\n\nIndeed the Javascript code will be generated once, when the content of the Blockly workspace has been edited.  From then on that generated code will run on the Node-RED server side, using exactly the \"same\" sandbox mechanism as used by the Function-node.\n\n## Where used\nWhen implementing your custom logic into a Node-Red flow, sometimes the available nodes won't be sufficient.  In those cases the standard *function node* can be used, to implement your logic by entering custom Javascript coding.  However to avoid having to write Javascript code yourself, you can draw your logic by dragging and dropping blocks into the Blockly editor.\n\nAs soon as the the Node-Red flow is deployed, the generated Javascript code will run on the Node-Red flow (similar to a standard function node):\n\n![Where used](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_where_used.png)\n\n1. ***Draw*** the blocks on your editor, according to your business logic.\n2. When *deploying* the flow, the corresponding ***Javascript code will be generated*** and send to the server.\n3. Create an ***input message*** (called *'msg'*), which can contain an arbitrary number of fields (e.g. payload, topic, ...) and their corresponding values.\n4. The *msg* arrives at the Blockly node, which will ***execute*** the generated Javascript code.\n5. The generated Javascript code can ***send*** an output message on one of it's output ports.\n6. The ***output message*** will be handled by the next nodes in the flow.\n\n## Hello world example\nAs soon as an input message arrives, we will set the *'payload'* property of that input message to *'Hello world'*.  And afterwards that updated input message will be send to the output port:\n\n![Hello world](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_hello_world.png)\n\nThe following animation shows how this example flow can be constructed using the Blockly node:\n\n![blockly_2_0_demo](https://user-images.githubusercontent.com/14224149/126551137-5c99d6d9-7097-47c1-8d0b-ea71d27ec7f7.gif)\n\nLots of other examples can be found in the [wiki](https://github.com/bartbutenaers/node-red-contrib-blockly/wiki) pages ...\n\n## Blockly basics\n[Blockly](https://developers.google.com/blockly/) is a visual block programming language (and editor), maintained by Google.  A lot of documentation (tutorials, videos, ...) can be found on the internet, but here are some bascis to get you started:\n+ A block can have a *value input* at the right side.  Or a *value output* at the left side.  Or both:\n\n    ![Value input output](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_values.png)\n    \n+ A *statement* is created by connecting value inputs and value outputs together horizontally, to pass data from the outputs to the inputs:\n\n    ![Statement](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_statement.png)\n   \n  In this example the Node-Red input message is cloned, and then the cloned message is send to output 1 of your Blockly node. This means you have to read the chain of blocks from the right to the left ...\n  \n  Caution: the *data type* requested by a value input should be equal to the data type offered by the value output.  Otherwise you cannot connect the value output to the value input!\n  \n+ A value input can be *inline* or *external*:\n\n    ![Inline or external](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_inline.png)\n    \n    For an inline value input, the next block will be *inside* the previous block.  For an external value input, the next block will be *after* the previous block:\n    \n    ![Inline or external example](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_inline_example.png) \n    \n    When right-clicking on top of a block, a context menu appears where you can switch between inline and external inputs.\n\n+ A block input can be connected automatically to a *shadow block*:\n\n    ![Shadow block](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_shadow.png) \n\n    A shadow block is like a default value for that input, which is automatically attached to it (already in the toolbox).  You cannot delete the shadow block, but you can drop another block on top of it.  In that case the shadow block will be ignored an the new block will be used as input value.\n  \n+ A block can have properties to change the behaviour of the block:\n\n    ![Block properties](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_properties.png) \n  \n+ A block can have a *statement input* at the top side.  Or a *statement output* at the bottom side.  Or both:\n\n    ![Statement input output](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_statement_input.png) \n    \n    Remark: a block can have multiple inputs.\n    \n+ A *program* (or *statement stack*) is created by connecting statement inputs and statement outputs together vertically, to specify the order in which the statements needs to be executed:\n\n    ![Statements stack](https://raw.githubusercontent.com/bartbutenaers/node-red-contrib-blockly/master/images/blockly_statements_program.png) \n\n    In this example we start by showing a green node status \"Re-sending started\".  Afterwards the input message is cloned 10 times and sended to the output port, and every time a log is written to the console \"Logging that the message has been resended\".  And we end by showing a green node status \"Re-sending completed\".  This means you have to read the blocks from the top to the bottom ...\n    \n!!! CAUTION !!!\n*Blockly always starts counting from 1*, while Javascript starts counting from 0!  This might be confusing for users that are already familiar with programming in Javascript...\n\n## Config screen\nThe node's config screen consists out of a series of elements:\n\n![Config screen](https://user-images.githubusercontent.com/14224149/126552977-4b008412-81a3-491e-b74d-d5a32e484bb4.png)\n\n1. The **library** button is similar to the standard *function node*: the code from this Blockly node can be made globally available by adding it to a libary.  That library will be stored withing the 'libs' directory in your node-red user directory.\n2. The **config node** that contains the settings used in this Blockly node.  If no config node has been selected, then the default settings will be used.\n3. The **editor** tabsheet displays a Blockly workspace editor.  Here blocks can be added, which will be converted afterwards to Javascript code.  Note the fullscreen icon beside the toolbar label: see [wiki](https://github.com/bartbutenaers/node-red-contrib-blockly/wiki/Use-fullscreen-mode).\n4. The **generated Javascript** tabsheet will display the Javascript code, which is generated based on the blocks in the Blockly editor.  This code is readonly, which means you cannot change it!  Reason is that it is *not possible* to generate Blockly blocks, starting from Javascript code ...\n5. The **generated XML** tabsheet will display the XML, that represents the blocks in the Blockly editor.\n6. The Blockly **toolbox** shows all available blocks, grouped by category.\n7. The Blockly **editable area** shows all the blocks representing your custom logic.  Blocks can be dragged from the toolbox into the editable area.  A lot of user interaction is offered in this area:\n    + When pressing the delete button, the selected blocks will be removed. \n    + When pressing ctrl-f, a search field will be displayed (containing a next and previous button).  See [wiki](https://github.com/bartbutenaers/node-red-contrib-blockly/wiki/Search-for-Blockly-nodes).\n    + By clicking and dragging with the mouse, the user can start panning to alter which part of the area is being visualised.  \n    + By clicking on a block and dragging with the mouse, the block (and all of its's chained next blocks) will be moved.\n    + By rotating the mouse wheel, you can zoom in/out.\n    + By using ctrl-c and ctrl-v the selected block will be copied.  When the block is connected to next blocks, the entire block chain will be copied.  Note that you can also paste the selected block in another blockly node!\n    + By using ctrl-z the last action will be undone.\n    + By right-clicking a context menu appears.  That context menu will be different if the grid is clicked, or if a block is clicked.\n    + ...\n    \n    Remark: the toolbox and the editable area together are called a *'workspace'.\n8. The **backpack** button allows to create a custom list of your favorite blocks.  See [wiki](https://github.com/bartbutenaers/node-red-contrib-blockly/wiki/Add-your-favorite-blocks-to-a-backpack).\n9. The **zoom to fit** button will automatically zoom the workspace, so all the blocks will become visible at once.  \n10. The **center* button allows the available blocks to be centered in the middle of visible workspace area.\n11. The **zoom in** button.\n12. The **zoom out** button.\n13. The **thrash can** button.  Click on the bin to show the removed blocks, and optionally restore them.\n14. The number of **output ports** for the Blockly node in the Node-Red flow editor.  Make sure that this number doesn't exceed the output port number of the *'send'* block (see below).\n\n## Node-Red blocks\nWhen writing Javascript code in a standard *function node*, some Node-Red functionality can be called from within that code (see function node [API](https://nodered.org/docs/writing-functions#api-reference)).  To offer the same functionality in the Blockly editor, a series of extra blocks have been added.  These blocks are availble in the 'Node-Red' category in the toolbox:\n\n![Function API](https://user-images.githubusercontent.com/14224149/126556426-e629916e-5739-482c-84f4-20bd14712a1b.png)\n\n1. **Get** the value of some property in an object.\n2. **Set** some property in an object to a specified value.\n3. **Send** to the specified output port the message, which is specified on the block input.  Make sure that the specified output number doesn't exceed the number of outputs on the Blockly node!\n4. The **input message (msg)** exposes the input message that arrive's in the Node-Red flow, on the Blockly node input port.\n5. The Node-Red **flow** memory can be used to store data that needs to be shared by all nodes in a flow.  \n6. The Node-Red **global** memory can be used to store data that needs to be shared by all nodes. \n7. The Node-Red **(node)context** memory can be used to store data that needs to be shared by all blockly nodes. \n8. **Return** the specified message.  This means that we stop processing (i.e. the next blocks will not be executed), and the message will be send on the output port.\n9. Show the specified text in the **node status**.  Both the status icon shape and color can be specified.\n10. **Remove** the node status from the node.\n11. **Log** the specified text in the console.  Multiple log levels are available (log, error, warning, trace, debug).  The warnings and errors will also be displayed in the flow editor debug tab.  The trace and debug levels are only used to display details, and are not visible if no logger for those levels is specified in Node-Red.\n12. **Clone message** can be used to create a new separate copy of the specified message.\n13. Get the specified **node property**.  The node identifier, node name and node output count can be get.\n14. Specify that the processing of the message has been **completed**, so it can be handled by the Complete-node in the flow.  See [wiki](https://github.com/bartbutenaers/node-red-contrib-blockly/wiki/Trigger-a-Complete-node-via-a-Done-block).\n15. Some things can be don when the **node is closed**, most of the time to cleanup stuff.\n\n## Config node settings\nThe Blocky workspace can be configured via the settings in the selected config node:\n\n![image](https://github.com/bartbutenaers/node-red-contrib-blockly/assets/14224149/bbd27965-f83c-4a03-8583-98ce53c40f0f)\n\nThese settings will be applied to every Blockly node where this config node has been selected:\n+ Specify whether a **trash can** icon needs to be displayed in the workspace.\n+ Specify whether **comments** can be added to blocks in the workspace.\n+ Specify whether the 4 **zoom** icons needs to to be displayed in the workspace.\n+ Specify whether a ***mini map*** needs to be displayed in the expanded (i.e. full screen) workspace:\n\n   ![image](https://github.com/bartbutenaers/node-red-contrib-blockly/assets/14224149/f3c2c6f2-e372-4c82-9395-6d98fcb9162d)\n  \n+ Specify whether a **backpack** icon needs to be be displayed in the workspace.\n+ Customize the toolbox **categories** to fit your needs. CAUTION: this is only for advanced users and need to be done with care!!  When this checkbox is activated, the \"Categories\" tabsheet will become enabled.  See [wiki](https://github.com/bartbutenaers/node-red-contrib-blockly/wiki/Customizing-the-toolbox).\n+ Specify the **language** that needs to be used in the blocks in the workspace.\n+ Specify the location of the **toolbox**, relative to the workspace.\n+ Specify the **renderer**, which determines how the blocks need to be drawn.\n+ Specify the **theme**, which determines the look and feel of Blockly (block colours, category colours, ...)\n\n## Need a change ...\nWhen you need a change in this node, you can create a new Github issue.  A couple of remarks about this:\n+ Check in advance whether that change hasn't been requested yet (as a Github [issue](https://github.com/bartbutenaers/node-red-contrib-blockly/issues)).  \n* Take into account that the *function node* offers much more functionality, since we cannot create blocks for all Javascript statements.  \n* Keep in mind that we won't create blocks for functionality, whcih is already available in other Node-RED nodes (e.g. send mail, ...).\n\n## Need blockly in your own language ...\nGoogle has already provided translations for all their basic blocks.  However for our own blocks, there are currently only translations available in a few languages.  If you want to translate the blocks in your own language, please follow these steps:\n+ Clone the [en.js](https://github.com/bartbutenaers/node-red-contrib-blockly/blob/master/messages/en.js) to a xx.js file (with xx being your country code like 'nl', 'en', 'fr', 'jp', ...).\n+ Translate all the texts from the xx.js file in your own language.  Blockly will automatically replace the placeholders (%1 %2 ...) by widgets (dropdowns, input fields, ...).  You are allowed to rearrange the placeholders, because blockly will automatically rearrange the corresponding widgets also.  For example *'convert date %1 to format %2'* could be *'xxx %2 xxxx %1 xxx'* in a language that is being read from right to left.\n+ Test whether the blocks look good and correct in your language.\n+ Deliver us the xx.js file (preferrable by pull request, or otherwise e.g. via a new issue).\n\nThanks in advance !\n","output":"str","x":1224,"y":1568,"wires":[["5654794d3518c3ce"]]},{"id":"5654794d3518c3ce","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_api.png","filename":"images/blockly_api.png","format":"base64","syntax":"mustache","template":"","output":"str","x":1224,"y":1618,"wires":[["6388565e804bce4a"]]},{"id":"6388565e804bce4a","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_hello_world.png","filename":"images/blockly_hello_world.png","format":"base64","syntax":"mustache","template":"iVBORw0KGgoAAAANSUhEUgAAAOEAAABvCAIAAACVazCFAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABYVSURBVHhe7Z3pdxrHmsb9182HnHzIXxPPHWXOmZvZs01urpOJkyiKndXWxIlkW5YttG+WhDZAYt8XCRAIJCSQAGme6qpumoIGuoXYVM95jk53UU1T9f54qwtVw71rIaHelmBUqNclGBXqdQlGhXpdglGhXpdgVKjX1ZzRy8vLYrHIdvSoUCiUy2W2o0fn5+dsS49wrouLC7ajR2idsQbidB1uILqU7egRWocgsh09QgNLpRLb0aN8Ps+29Ojq6qpuA5swirYdHBzE43G9UcTJAoFAJpPRG0XEz+12640iznJ8fBwMBvVGEe06lGSggTgdTmqggS6Xy0AD0ZnoUgMNRPgQRL2YAtBQKJROp/ViCkA9Hs/Z2Rnbb00ANJvN+v3+2gY2YfT09BTnw5F6T4m22e32SCRCY38SP/etHdinw/aZKp8m+FABF6vVim7F9kn8jKuv5f3p4PaE2/zcbn3t4x5qbNuUf+ulE8aGUli8KGUPzxo7Hkj59kIR18Fx7IR7qLFj3oTH6sdfuls4bQkddCM6E12KjmVFrQmB8/l8Xq8XoWRFrQlvCafTCUz1jk6JRMJms+FdAexYUQtCA6PR6P7+fiqVYkWymo/1aJteQKnQmzhxMV/anw6v/epY/dG+8nh/4Vur4pVH+yh3LUXYAbIooP71w/XfnMs/VB3SGW++3otYkp3xgT11cd5SCkci1AsoFcKnF1AqYGrs8gmY6gKUCrDUAgrd7pwpf3K5PeZd+n5v6n+26tr0t+3lkb31pw51QkX6JEeN7Jk+3+bqd8Yzv7zlSLpV50+McHB3dLuMYtxc/kETUMVzX1vWfnFYJsgwbXsdQPqc+18LV6eTFoz2lG6R0fPsBWjjwq9lJNTF72wYZxeHbd1Kn4pnf1njMLpVC0Yb6xYZDe8mVx7bufD3oP/8j/mZn9ZCO4nd596pz7def2peHDVzGN2qBaONdYuMOhciDa5EO2lXqHSdOuIKFf/4wbiCi289NvVwzbkSVEo6YMFoY90io/aZEMZuDoiuOIrJojajj/9ljIOmwxaMNlb/Mzp/In9yU0rNcyX5KHZt7H8eOVv1gbJNP65w0Gg7X7y+KuToZ9pXhRh2icq5HB7N5ORPW0qXGan+Gf00ulQqlq6LafXzVFkw2lh9zyhyZDEUwYY8oB/lZFiVIb5xHp3+eZWDRtsSlIU8tiX+SmcUTQKlhG8MdXIFSmQaKJMKkdhl+Vowalz9n0dZmqxNolQklbaXUUobQVOClbAoJU45a6qSKK2gUMuehLdgtLEG5HqUpEyocOIijEpDvMqNGZ16vMxBo+1GjEoVCI4QRn/BaLs0CGM9u9BEQgWjZKxXjf6kpAmjE98ucNBouwGjeEga2aUMSq5QxVjfJg1AHiVQStKYM8lZVmvO9MtfJ6K2IzU03K7KDfMogVKSergnu2LOdCMNyFh/E4//19KBg0EZMB8uP9qzr/oUgNpgkkfpdKq+BaONJRhlNj91mUdd01+Qf8O25//1SlqVP5zSsmC0sQSjdSzWlPSUmjOaz+f1rv2msk35BaOtuEVGS6WSsWWgCJ+xmzdyuVzR0F00mUzGwPpRNPDk5ITtqNSEUbQtFApFIhG9mKI3N587+pTRV8MLCc8xR9LtuRVGEb9EIuHxePRiisAhfAiiXkwBqM/nM3AXDQB1OBzpdFoXpuVyOZlMut3uWkwFo3X8/Ne5zbDHHHQ38Lrfuezee+u1bwRc3EONveZzLLls+KuU4FybkTreinhhthv2vPXbl922jaBTXa61rdgccq9691e8exshF/dQY8fSyf5gFLqDYz0YnXbv3nGvhZyGx/psNtu5sf4m6t85k2CUmgWy2xKM1rFglJoFstsSjBJPfLw29bhyg8qLJ/NctDgv+GyzHgvdnnHvznttsPIovBP1+VKHgXSiK/anDndifvXrgWc8ljmvddZjVe/ir1Kh1iyQ3ZZgdOv3f5sdG19ASN4sb02NbIPXiRfL6lCpDSLNYXfq7GQj7Ka7tsNgOJNc9tuVOpaYP5pNdd3Wg4DyksAi3jYoBL5L/n3sOhPRWDblSESUOrVmgey2BpLRyhLSVvzD0J9zbpZd4FdLa9POSpw4A81s4RyhReIEoMHjxPnlxXbUOyfnJzicOVKzot/2B+/du2/iCpt7e/jde0OT6hIlTS769pK5LIKCqQwS/GrQQWMEvQ06lFfOmdXotgaRUbKmRAejIx/+zsWmgYvlkucoRre3o77LUhHhVx6FcQ2gpsSQ28YoRnP6qhZ8e/HTDI3LwUl6JWCn2xDGAeXFc2Y1uq1uMCotomNfSCGtnaOZL5cqsZVK8t0dbEFdnfryglGILbpTnqHIPigrnGTlJfoStfyiUsXjP8xwsdHyVsRbKF7uxvzgcsZtCR0nsbsWdKovRjlGJW4egjkiBhBBkOm9h9vZ1PjQvXeG7eQh+8N37g2Nqxk1DbGaMnyoLAs11XXevT+kySi87N/fj4fxgmPZNF4kXrbn6AC7FtUlAWepH7uvLjHKVspFUgWKUWXRpyoLyo/W1peolWAlJdJD9Z4B1SSClZtG6vr5z63O4q0HwfLVFQb39PkpMI1kjspX5bOLgj8VVzCtw+i9dx/YsT15/55Enn1ynOzSEukhQCaxJSdCmVGCLD2WlEgcT46z/KpwLD8tRV+bURi7SPzKNSiumy9qxgG1pTB2X13Lo5V0SOghhFUvVVY9WlNSSaJU3DNUKEchu1eEPVTP449nudhoeTPiYWe8vsbMCRejdPv4PKfMmerl0UoKZPmS8iQlPxlfkhRRQaGNbIBdKdHWPg8VqyMnVHUdajWjeGF4nfniBb1IxeiP7b3DkFKh1rR1XVffMkqOkuoz12WU0slIVVWu8vhwq2M9nD47zV3kEexZjxXzJyRU7GIW0iiPcoxKQ7OcAimjlE5GaiNGSWaloKvqtMAokiUuQxO5DF4edjHQn10W3EcxuqtlFshuq1tjffVoXp8w9VjfrESDUWyTm4l4oKs8/rUORhH1t0Hngo8RueTfx26T61HGkDwoK+QRvBijgO/+ewphMn+1Yz27YKUPSXVaG+vxOjdCLjWyuLZu/OEozALZbXWN0aI8s5ESpIowVkESZatOfSmhUjH+1M9AtuWaygWrpn/710nkFXVsML1Q7+oyAq+mhDD63rvgiYgBRKiSdslcSsILlrnktqWkK1Wu4Ev03sMHypUDq1NnzqR8Ym/MtIO7rm4x2mjw5a23vtokpzY59sVHK3u7gWmXFBjrrml8e35uSx0qvcakRKFEYpSN142sJMj22ZmIci9Mr1kgu62BZpQcKE/2m3l21GIa3Z56QLZv+P96DP2uZJSC0hKjUiKUp1PtsTsZw6yIe2F6TePYdXWD0Z53W9aU4JoPV4FdcYOPk3SZBbLbas7oqdHvGre89t1lRgfA/fFd4wDU8G82bIyTr7Lnwt8XFoxS98dvNtzkt2+2Xjr7l9H9eKMPt++IAShyjd4f98l3+LdvIGBq7IaBPVNQ5NG74/BxkgVewpRt6REwrXtXkpgz1bFg1JhZ4NstwWgdC0aNmQW+3RKM1vHNGZ2RFr+th1x94bfV/2YzbBb4dkswSm5mGv3K9OrPtalvWMnLPxa53ld71mOxHQZXAmyh05zXuhP1Kbvwst8eSMe5D9V73L7UIfep6pJ/fyviXQmwVfpo1GbEo/zHv65Z4NutAWQ0qixtbs0//fOL2Z0d2stTK9vjXyy+Ma0p/c4ZgIaOk5elIv0XP3bPLy+SuSwiqtRxJ2OV8JP/Ian+yYldjX87yauWKouh2mr1eoD6Jep7m8Br4jRTuiqfXRbMYfe811Ysl0rlMv4qdWrNAt9uDR6jykoorlzTIx/8wfV1A3uODrL5M5pyFnx7COHBCVnWrlTg1j31EaPhzJHSitWgA82kcUSTN8Juug1thj1KNc6sRrs1aIzK66Ho2jxpARRRo3/3//LZC66vtYwB/aJUxMhOd53JaKF4ya0tap1RZaky/U99LaOkRFVBdoUttiC1cmzNIeR0Q/fJmr1f1UcRSeVajM57ra5k9Pg8h9zpl1bHRrJHoPbq6mq35q5oxayz260BzqOVhErAlRf11br1dfjWg8BlqRTJHOFCDSxiA8j603H1nKMeo9WSGFWoUqDkGa3AjZIqmOSa9gdDQ/eHyLOpVk9XH0JKKPEy2UqdygpUZjWjMKZ9uPrEmxCw0naZwx6M9fSm7bpmgW+3BphRJNHKSucGK/Rav5/JEvOztl1fYzQEo3T76OxEuR5tMY8qSZQKhHGMqiCu5MuqJwFkQ5PjQ3hy8KdxSOXsjFFyXlan0VgPz7h3d2L+s4sCfQeCV1zVZPI5dR3OtDfaLsGojvtCASJr2/X1csCOSUb5ivyfEHOmRf2MVmFXyY4tMErqDI2bhkAYqt0ffvgOn5tvyiguuDHzw9SQfpEEGi7dalI1Naw17Zm2S4z1W2PfTnN93cDrIZf7KLYZIfMG4Gg5CCCWa6HGY30dRglPrJyNyxyjqgNZhcpzSonzHSl3Ysiu3GRSe0gNo5WShmM9cqcvdajcj4B5Uug42XRBKgt8uzV4jEq/dKNnzvTsM5P6hqQbukVGsU1SmjzQY5dnlHFcqaB2LeKqctUhtYwq5204ZzJm1tnt1gAyqtejH5qsUdX3IOzu7vi9lV39Dh4nlMD3kZE4uYboNQt8uyUYJZ7/bmd2wzpt2TW9JN+eNz25zvW+LmPWz4W/L2zWnrC3aBb4dkswWsc3/389Llvt8bAzEe0L46Vyd8YaMwt8u9Wc0ePj47rfAN1UO688d5bRu2kW+OvrSCRi4F4RuqCe7ajUhNFMJmO3251Op15MDw8P18f2BKN3yjT0AHRnZycYDOrCFID6fD6LxVKLaRNGcZqjoyOkUr1vi3K5bJv1zHxNfulQyy8+WuHg4Dzx8Rp3SGcMRtXfeSvcopXQBwIBA/duFAqFcDhce2tK87EedOoFlCrhPzb/4Xz71K7ltVH77PDW60/NHJrUT/765tknptXf9rij4PVRvkTyvmSusBXzB+Jlb73ytGB3TUmL7vCBOOqWD5z0+FKHLPASpmxLp+oeeItzJtdidPnR/tzXFi0vDttWf7JvPHO8/KQqoSK/PvpgbOHRztuf7Avf2bij4LqFwt318p+bLPDt1i0y6l6KtnI9ClLXnzqRUOk4S9Pnxqhz8TsbV1O4lz32lYkFvt3qPqPw7Fe7SKjmZy6MuRu/O5E+Z77c5eoI97gHnFFqOmTMP7Rw5Yb95rPNkb/80Umbvtyc/vsO9zLuiO8Eo203GF14usH9gOztOR062R7zCkbbLsFoO22bDAhG2y7BaDvdR4zidRr3F5XfBFQsGG3Vz/97GWjS7defbiw8NXMY3ar7gtGNp66AOc69cr12zoUXvqkKrmBUbdUC+2qPfmiaHF50r4VnviH/F3jx0erbsR2uc2/Vmoy28HXSLVrXndm1P26x+nife80Ry96Df7j3/k9cYXN7VmLqZxaMqq3J6PA//h61HdEedCwGHn3wh+ttUOnTDliT0Zt8XXqVKzcXtGKy3LuaUeurQPVrnnhfWvFsgFF46fvKZ9gDxqiyPL76VxaIGHxSAsizQtbLJDzSLsrrM/rbRxNcJ3bYGozKrZMaIt9dXQ816cvRiWp+iIJmRPlYNF96o4ZofdobKnzxPIUTl/xs6p+s2HujftMig/7TmISpMUaXf9hTnnmgGK0MQLQrpc5l/chKaCClxCP/kA0pofckka6vz+jrkUWuE7WdL15fFXI05FeFGHaJyrkcHs3k5PUJpcuMVP+Mvj1KpWLpuphWP0+Vm+dRZUPFH7PcUhVtPKPcQxXo5W6sYrReHq1mlLoBo3Hrz2x6NPt/gTD/6OAyKgWDSI6Q1N0VVRNJHkWJKgCshB5bMaZKs7+ucZ2obQnKQh7bEn+lM4omgVLCN4Y65KedCJFpoEwqRGKXZeS/GzAqo0YK+StLGSxsy9UaMyp3ArvYvQ1Gk5HdwNrXW6ZHbj9XLnlwGaUmYYPQuXWYM8AoPPdknetEbRNGKW0ETQlWwqKUOOWsqUqitIJCLXsS3gPIKGwOe3drCiX3CqNlSWxHj1yLEa2xnnWlqnNZV6pjWcWoqoTUqc+o6cdVrhO13YhRqQLBEcLo30ZGKxsq/pjrjPVVGzWMMiKVnlGIJBttZFTbWoyWSvQiSp+urq7qHtiEUdCZTCYNfCk6Trb7xq2RR6Uel1Qz3DP4ahmtHKU9Z3r+5RzXidpuwCgekkZ2KYOSK9Sbj/X08kbChTRNEnujqk0IliSDJVeWfvZc4Y80X2KUvo2U3pAPz6VYHqWHq98JHWAUoff7/ZeXl3S3RQHQ8/PzUChUi2kTRjOZjMPhcLlcp6enrKg1JRIJ88tO/67I6L+buE7UdsM8SqCUpB7uya7ROVP7XZOGW7P1lZ97zTdx3c+eotHo7i75vQddS+OLxWIgELBarfF4nBXJaj7WA1O9gFJZTZ3+fabXn5l96zGlB3Gx4VjmPg68mUkepdOp+u59RlfqfIZv0J5lzc/wgamBezeQeg8PK4v5FXVvznQ7Nv1tG30XMB+aR12Y6S8/2+J61oiVtCp/OKXlDjJq3BtPnP71Q+6V67VjNsytouzmnMmwnPOR5ZHK9UrnLdaUNPD0F9uGjUTAPRvcl4wGt+LLI/tcSzppwWgn3ZeMZmK5lUeC0bvivmQUMv/umq9ewdVJg9Hp79fIKhNrsjO2vPQLRtuu22X0KJBdGrGZPq9z+dIZ44K4k8a4Mf2FYLTNul1Gobgv9eLjJt9HIjwA7mNGofPTwpvh1Sd/fTP2n4vK99XALz9a5drJ+dUn3fkuHWED7m9Gqc6y5z5r2PzGuj5pUTz51QquGjk0qUc/ND18/7fFZxvq+sI9a8e6l0W63eoco1raX/K+rL4YmPh4beQvz558MpE6yLBKQndY3WcUOs/mX325QocMmj6RbstlI1+EJjR46glGqdxbATpqiPQppFYPMSokVFeCUaFel2BUqNfVnNGLiwu9a6qp8vm8sZtMzs7Yr1LrUqlUKhTk9f16hNYZayBO18kG4lzoUrajRzdpYN2bN5rq/PycbemRVgObMApAY7HY4eGh3kbiZH6///j4WG8Uc7mcy+XSG0V0ZTqdDgQCeqOIdh1IMtBAnM7AXTRoGhqIZrL91oSzoDPRpQYaiPAhiHobCECDwWAqldKLKRrodrv1rotHAzOZjM/nq21gE0bRlTgMwdD7zkCHOhyOaDSq97v7E4mEzWZLJpNsvzUhAJFIxOl0op2sqDWhQxF4SO+7AifC6XBSvbFH06xWK5rJ9lsTuhGdiS5Fx7Ki1oTAIXwIot53RTabxXspHA4jT7Gi1oQG7u3txeNxXUvx8U7AG8lut+Ntz4pkNR/r0TZjqRu9aeDHJSC9gFKBFb2AUoFOvYBS4XR6AaUy1kB0pl5AqRA+vYBSAVO9gFIdHR0ZuFeEDoZsRyUxZxLqdQlGhXpdglGhXpdgVKjXJRgV6nUJRoV6XYJRod7W9fX/A6Bra4nkT0lIAAAAAElFTkSuQmCC","output":"str","x":1224,"y":1668,"wires":[["5e0492bd1c3d4621"]]},{"id":"5e0492bd1c3d4621","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_inline_example.png","filename":"images/blockly_inline_example.png","format":"base64","syntax":"mustache","template":"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","output":"str","x":1224,"y":1718,"wires":[["4762fca58734b4dd"]]},{"id":"4762fca58734b4dd","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_inline.png","filename":"images/blockly_inline.png","format":"base64","syntax":"mustache","template":"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","output":"str","x":1224,"y":1768,"wires":[["8d2891b1ddc7eb35"]]},{"id":"8d2891b1ddc7eb35","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_new_topic.png","filename":"images/blockly_new_topic.png","format":"base64","syntax":"mustache","template":"","output":"str","x":1224,"y":1818,"wires":[["b57b3eb92674c4be"]]},{"id":"b57b3eb92674c4be","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_properties.png","filename":"images/blockly_properties.png","format":"base64","syntax":"mustache","template":"","output":"str","x":1224,"y":1868,"wires":[["b23b21caff06c20e"]]},{"id":"b23b21caff06c20e","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_screen.png","filename":"images/blockly_screen.png","format":"base64","syntax":"mustache","template":"","output":"str","x":1598,"y":1012,"wires":[["435d770a53b954c7"]]},{"id":"435d770a53b954c7","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_shadow.png","filename":"images/blockly_shadow.png","format":"base64","syntax":"mustache","template":"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","output":"str","x":1598,"y":1062,"wires":[["dd3ba45baec1ff1a"]]},{"id":"dd3ba45baec1ff1a","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_statement_input.png","filename":"images/blockly_statement_input.png","format":"base64","syntax":"mustache","template":"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","output":"str","x":1598,"y":1112,"wires":[["0d200513df3a85c6"]]},{"id":"0d200513df3a85c6","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_statement.png","filename":"images/blockly_statement.png","format":"base64","syntax":"mustache","template":"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","output":"str","x":1598,"y":1162,"wires":[["5db7242e789f203a"]]},{"id":"5db7242e789f203a","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_statements_program.png","filename":"images/blockly_statements_program.png","format":"base64","syntax":"mustache","template":"","output":"str","x":1598,"y":1212,"wires":[["2dd811240161b868"]]},{"id":"2dd811240161b868","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_values.png","filename":"images/blockly_values.png","format":"base64","syntax":"mustache","template":"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","output":"str","x":1598,"y":1262,"wires":[["4a3d5df6999ca520"]]},{"id":"4a3d5df6999ca520","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"blockly_where_used.png","filename":"images/blockly_where_used.png","format":"base64","syntax":"mustache","template":"","output":"str","x":1598,"y":1312,"wires":[["3f246f81930fff63"]]},{"id":"3f246f81930fff63","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/basic/toolbox.xml","format":"text","syntax":"mustache","template":"<!-- This toolbox XML file has been generated once manually, and it contains all the standard blocks offered by the Blockly team.  -->\n<!-- See procedure for this on https://github.com/bartbutenaers/node-red-contrib-blockly/issues/63#issuecomment-852441283          -->\n<!-- After that some manual changes have been made:                                                                                -->\n<!--    1) The category colors have been updated.                                                                                  -->\n<!--    2) Some blocks have been reordered within a category (i.e. the most used ones on top).                                     -->\n<!-- You can rerun this procedure, to see if new blocks or categories have been added by the Blockly team.                         -->\n<!-- But I noticed in the last 5 years that this almost never changes...                                                           -->\n<!-- If you ever find new or updated nodes, it is easier to apply those changes to this file (to keep e.g. all our custom colors). -->\n<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n  <category name=\"Logic\" colour=\"#5C81A6\">\n    <block type=\"controls_if\"></block>\n    <block type=\"logic_compare\">\n      <field name=\"OP\">EQ</field>\n    </block>\n    <block type=\"logic_operation\">\n      <field name=\"OP\">AND</field>\n    </block>\n    <block type=\"logic_negate\"></block>\n    <block type=\"logic_boolean\">\n      <field name=\"BOOL\">TRUE</field>\n    </block>\n    <block type=\"logic_null\"></block>\n    <block type=\"logic_ternary\"></block>\n  </category>\n  <category name=\"Loops\" colour=\"#5CA65C\">\n    <block type=\"controls_repeat_ext\">\n      <value name=\"TIMES\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">10</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"controls_whileUntil\">\n      <field name=\"MODE\">WHILE</field>\n    </block>\n    <block type=\"controls_for\">\n      <field name=\"VAR\" id=\")jU4tpD],qwF{9((T=aQ\" variabletype=\"\">i</field>\n      <value name=\"FROM\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n      <value name=\"TO\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">10</field>\n        </shadow>\n      </value>\n      <value name=\"BY\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"controls_forEach\">\n      <field name=\"VAR\" id=\"A-,$O)LJq:9F9`-d{KHW\" variabletype=\"\">j</field>\n    </block>\n    <block type=\"controls_flow_statements\">\n      <field name=\"FLOW\">BREAK</field>\n    </block>\n  </category>\n  <category name=\"Math\" colour=\"#5C68A6\">\n    <block type=\"math_round\">\n      <field name=\"OP\">ROUND</field>\n      <value name=\"NUM\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">3.1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_number\">\n      <field name=\"NUM\">0</field>\n    </block>\n    <block type=\"math_single\">\n      <field name=\"OP\">ROOT</field>\n      <value name=\"NUM\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">9</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_trig\">\n      <field name=\"OP\">SIN</field>\n      <value name=\"NUM\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">45</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_constant\">\n      <field name=\"CONSTANT\">PI</field>\n    </block>\n    <block type=\"math_number_property\">\n      <mutation divisor_input=\"false\"></mutation>\n      <field name=\"PROPERTY\">EVEN</field>\n      <value name=\"NUMBER_TO_CHECK\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">0</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_arithmetic\">\n      <field name=\"OP\">ADD</field>\n      <value name=\"A\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n      <value name=\"B\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_on_list\">\n      <mutation op=\"SUM\"></mutation>\n      <field name=\"OP\">SUM</field>\n    </block>\n    <block type=\"math_modulo\">\n      <value name=\"DIVIDEND\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">64</field>\n        </shadow>\n      </value>\n      <value name=\"DIVISOR\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">10</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_constrain\">\n      <value name=\"VALUE\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">50</field>\n        </shadow>\n      </value>\n      <value name=\"LOW\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n      <value name=\"HIGH\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">100</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_random_int\">\n      <value name=\"FROM\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n      <value name=\"TO\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">100</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"math_random_float\"></block>\n  </category>\n  <category name=\"Text\" colour=\"#5CA68D\">\n    <block type=\"text_charAt\">\n      <mutation at=\"true\"></mutation>\n      <field name=\"WHERE\">FROM_START</field>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"BcDpOb(oq2f)*.jj6f4v\" variabletype=\"\">text</field>\n        </block>\n      </value>\n    </block>\n    <block type=\"text\">\n      <field name=\"TEXT\"></field>\n    </block>\n    <block type=\"text_append\">\n      <field name=\"VAR\" id=\"TKa.(2RIs{nPw9X1*o@u\" variabletype=\"\">item</field>\n      <value name=\"TEXT\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\"></field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_length\">\n      <value name=\"VALUE\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">abc</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_isEmpty\">\n      <value name=\"VALUE\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\"></field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_indexOf\">\n      <field name=\"END\">FIRST</field>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"BcDpOb(oq2f)*.jj6f4v\" variabletype=\"\">text</field>\n        </block>\n      </value>\n      <value name=\"FIND\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">abc</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_join\">\n      <mutation items=\"2\"></mutation>\n    </block>\n    <block type=\"text_getSubstring\">\n      <mutation at1=\"true\" at2=\"true\"></mutation>\n      <field name=\"WHERE1\">FROM_START</field>\n      <field name=\"WHERE2\">FROM_START</field>\n      <value name=\"STRING\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"BcDpOb(oq2f)*.jj6f4v\" variabletype=\"\">text</field>\n        </block>\n      </value>\n    </block>\n    <block type=\"text_changeCase\">\n      <field name=\"CASE\">UPPERCASE</field>\n      <value name=\"TEXT\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">abc</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_trim\">\n      <field name=\"MODE\">BOTH</field>\n      <value name=\"TEXT\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">abc</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_print\">\n      <value name=\"TEXT\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">abc</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"text_prompt_ext\">\n      <mutation type=\"TEXT\"></mutation>\n      <field name=\"TYPE\">TEXT</field>\n      <value name=\"TEXT\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">abc</field>\n        </shadow>\n      </value>\n    </block>\n  </category>\n  <category name=\"Lists\" colour=\"#745CA6\">\n    <block type=\"lists_indexOf\">\n      <field name=\"END\">FIRST</field>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"gi}k7JX7=R5*T{1VE^F(\" variabletype=\"\">list</field>\n        </block>\n      </value>\n    </block>\n    <block type=\"lists_create_with\">\n      <mutation items=\"0\"></mutation>\n    </block>\n    <block type=\"lists_repeat\">\n      <value name=\"NUM\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">5</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"lists_length\"></block>\n    <block type=\"lists_isEmpty\"></block>\n    <block type=\"lists_create_with\">\n      <mutation items=\"3\"></mutation>\n    </block>\n    <block type=\"lists_getIndex\">\n      <mutation statement=\"false\" at=\"true\"></mutation>\n      <field name=\"MODE\">GET</field>\n      <field name=\"WHERE\">FROM_START</field>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"gi}k7JX7=R5*T{1VE^F(\" variabletype=\"\">list</field>\n        </block>\n      </value>\n    </block>\n    <block type=\"lists_setIndex\">\n      <mutation at=\"true\"></mutation>\n      <field name=\"MODE\">SET</field>\n      <field name=\"WHERE\">FROM_START</field>\n      <value name=\"LIST\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"gi}k7JX7=R5*T{1VE^F(\" variabletype=\"\">list</field>\n        </block>\n      </value>\n    </block>\n    <block type=\"lists_getSublist\">\n      <mutation at1=\"true\" at2=\"true\"></mutation>\n      <field name=\"WHERE1\">FROM_START</field>\n      <field name=\"WHERE2\">FROM_START</field>\n      <value name=\"LIST\">\n        <block type=\"variables_get\">\n          <field name=\"VAR\" id=\"gi}k7JX7=R5*T{1VE^F(\" variabletype=\"\">list</field>\n        </block>\n      </value>\n    </block>\n    <block type=\"lists_split\">\n      <mutation mode=\"SPLIT\"></mutation>\n      <field name=\"MODE\">SPLIT</field>\n      <value name=\"DELIM\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">,</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"lists_sort\">\n      <field name=\"TYPE\">NUMERIC</field>\n      <field name=\"DIRECTION\">1</field>\n    </block>\n  </category>\n  <category name=\"Colour\" colour=\"#A6745C\">\n    <block type=\"colour_picker\">\n      <field name=\"COLOUR\">#ff0000</field>\n    </block>\n    <block type=\"colour_random\"></block>\n    <block type=\"colour_rgb\">\n      <value name=\"RED\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">100</field>\n        </shadow>\n      </value>\n      <value name=\"GREEN\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">50</field>\n        </shadow>\n      </value>\n      <value name=\"BLUE\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">0</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"colour_blend\">\n      <value name=\"COLOUR1\">\n        <shadow type=\"colour_picker\">\n          <field name=\"COLOUR\">#ff0000</field>\n        </shadow>\n      </value>\n      <value name=\"COLOUR2\">\n        <shadow type=\"colour_picker\">\n          <field name=\"COLOUR\">#3333ff</field>\n        </shadow>\n      </value>\n      <value name=\"RATIO\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">0.5</field>\n        </shadow>\n      </value>\n    </block>\n  </category>\n  <sep></sep>\n  <category name=\"Variables\" colour=\"#A65C81\" custom=\"VARIABLE\"></category>\n  <category name=\"Functions\" colour=\"#9A5CA6\" custom=\"PROCEDURE\"></category>\n</xml>\n","output":"str","x":1598,"y":1362,"wires":[["aa29a8e7b1b43abe"]]},{"id":"aa29a8e7b1b43abe","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/buffer/toolbox.xml","format":"text","syntax":"mustache","template":"<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n  <category name=\"Buffer\" colour=\"#DF6C06\">\n    <block type=\"buffer_from_string\">\n      <value name=\"STRING_INPUT\">\n        <shadow type=\"text\"></shadow>\n      </value> \n    </block>\n    <block type=\"buffer_to_string\">\n      <value name=\"BUFFER_INPUT\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n    </block>\n    <block type=\"buffer_alloc\">\n      <value name=\"LENGTH\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">0</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"buffer_length\">\n      <value name=\"BUFFER_INPUT\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n    </block>\n    <block type=\"buffer_fill\">\n      <value name=\"BUFFER_INPUT\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n      <value name=\"FILL_VALUE\">\n        <shadow type=\"buffer_byte\">\n        </shadow>\n      </value>\n    </block>\n    <block type=\"buffer_check\">\n      <value name=\"INPUT\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n    </block>\n    <block type=\"buffer_copy\">\n      <value name=\"BUFFER_SOURCE\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n      <value name=\"BUFFER_DESTINATION\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n    </block>\n    <block type=\"buffer_concatenate\">\n      <value name=\"BUFFER_FIRST\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n      <value name=\"BUFFER_SECOND\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n    </block>\n    <block type=\"buffer_set_index\">\n      <value name=\"BUFFER\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n      <value name=\"INDEX\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n      <value name=\"VALUE\">\n        <shadow type=\"buffer_byte\">\n        </shadow>\n      </value>\n    </block>\n    <block type=\"buffer_get_index\">\n      <value name=\"BUFFER\">\n        <shadow type=\"buffer_empty\"></shadow>\n      </value>\n      <value name=\"INDEX\">\n        <shadow type=\"math_number\">\n          <field name=\"NUM\">1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type=\"buffer_byte\"></block>\n  </category>\n</xml>\n","output":"str","x":1598,"y":1412,"wires":[["2bb7412c4dcea346"]]},{"id":"2bb7412c4dcea346","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/datetime/toolbox.xml","format":"text","syntax":"mustache","template":"<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n  <category name=\"Date/time\" colour=\"#D6316B\">\n    <block type=\"datetime_convert_from_date\">\n      <value name=\"INPUT\">\n        <shadow type=\"datetime_timestamp\"></shadow>\n      </value>\n    </block>\n    <block type=\"datetime_timestamp\"></block>\n    <block type=\"datetime_input\">\n    </block>\n  </category>\n</xml>\n","output":"str","x":1598,"y":1462,"wires":[["bfbf79a819d9f90d"]]},{"id":"bfbf79a819d9f90d","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/extra/toolbox.xml","format":"text","syntax":"mustache","template":"<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n<!-- \n  <category name=\"Timers\" colour=\"#EB984E\">\n    <block type=\"setintervalwithcount\"></block>\n    <block type=\"setintervalwithcondition\"></block>\n  </category>\n-->\n  <category name=\"Logic\" colour=\"#5C81A6\">\n    <block type=\"switch_case\"></block>\n  </category>\n  <category name=\"Text\" colour=\"#5CA68D\">\n    <block type=\"text_special_character\"></block>\n  </category>\n  <category name=\"Miscellaneous\" colour=\"#88A705\">\n    <block type=\"misc_comment\">\n      <value name=\"TEXT\">\n        <shadow type=\"text\">\n        </shadow>\n      </value> \n    </block>\n    <block type=\"misc_javascript\">\n      <value name=\"STATEMENT\">\n        <shadow type=\"text\">\n        </shadow>\n      </value>\n    </block>\n    <block type=\"misc_jsmultiline\">\n      <value name= \"STATEMENT\">\n        <shadow type=\"field_multilinetext\">\n        </shadow>\n      </value>\n    </block>\n    <block type=\"misc_jsexpress\">\n      <value name=\"STATEMENT\">\n        <shadow type=\"text\">\n        </shadow>\n      </value>\n    </block>\n  </category>\n</xml>\n","output":"str","x":1598,"y":1512,"wires":[["7fcca2197bc91df3"]]},{"id":"7fcca2197bc91df3","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/json/toolbox.xml","format":"text","syntax":"mustache","template":"<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n  <category name=\"Objects\" colour=\"#F99EA3\">\n    <block type=\"object_create\"></block>\n    <block type=\"object_keys\">\n      <value name=\"object_input\">\n        <shadow type=\"node_msg\">\n        </shadow>\n      </value>\n    </block>\n    <block type=\"object_from_json\">\n      <value name=\"JSON\">\n        <shadow type=\"text\">\n        </shadow>\n      </value> \n    </block>\n    <block type=\"object_to_json\"></block>\n  </category>\n</xml>\n","output":"str","x":1598,"y":1562,"wires":[["e1a41c66b370aefd"]]},{"id":"e1a41c66b370aefd","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/nodered/toolbox.xml","format":"text","syntax":"mustache","template":"<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n  <category name=\"Node-RED\" colour=\"#BB8FCE\">\n    <block type=\"node_object_get\"> \n      <value name=\"field_name\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">payload</field>\n        </shadow>\n      </value>\n      <value name=\"object\">\n        <shadow type=\"node_msg\">\n        </shadow>\n      </value>\n    </block>\n    <block type=\"node_object_set\">\n      <value name=\"field_name\">\n        <shadow type=\"text\">\n          <field name=\"TEXT\">payload</field>\n        </shadow>\n      </value>    \n      <value name=\"object_field\">\n        <shadow type=\"node_msg\">\n        </shadow>\n      </value>\n      <value name=\"value_field\">\n        <shadow type=\"text\">\n        </shadow>\n      </value>       \n    </block>  \n    <block type=\"node_send\">\n      <value name=\"MESSAGE_INPUT\">\n        <shadow type=\"node_msg\"></shadow>\n      </value>       \n    </block>\n    <block type=\"node_msg\"></block>\n    <block type=\"node_flow_memory\"></block>\n    <block type=\"node_global_memory\"></block>\n    <block type=\"node_context_memory\"></block>\n    <block type=\"node_env\">\n      <value name=\"VARIABLE_NAME\">\n        <shadow type=\"text\">\n        </shadow>\n      </value> \n    </block>\n    <block type=\"node_return_message\">\n      <value name=\"MESSAGE_INPUT\">\n        <shadow type=\"node_msg\"></shadow>\n      </value>\n    </block>\n    <block type=\"node_return\"></block> \n    <block type=\"node_status\">\n      <field name=\"COLOUR\">#0000FF</field>\n      <value name=\"TEXT_INPUT\">\n        <shadow type=\"text\">\n        </shadow>\n      </value> \n    </block>   \n    <block type=\"node_remove_status\"></block>    \n    <block type=\"node_log\">\n      <value name=\"LOG_MESSAGE_INPUT\">\n        <shadow type=\"text\"></shadow>\n      </value> \n    </block>\n    <block type=\"node_clone\">\n      <value name=\"OBJECT_INPUT\">\n        <shadow type=\"node_msg\"></shadow>\n      </value> \n    </block>\n    <block type=\"node_properties\"></block>\n    <block type=\"node_done\"></block>\n    <block type=\"node_close\"></block>\n  </category>\n</xml>\n","output":"str","x":1598,"y":1612,"wires":[["48e0118eba5591ee"]]},{"id":"48e0118eba5591ee","type":"PkgFile","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"toolbox.xml","filename":"lib/timer/toolbox.xml","format":"text","syntax":"mustache","template":"<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\n  <category name=\"Timers\" colour=\"#DEDE1F\">\n    <block type=\"set_timeout\">\n    </block>\n    <block type=\"clear_timeout\">\n    </block>\n    <block type=\"set_interval\">\n    </block>\n    <block type=\"clear_interval\">\n    </block>\n  </category>\n</xml>\n","output":"str","x":1598,"y":1662,"wires":[[]]},{"id":"d0922aad884c1299","type":"inject","z":"16310ded01410ec0","g":"dc6285a914d85ac9","name":"inject package details","props":[{"p":"packagename","v":"node-red-contrib-blockly","vt":"str"},{"p":"packageversion","v":"2.3.0","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":874,"y":1013,"wires":[[]]}]