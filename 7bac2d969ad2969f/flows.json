[{"id":"7bac2d969ad2969f","type":"tab","label":"Hello World - part 1: Input & Output","disabled":false,"info":"### Aim\n\nThe Node-RED *hello world* flow demonstrating the inputs, outputs and data.\n\n### Explanation\n\nAll flows in Node-RED require an input and generate some output. These two nodes are the simplest of both types: <a class=\"ahl-node-only\" data-ids=\"2753c156ed96d617\">inject node</a> is the input and the <a class=\"ahl-node-only\" data-ids=\"501a10d8cc90b363\">debug node</a> displays the output.\n\nTogether these two nodes form a *flow*. They are also grouped together by the *group* labelled <a class=\"ahl-group-only\" data-ids=\"14f2336960b44447\">hello world</a>. The *wire* between the <a class=\"ahl-link-node\" data-ids=\"2753c156ed96d617,501a10d8cc90b363\">two nodes</a> shows the flow of the data: from the inject node to the debug node. Wires have an implicit direction with the right hand side of a node being the *exit* port for data and the left hand side of an node being the *entry* port for data. So the data here *exits* the inject node, travels along the wire to *enter* the debug node.\n\nFor the data to start travelling, the inject node has a button (not shown here but in Node-RED) which when pressed will generate input data, in this case, the string `hello world`. The data object (by convention called *msg* in Node-RED) exits the inject node and travels along the wire. The only connection this wire has is to the debug node. The data enters the debug node which will simply display that string in the *debug panel* within Node-RED. \n\nBut: this won't happen until the flow has been *deployed*. Deploying a flow means transporting it to the server which executes flows. Node-RED is a client-server architecture with the browser being the client and the server being wherever Node-RED was installed. All changes to flows must first be deployed to the server to be executed there.\n\nWhat this flow does not contain is any computational functionality, i.e., nothing is actually computed. All that is being done is that data is being generated, transported to the ouptut node and finally the output node displays the output (output node being the <a class=\"ahl-node-only\" data-ids=\"501a10d8cc90b363\">debug node</a>). [Part 2](https://flowhub.org/f/2817a602bd1ba715) demonstrates the use of functionality to alter the data flowing through the nodes.\n\n### Related Flows\n\n- [Hello World, part 2 - Functionality](https://flowhub.org/f/2817a602bd1ba715)\n- [Node-RED Introduction](https://flowhub.org/f/7f8714fa6e835a2a) which is a step-by-step guide for creating flows.","env":[]},{"id":"14f2336960b44447","type":"group","z":"7bac2d969ad2969f","name":"hello world","style":{"label":true},"nodes":["2753c156ed96d617","501a10d8cc90b363"],"x":383,"y":346,"w":436,"h":82},{"id":"2753c156ed96d617","type":"inject","z":"7bac2d969ad2969f","g":"14f2336960b44447","name":"inject","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"hello world","payloadType":"str","x":479,"y":387,"wires":[["501a10d8cc90b363"]]},{"id":"501a10d8cc90b363","type":"debug","z":"7bac2d969ad2969f","g":"14f2336960b44447","name":"output","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":723,"y":387,"wires":[]}]