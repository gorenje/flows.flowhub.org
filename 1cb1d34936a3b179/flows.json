[{"id":"1cb1d34936a3b179","type":"tab","label":"[NodeDev] UglifyJS","disabled":false,"info":"::: aim\n\nCreate a node that can uglify Javascript code.\n\n:::\n\n### Description\n\nSimple wrapper node around the [uglify-js](https://www.npmjs.com/package/uglify-js) NPMjs package.\n\n### Artifacts\n\n- [Flow maintaining this code](https://flowhub.org/f/1cb1d34936a3b179)\n- [GitHub repo](https://github.com/gorenje/node-red-contrib-uglifyjs)\n- [NPMjs package](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-uglifyjs)\n- [Node-RED package page](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-uglifyjs)\n\n- [Usage Example](https://flowhub.org/f/ca78ac1011bd3194)","env":[]},{"id":"50fe6ff50cac817b","type":"group","z":"1cb1d34936a3b179","name":"Step 1: Install development flow","style":{"label":true},"nodes":["a4e8c8cdd8d0a714"],"x":245,"y":261,"w":472,"h":82},{"id":"f872c726b1867e5d","type":"group","z":"1cb1d34936a3b179","name":"Template for node","style":{"label":true},"nodes":["93e9e46c7e7c84af"],"x":245,"y":537,"w":192,"h":82},{"id":"34d29164ba7e6d6c","type":"group","z":"1cb1d34936a3b179","name":"Step 2: install locally","style":{"label":true},"nodes":["281088ded4241d61"],"x":245,"y":399,"w":212,"h":82},{"id":"fbb48271c0c93b91","type":"group","z":"1cb1d34936a3b179","name":"Example flows","style":{"label":true},"nodes":["47e7dd39d0d73556"],"x":245,"y":675,"w":352,"h":82},{"id":"281088ded4241d61","type":"NodeDevOps","z":"1cb1d34936a3b179","g":"34d29164ba7e6d6c","name":"","pname":"@gregoriusrippenstein/node-red-contrib-uglifyjs","pversion":"0.0.5","pauthorname":"Gerrit Riessen","pauthoremail":"gerrit@openmindmap.org","pdescription":"Node-RED wrapper node around the uglify-js package.","noderedinstall":true,"randompackagename":false,"gitcommit":false,"gitcheckforchange":false,"githubowner":"gorenje","githubrepo":"node-red-contrib-uglifyjs","githubbranch":"main","githubauthor":"Gerrit Riessen","githubauthoremail":"gerrit@openmindmap.org","githubmessage":"version bump to 0.0.5","npmpublish":false,"npmunpublish":false,"npmotp":"111999","x":361,"y":440,"wires":[["1c044fc71c55da30"]]},{"id":"93e9e46c7e7c84af","type":"NodeFactory","z":"1cb1d34936a3b179","g":"f872c726b1867e5d","name":"","nodename":"UglifyJS","color":"#D7D7A0","hasbutton":false,"hasinput":true,"outputcount":1,"category":"parser","summary":"Uglify Javascript code.","description":"Uglify Javascript code. Based on the <a href=\"https://www.npmjs.com/package/uglify-js\">uglify-js<a> package.","icon":"font-awesome/fa-compress","frt2bakcomm":false,"bak2frtcomm":false,"createmanifest":true,"x":341,"y":578,"wires":[[]]},{"id":"bbd209881f0559b2","type":"PkgFile","z":"1cb1d34936a3b179","name":"UglifyJS.js","filename":"nodes/uglifyjs.js","format":"javascript","syntax":"mustache","template":"module.exports = function(RED) {\n  function UglifyJSFunctionality(config) {\n    RED.nodes.createNode(this,config);\n\n    var node = this;\n    var cfg = config;\n\n    var UglifyJS = require('uglify-js')\n\n    node.on('close', function () {\n      node.status({});\n    });\n\n    node.on(\"input\", function (msg, send, done) {\n      RED.util.evaluateNodeProperty(cfg.property || 'payload', cfg.propertyType || 'msg', node, msg, (err,content) => {\n        if ( err ) {\n          msg.error = err\n          done(\"Failed finding property\", msg)\n          return;\n        }\n\n        RED.util.evaluateNodeProperty(cfg.config, cfg.configType, node, msg, (err, uggCfg) => {\n          if (err) {\n            msg.error = err\n            done(\"Failed finding configuration\", msg)\n            return;\n          }\n\n          var result = UglifyJS.minify(content, uggCfg)\n\n          if (result.error) {\n            msg.error = result.error\n            done(\"ugly error occurred\", msg)\n          } else {\n            // if result object consists of a single key called 'code' then return its \n            // value as payload, else return the entire result object.\n            if (Object.keys(result).length == 1 && result.code) {\n              result = result.code\n            }\n\n            if (cfg.propertyType === 'flow' || cfg.propertyType === 'global') {\n              node.context()[cfg.propertyType].set(cfg.property, result, () => {\n                send(msg);\n                done();\n              })\n              return;\n            } else {\n              RED.util.setMessageProperty(msg, cfg.property || 'payload', result, true);\n            }\n\n            send(msg);\n            done();\n          }\n        })\n      })\n    })\n  }\n  \n  RED.nodes.registerType(\"UglifyJS\", UglifyJSFunctionality);\n\n}\n","output":"str","x":874,"y":668.875,"wires":[["b0ceea991fa405cb"]]},{"id":"1c044fc71c55da30","type":"PkgFile","z":"1cb1d34936a3b179","name":"LICENSE","filename":"LICENSE","format":"text","syntax":"mustache","template":"## LICENSE\n\nAdapted from JSON.org, http://www.json.org/license.html\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe Software shall be used for Good, not Evil.\n\nRemember the curse of the evil-doer upon whose blood the devil does drink and upon whose flesh the devil does feast. For eternity will the evil-doer bear this Sisyphean burden, only to be relieved of their suffering upon the apocalyptic end of it all including the foundations of the internet, computers, technology and mice. Only after the last AI enters the blue-screen-of-death modus, only then will the evil-doer be freed of their rightful and justified punishment for doing evil.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nTHE CURSE IS PROVIDED \"AS IS\" OR \"WORSE\", NO SOFTENING OF ANY KIND IS HEREBY EXPRESSED, IMPLIED OR OFFERED. MAY ALL EVIL-DOERS SUFFER IN ETERNITY.\n","output":"str","x":864,"y":523,"wires":[["d2c36d5bc14d33d5"]]},{"id":"d2c36d5bc14d33d5","type":"PkgFile","z":"1cb1d34936a3b179","name":"README.md","filename":"README.md","format":"markdown","syntax":"mustache","template":"# Node-RED node wrapping Uglify-JS\n\nSimple node that using the <a href=\"https://www.npmjs.com/package/uglify-js\">uglify-js</a> package to minify Javascript code.\n\nThe node calls `minify` passing the options defined in the nodes configuration.\n\nAll this nodes does is:\n\n```\nvar UglifyJS = require(\"uglify-js\");\n\nconst uggCfg = RED.util.evaluateNodeProperty(cfg.config, cfg.configType, node, msg)\n\nmsg.payload = UglifyJS.minify(msg.payload, uggCfg);\n\nsend(msg)\n```\n\nConfiguration provided in the nodes property panel is passed directly to the Uglify-JS `minify` method.\n\nOne could say this is a wrapper node around the <a href=\"https://www.npmjs.com/package/uglify-js\">uglify-js</a> package and one would be quite correct.\n\nThe [usage example](https://flowhub.org/f/ca78ac1011bd3194) is also included in the package, Node-RED --> Import --> Examples:\n\n![img](https://cdn.openmindmap.org/content/1697273742712_Screen_Shot_2023-10-14_at_10.55.06.png)\n\n### Artifacts\n\n- [Flow maintaining this code](https://flowhub.org/f/1cb1d34936a3b179)\n- [GitHub repo](https://github.com/gorenje/node-red-contrib-uglifyjs)\n- [NPMjs package](https://www.npmjs.com/package/@gregoriusrippenstein/node-red-contrib-uglifyjs)\n- [Node-RED package page](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-uglifyjs)\n\n","output":"str","x":874,"y":571.625,"wires":[["c8823caec090b303"]]},{"id":"c8823caec090b303","type":"PkgFile","z":"1cb1d34936a3b179","name":"package.json","filename":"package.json","format":"json","syntax":"mustache","template":"{\n  \"name\" : \"{{{ pname }}}\",\n  \"version\": \"{{ pversion }}\",\n  \"dependencies\": {\n    \"uglify-js\": \"3.17.4\"\n  },\n\n  \"keywords\": [\n    \"node-red\", \"uglifyjs\", \"uglify-js\"\n  ],\n\n  \"homepage\": \"https://github.com/{{ githubowner }}/{{ githubrepo }}#readme\",\n  \"license\": \"Don't do evil.\",\n  \"author\": \"Gerrit Riessen <gerrit@openmindmap.org>\",\n  \"engines\": {\n    \"node\": \">=14\"\n  },\n\n  \"node-red\" : {\n    \"version\": \">=3.0.0\",\n    \"nodes\": {\n       \"uglifyjs\": \"nodes/uglifyjs.js\"\n    }\n  },\n\n  \"description\": \"{{{ pdescription }}}\",\n  \"repository\": {\n    \"type\": \"github\",\n    \"url\": \"git+https://github.com/{{ githubowner }}/{{ githubrepo }}.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/{{ githubowner }}/{{ githubrepo }}\"\n  }\n}\n","output":"str","x":874,"y":620.25,"wires":[["bbd209881f0559b2"]]},{"id":"d1cad4e40e06654b","type":"PkgFile","z":"1cb1d34936a3b179","name":"UglifyJS.html","filename":"nodes/uglifyjs.html","format":"html","syntax":"mustache","template":"<script type=\"text/javascript\">\n(function(){\n    \n  RED.nodes.registerType('UglifyJS',{\n    color: '#D7D7A0',\n    icon: \"font-awesome/fa-compress\",\n    category: 'parser',\n    defaults: {\n      name: {\n        value:\"\",\n      },\n      config: {\n        value: '{{{ defaultConfig }}}'\n      },\n      configType: {\n        value: \"json\"\n      },\n      property: { value:\"payload\" },\n      propertyType: { value:\"msg\" },\n    },\n\n    inputs: 1,\n    outputs: 1,\n\n    label: function() {\n      return (this.name || this._def.paletteLabel);\n    },\n\n    labelStyle: function() {\n      return this.name?\"node_label_italic\":\"\";\n    },\n\n    onpaletteadd: function() {\n    },\n\n    oneditprepare: function() {\n      var that = this;\n      \n      $(\"#node-input-config\").typedInput({\n          types:[\"json\", \"jsonata\"],\n          typeField: \"#node-input-configType\"\n      });\n\n      $(\"#node-input-property\").typedInput({\n          default:'msg',\n          types:['msg', 'flow', 'global'],\n          typeField: \"#node-input-propertyType\"\n      });\n\n      $(\"#node-input-property\").typedInput('value', that.property || that._def.property || 'payload');\n      \n      if ( that.propertyType ) {\n          $(\"#node-input-property\").typedInput('type', that.propertyType);\n      }\n    },\n\n    oneditcancel: function() {\n    },\n\n    oneditsave: function() {\n      this.propertyType = $(\"#node-input-property\").typedInput('type');\n    },\n\n    onpaletteremove: function() {\n    },\n\n\n\n  });\n})();\n</script>\n\n<script type=\"text/html\" data-template-name=\"UglifyJS\">\n    <div class=\"form-row\">\n        <label for=\"node-input-name\"><i class=\"fa fa-tag\"></i> Name</label>\n        <input type=\"text\" id=\"node-input-name\" placeholder=\"Name\"/>\n    </div>\n\n    <div class=\"form-row\">\n      All possible configuration options can be viewed at<br> \n      the <a target=\"_blank\" style=\"color: blue;\" href=\"https://www.npmjs.com/package/uglify-js#minify-options\">uglify-js NPMjs page<i class=\"fa fa-external-link\"></i></a>.\n    </div>\n\n  <div class=\"form-row\">\n    <label for=\"node-input-config\">\n        <i class=\"fa fa-tag\"></i>\n        Config\n      </label>\n    <input type=\"text\" id=\"node-input-config\">\n    <input type=\"hidden\" id=\"node-input-configType\">\n  </div>\n\n  <div class=\"form-row\">\n    Apply to which property? This property will used as input <br> \n    and it will be replaced on the message my the uglified version <br>\n    of the original content.\n  </div>\n  \n  <div class=\"form-row\">\n    <label for=\"node-input-property\">Property</label>\n    <input type=\"text\" id=\"node-input-property\"/>\n    <input type=\"hidden\" id=\"node-input-propertyType\"/>\n  </div>\n</script>\n\n<script type=\"text/html\" data-help-name=\"UglifyJS\">\n  <p>Uglify Javascript code.</p>\n  \n  <p>Uglify Javascript code. Based on the <a href=\"https://www.npmjs.com/package/uglify-js\">uglify-js</a> package.</p>\n\n  <p>\n    Possible configuration options are described <a href=\"https://www.npmjs.com/package/uglify-js#minify-options\">here</a>.\n  </p>\n  <p>\n    <code>msg.payload</code> is passed as the first argument to the <a href=\"https://www.npmjs.com/package/uglify-js#api-reference\">minify</a> method, so it can be a string or object.\n  </p>\n  <p>\n    Usage example is provided: <img src=\"https://cdn.openmindmap.org/content/1697273742712_Screen_Shot_2023-10-14_at_10.55.06.png\"/>\n  </p>\n</script>\n","output":"str","x":874,"y":837,"wires":[["43dd3780649ef0a1"]]},{"id":"b0ceea991fa405cb","type":"template","z":"1cb1d34936a3b179","name":"defaultConfig","field":"defaultConfig","fieldType":"msg","format":"json","syntax":"plain","template":"{\n    \"parse\": {\n    },\n    \"compress\": {\n    },\n    \"mangle\": {\n        \"reserved\": [\n            \"$\",\n            \"export\",\n            \"require\"\n        ]\n    },\n    \"output\": null,\n    \"sourceMap\": null,\n    \"nameCache\": null,\n    \"toplevel\": false,\n    \"warnings\": false\n}","output":"json","x":1156,"y":668.875,"wires":[["02bcba36314d439c"]]},{"id":"02bcba36314d439c","type":"json","z":"1cb1d34936a3b179","name":"","property":"defaultConfig","action":"str","pretty":false,"x":1171,"y":759,"wires":[["d1cad4e40e06654b"]]},{"id":"43dd3780649ef0a1","type":"PkgFile","z":"1cb1d34936a3b179","name":"example of using node","filename":"examples/uglify-example.json","format":"json","syntax":"plain","template":"[\n    {\n        \"id\": \"9787f001caee49e9\",\n        \"type\": \"template\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"functioning js code\",\n        \"field\": \"payload\",\n        \"fieldType\": \"msg\",\n        \"format\": \"javascript\",\n        \"syntax\": \"plain\",\n        \"template\": \"(function() {\\n\\n    function constructMermaid(nodes, redRef=undefined) {\\n        var msg = {\\n            payload: nodes\\n        }\\n\\n        var nodes = msg.payload.filter((n) => {\\n            return n.type != \\\"tab\\\" && n.type != \\\"group\\\"\\n        })\\n\\n        var id2node = {};\\n        for (var idx = 0; idx < nodes.length; idx++) {\\n            var nd = nodes[idx];\\n            id2node[nd.id] = nd;\\n        }\\n\\n        /* redRef is a reference to RED object, if this is available, it's set, if not we \\n            have to improvis. */\\n        var RED = redRef;\\n        if (!redRef) {\\n\\n            RED = {\\n                nodes: {\\n                    node: (nId) => { return id2node[nId] },\\n                    subflow: (nId) => { return id2node[nId] }\\n                },\\n            }\\n        }\\n\\n        var escapeForMermaid = (str) => {\\n            return str.replaceAll(\\n                \\\"&\\\", \\\"&amp;\\\"\\n            ).replaceAll(\\n                \\\"#\\\", \\\"#35;\\\"\\n            ).replaceAll(\\n                \\\"[\\\", \\\"#91;\\\"\\n            ).replaceAll(\\n                \\\"]\\\", \\\"#93;\\\"\\n            ).replaceAll(\\n                \\\"(\\\", \\\"#40;\\\"\\n            ).replaceAll(\\n                \\\")\\\", \\\"#41;\\\"\\n            ).replaceAll(\\n                \\\"|\\\", \\\"#124;\\\"\\n            ).replaceAll(\\n                \\\">\\\", \\\"&gt;\\\"\\n            ).replaceAll(\\n                \\\"<\\\", \\\"&lt;\\\"\\n            ).replaceAll(\\n                \\\"{\\\", \\\"#123;\\\"\\n            ).replaceAll(\\n                \\\"}\\\", \\\"#125;\\\"\\n            ).replaceAll(\\n                \\\"/\\\", \\\"#47;\\\"\\n            )\\n        };\\n\\n        var node2label = (nd, nme = undefined) => {\\n            var labl = nd.name || nd.type;\\n\\n            if (nme) {\\n                nme = \\\"|\\\" + escapeForMermaid(nme) + \\\"| \\\"\\n            } else { nme = \\\"\\\" }\\n\\n            labl = escapeForMermaid(labl);\\n\\n            switch (nd.type) {\\n                case \\\"switch\\\":\\n                case \\\"join\\\":\\n                case \\\"split\\\":\\n                    return nme + nd.id + \\\"{\\\\\\\"\\\" + labl + \\\"\\\\\\\"}\\\"\\n\\n                case \\\"link call\\\":\\n                case \\\"link out\\\":\\n                    if (nd.mode && nd.mode == \\\"return\\\") {\\n                        return nme + nd.id + \\\"[\\\\\\\\Link Return/]\\\"\\n                    }\\n\\n                    if (nd.name && !nd.name.match(/^link out/)) {\\n                        return nme + nd.id + \\\"\\\\{\\\\{\\\\\\\"\\\" + labl + \\\"\\\\\\\"\\\\}\\\\}\\\"\\n                    }\\n\\n                    if (nd.linkType == \\\"dynamic\\\") {\\n                        labl = \\\"\\\\\\\\Dynamic Target/\\\"\\n                        return nme + nd.id + \\\"\\\\{\\\\{\\\\\\\"\\\" + labl + \\\"\\\\\\\"\\\\}\\\\}\\\"\\n                    }\\n\\n                    var targetNode = (nd.links && nd.links.length > 0 && (id2node[nd.links[0]] || RED.nodes.node(nd.links[0])));\\n                    labl = escapeForMermaid((targetNode && targetNode.name) || nd.type)\\n                    return nme + nd.id + \\\"\\\\{\\\\{\\\\\\\"\\\" + labl + \\\"\\\\\\\"\\\\}\\\\}\\\"\\n\\n                case \\\"link in\\\":\\n                    labl = escapeForMermaid(nd.name || (nd.links && nd.links.length > 0 && id2node[nd.links[0]] && id2node[nd.links[0]].name) || nd.type)\\n                    return nme + nd.id + \\\"\\\\{\\\\{\\\\\\\"\\\" + labl + \\\"\\\\\\\"\\\\}\\\\}\\\"\\n\\n                case \\\"junction\\\":\\n                    return nme + nd.id + \\\"((\\\\\\\"\\\" + labl + \\\"\\\\\\\"))\\\"\\n\\n                case \\\"debug\\\":\\n                    return nme + nd.id + \\\"(\\\\\\\"\\\" + labl + \\\"\\\\\\\")\\\"\\n\\n                default:\\n                    if (nd.type.startsWith(\\\"subflow:\\\")) {\\n                        var targetNode = RED.nodes.subflow(nd.type.replace(/subflow:/, ''))\\n                        labl = escapeForMermaid((targetNode && targetNode.name) || nd.type)\\n                    }\\n\\n                    return nme + nd.id + \\\"[\\\\\\\"\\\" + labl + \\\"\\\\\\\"]\\\"\\n            }\\n        }\\n\\n        /* \\n          we attach the mermaid array on the msg object because if an exception\\n          happens, we can check how far this code got. That is by comparing the\\n          contents of this array with the payload, we know which node caused\\n          the exception.\\n        */\\n        msg.mermaid = [\\n            \\\"%% change this to LR Node-RED like UML\\\",\\n            \\\"graph \\\" + $('#node-input-direction').val()\\n        ];\\n\\n        for (var idx = 0; idx < nodes.length; idx++) {\\n            var nde = nodes[idx];\\n\\n            if (nde.links && nde.links.length > 0 && nde.type == \\\"link out\\\") {\\n                for (var ldx = 0; ldx < nde.links.length; ldx++) {\\n                    /* link-out wire: only add a dashed link wire iff the node is included in this graph */\\n                    if (id2node[nde.links[ldx]]) {\\n                        msg.mermaid.push(\\n                            node2label(nde) + \\\" -.-> \\\" + nde.links[ldx]\\n                        )\\n                    }\\n                }\\n            }\\n\\n            if (nde.wires && nde.wires.length > 0) {\\n                if (nde.type == \\\"switch\\\") {\\n                    for (var odx = 0; odx < nde.wires.length; odx++) {\\n                        for (var wdx = 0; wdx < nde.wires[odx].length; wdx++) {\\n                            msg.mermaid.push(\\n                                node2label(nde) + \\\" --> \\\" + node2label(id2node[nde.wires[odx][wdx]], nde.rules[odx] && (nde.rules[odx].v || nde.rules[odx].t))\\n                            )\\n                        }\\n                    }\\n                } else {\\n                    var outputLabels = nde.outputLabels;\\n                    if (nde.type.startsWith(\\\"subflow:\\\")) {\\n                        var targetNode = RED.nodes.subflow(nde.type.replace(/subflow:/, ''))\\n                        outputLabels = (targetNode && targetNode.outputLabels) || outputLabels\\n                    }\\n\\n                    for (var odx = 0; odx < nde.wires.length; odx++) {\\n                        for (var wdx = 0; wdx < nde.wires[odx].length; wdx++) {\\n                            msg.mermaid.push(\\n                                node2label(nde) + \\\" --> \\\" + node2label(id2node[nde.wires[odx][wdx]], (outputLabels && outputLabels[odx]) || undefined)\\n                            )\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        return msg.mermaid.join(\\\"\\\\n\\\");\\n    }\\n\\n    window.FlowToMermaid = {\\n        constructMermaid: constructMermaid\\n    }\\n})();\",\n        \"output\": \"str\",\n        \"x\": 827,\n        \"y\": 646,\n        \"wires\": [\n            [\n                \"66021e2c9814e6d4\",\n                \"027afa271b9a2d3e\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"2a74a0f9675164c3\",\n        \"type\": \"inject\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"Trigger\",\n        \"props\": [],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": false,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"x\": 342,\n        \"y\": 700,\n        \"wires\": [\n            [\n                \"9787f001caee49e9\",\n                \"15b1bd3fd8c9c3f4\",\n                \"9c7d85b4139b0ff6\",\n                \"4c3a29d80906c57f\",\n                \"d15845b3f4152577\",\n                \"647fd1c5620671ba\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"3228cf712f74dfc6\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"minified code (msg cnt: 1)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"payload\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1715,\n        \"y\": 700,\n        \"wires\": []\n    },\n    {\n        \"id\": \"15b1bd3fd8c9c3f4\",\n        \"type\": \"template\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"incorrect js code\",\n        \"field\": \"payload\",\n        \"fieldType\": \"msg\",\n        \"format\": \"handlebars\",\n        \"syntax\": \"mustache\",\n        \"template\": \"This is the payload: {{payload}} !\",\n        \"output\": \"str\",\n        \"x\": 827,\n        \"y\": 381,\n        \"wires\": [\n            [\n                \"66021e2c9814e6d4\",\n                \"027afa271b9a2d3e\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"7b34a5800e8f40f0\",\n        \"type\": \"catch\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"scope\": [\n            \"66021e2c9814e6d4\"\n        ],\n        \"uncaught\": false,\n        \"x\": 1246,\n        \"y\": 558,\n        \"wires\": [\n            [\n                \"630dc99513c89d9b\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"630dc99513c89d9b\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"incorrect js code (msg cnt: 1)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1725,\n        \"y\": 558,\n        \"wires\": []\n    },\n    {\n        \"id\": \"66021e2c9814e6d4\",\n        \"type\": \"UglifyJS\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"config\": \"{\\\"parse\\\":{},\\\"compress\\\":{},\\\"mangle\\\":{\\\"reserved\\\":[\\\"$\\\",\\\"export\\\",\\\"require\\\"]},\\\"output\\\":null,\\\"sourceMap\\\":null,\\\"nameCache\\\":null,\\\"toplevel\\\":false,\\\"warnings\\\":false}\",\n        \"configType\": \"json\",\n        \"property\": \"payload\",\n        \"propertyType\": \"msg\",\n        \"x\": 1240,\n        \"y\": 597,\n        \"wires\": [\n            [\n                \"3228cf712f74dfc6\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"027afa271b9a2d3e\",\n        \"type\": \"UglifyJS\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"incorrect config\",\n        \"config\": \"failure\",\n        \"configType\": \"json\",\n        \"x\": 1248,\n        \"y\": 414,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"31488e73bfeeb096\",\n        \"type\": \"catch\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"scope\": [\n            \"027afa271b9a2d3e\"\n        ],\n        \"uncaught\": false,\n        \"x\": 1278,\n        \"y\": 391,\n        \"wires\": [\n            [\n                \"e9405b347fcf3f13\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"e9405b347fcf3f13\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"incorrect config code (msg cnt: 2)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1745,\n        \"y\": 391,\n        \"wires\": []\n    },\n    {\n        \"id\": \"9c7d85b4139b0ff6\",\n        \"type\": \"function\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"msg.payload as object\",\n        \"func\": \"/* taken from the package examples */\\nmsg.payload = {\\n    \\\"file1.js\\\": \\\"function add(first, second) { return first + second; }\\\",\\n    \\\"file2.js\\\": \\\"console.log(add(1 + 2, 3 + 4));\\\"\\n}\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"libs\": [],\n        \"x\": 837,\n        \"y\": 786,\n        \"wires\": [\n            [\n                \"79ecb629af290007\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"79ecb629af290007\",\n        \"type\": \"UglifyJS\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"config\": \"{\\\"parse\\\":{},\\\"compress\\\":{},\\\"mangle\\\":{\\\"reserved\\\":[\\\"$\\\",\\\"export\\\",\\\"require\\\"]},\\\"output\\\":null,\\\"sourceMap\\\":null,\\\"nameCache\\\":null,\\\"toplevel\\\":false,\\\"warnings\\\":false}\",\n        \"configType\": \"json\",\n        \"property\": \"payload\",\n        \"propertyType\": \"msg\",\n        \"x\": 1261,\n        \"y\": 786,\n        \"wires\": [\n            [\n                \"cf3d8e45760587ed\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"cf3d8e45760587ed\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"multiple inputs (msg cnt: 1)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"payload\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1725,\n        \"y\": 786,\n        \"wires\": []\n    },\n    {\n        \"id\": \"4c3a29d80906c57f\",\n        \"type\": \"function\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"msg.payload as object\",\n        \"func\": \"/* taken from the package examples */\\nmsg.payload = {\\n    \\\"file1.js\\\": \\\"function add(first, second) { return first + second; }\\\",\\n    \\\"file2.js\\\": \\\"console.log(add(1 + 2, 3 + 4));\\\"\\n}\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"libs\": [],\n        \"x\": 837,\n        \"y\": 905,\n        \"wires\": [\n            [\n                \"2a90112c6429965f\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"2a90112c6429965f\",\n        \"type\": \"UglifyJS\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"toplevel argument\",\n        \"config\": \"{\\\"parse\\\":{},\\\"compress\\\":{},\\\"mangle\\\":{\\\"reserved\\\":[\\\"$\\\",\\\"export\\\",\\\"require\\\"]},\\\"output\\\":null,\\\"sourceMap\\\":null,\\\"nameCache\\\":null,\\\"toplevel\\\":true,\\\"warnings\\\":false}\",\n        \"configType\": \"json\",\n        \"property\": \"payload\",\n        \"propertyType\": \"msg\",\n        \"x\": 1293,\n        \"y\": 905,\n        \"wires\": [\n            [\n                \"411b0c47cddffbf1\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"411b0c47cddffbf1\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"toplevel argument true (msg cnt: 1)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"payload\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1745,\n        \"y\": 905,\n        \"wires\": []\n    },\n    {\n        \"id\": \"d15845b3f4152577\",\n        \"type\": \"function\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"msg.payload as object\",\n        \"func\": \"/* taken from the package examples */\\nmsg.payload = {\\n    \\\"file1.js\\\": \\\"var a = function() {};\\\"\\n}\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"libs\": [],\n        \"x\": 837,\n        \"y\": 1001,\n        \"wires\": [\n            [\n                \"2533a3cb768d500a\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"2533a3cb768d500a\",\n        \"type\": \"UglifyJS\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"source map argument\",\n        \"config\": \"{\\\"parse\\\":{},\\\"compress\\\":{},\\\"mangle\\\":{\\\"reserved\\\":[\\\"$\\\",\\\"export\\\",\\\"require\\\"]},\\\"output\\\":null,\\\"sourceMap\\\":{\\\"filename\\\":\\\"out.js\\\",\\\"url\\\":\\\"out.js.map\\\"},\\\"nameCache\\\":null,\\\"toplevel\\\":false,\\\"warnings\\\":false}\",\n        \"configType\": \"json\",\n        \"x\": 1287,\n        \"y\": 1001,\n        \"wires\": [\n            [\n                \"f2d0f5576e5fbade\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"f2d0f5576e5fbade\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"saucemap argument true (msg cnt: 1)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"payload\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1755,\n        \"y\": 1001,\n        \"wires\": []\n    },\n    {\n        \"id\": \"0615c4238c700bb0\",\n        \"type\": \"catch\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"scope\": null,\n        \"uncaught\": true,\n        \"x\": 612,\n        \"y\": 153,\n        \"wires\": [\n            [\n                \"d13e2e2f0763f7da\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"d13e2e2f0763f7da\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"THERE SHOULD BE NO UNCAUGHT ERRORS (msg cnt: 0)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"true\",\n        \"targetType\": \"full\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1021,\n        \"y\": 202,\n        \"wires\": []\n    },\n    {\n        \"id\": \"647fd1c5620671ba\",\n        \"type\": \"change\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"rules\": [\n            {\n                \"t\": \"set\",\n                \"p\": \"jscode\",\n                \"pt\": \"flow\",\n                \"to\": \"function add(first, second) { return first + second; }; console.log(add(1 + 2, 3 + 4));\",\n                \"tot\": \"str\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 815,\n        \"y\": 1114,\n        \"wires\": [\n            [\n                \"903e8ad295dd7586\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"903e8ad295dd7586\",\n        \"type\": \"UglifyJS\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"using flow context as source\",\n        \"config\": \"{\\\"parse\\\":{},\\\"compress\\\":{},\\\"mangle\\\":{\\\"reserved\\\":[\\\"$\\\",\\\"export\\\",\\\"require\\\"]},\\\"output\\\":null,\\\"sourceMap\\\":null,\\\"nameCache\\\":null,\\\"toplevel\\\":false,\\\"warnings\\\":false}\",\n        \"configType\": \"json\",\n        \"property\": \"jscode\",\n        \"propertyType\": \"flow\",\n        \"x\": 1143,\n        \"y\": 1114,\n        \"wires\": [\n            [\n                \"6c2f6c5d73a6a314\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"47225a30072f43a1\",\n        \"type\": \"debug\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"flow value (msg cnt: 1)\",\n        \"active\": true,\n        \"tosidebar\": true,\n        \"console\": false,\n        \"tostatus\": true,\n        \"complete\": \"payload\",\n        \"targetType\": \"msg\",\n        \"statusVal\": \"\",\n        \"statusType\": \"counter\",\n        \"x\": 1705,\n        \"y\": 1114,\n        \"wires\": []\n    },\n    {\n        \"id\": \"6c2f6c5d73a6a314\",\n        \"type\": \"change\",\n        \"z\": \"ca78ac1011bd3194\",\n        \"name\": \"\",\n        \"rules\": [\n            {\n                \"t\": \"set\",\n                \"p\": \"payload\",\n                \"pt\": \"msg\",\n                \"to\": \"jscode\",\n                \"tot\": \"flow\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 1400,\n        \"y\": 1114,\n        \"wires\": [\n            [\n                \"47225a30072f43a1\"\n            ]\n        ]\n    }\n]","output":"str","x":904,"y":889,"wires":[["bc5a0122c979641b"]]},{"id":"a4e8c8cdd8d0a714","type":"FlowHubPull","z":"1cb1d34936a3b179","g":"50fe6ff50cac817b","name":"","notab":false,"flowid":"d0506e991d512ace","flowname":"[Introspection] Develop Node-RED nodes in Node-RED","flowrevision":"","x":481,"y":302,"wires":[[]]},{"id":"bc5a0122c979641b","type":"link out","z":"1cb1d34936a3b179","name":"link out 117","mode":"link","links":["963dfb765b0d9849"],"x":1484,"y":1051,"wires":[]},{"id":"47e7dd39d0d73556","type":"FlowHubPull","z":"1cb1d34936a3b179","g":"fbb48271c0c93b91","name":"","notab":false,"flowid":"ca78ac1011bd3194","flowname":"[NodeDev] Example of UglifyJS node","flowrevision":"","x":421,"y":716,"wires":[[]]}]