[{"id":"722b6181086e9abe","type":"tab","label":"Hello World - part 3: Data Reuse","disabled":false,"info":"::: aim\n\nDemonstrating how data can be reused in Node-RED for *free*!\n\n:::\n\n<!--\n// [] [tab] \"Hello World - part 3: Data Reuse\" - 722b6181086e9abe\n// [] [group] \"hello world - data reuse\" - 073dc5ce78a099fd\n// [] [inject] \"inject\" - 1f8c6672810d16a9\n// [] [debug] \"output\" - 8946f3e553db91b6\n// [] [function] \"functionality\" - 396454d0f6bf89d3\n// [] [function] \"functionality 2\" - cf0d6004728de37f\n// [] [debug] \"output 2\" - bcfbca844ac355f1\n-->\n\n::: explanation\n\nThis flow extends [*hello world with functionality*](https://flowhub.org/f/2817a602bd1ba715) flow with data reuse. The original data from the <a class=\"ahl-node-only\" data-ids=\"1f8c6672810d16a9\">inject node</a> is now being consumed/used by a second <a class=\"ahl-node-only\" data-ids=\"cf0d6004728de37f\">function node</a>. \n\nWe get this data reuse for *free* in Node-RED simply by connecting <a class=\"ahl-link-node\" data-ids=\"1f8c6672810d16a9,cf0d6004728de37f\">the inject to the function node</a>, ensuring that the <a class=\"ahl-link-node\" data-ids=\"1f8c6672810d16a9,396454d0f6bf89d3,1f8c6672810d16a9,cf0d6004728de37f\">inject node now has two wires</a> along which its data output now flows. We can add as many wires as we like to the *exit* port of a node, Node-RED will take care of ensuring the data is passed along to all connected nodes.\n\nNode-RED will also duplicate the data so that both function nodes have their *own* copy of the data.\n\nWhat does the second <a class=\"ahl-node-only\" data-ids=\"cf0d6004728de37f\">function node</a> do? It contains the following Javascript code:\n\n```javascript\nmsg.payload = \"New Payload\";\n\nreturn msg;\n```\n\nThe second function overwrites the payload ensuring that the second <a class=\"ahl-link-node\" data-ids=\"cf0d6004728de37f,bcfbca844ac355f1\">debug node</a> outputs `New Payload`, so that the debug panel has the following output:\n\n![img](https://cdn.openmindmap.org/content/1693041652994_Screen_Shot_2023-08-26_at_11.20.26.png)\n\n\n\n:::\n\n\n### Related Flows\n\n- [Hello World, part 2](https://flowhub.org/f/2817a602bd1ba715)\n- [Node-RED Introduction](https://flowhub.org/f/7f8714fa6e835a2a) which is a step-by-step guide for creating flows.","env":[]},{"id":"073dc5ce78a099fd","type":"group","z":"722b6181086e9abe","name":"hello world - data reuse","style":{"label":true},"nodes":["1f8c6672810d16a9","8946f3e553db91b6","396454d0f6bf89d3","cf0d6004728de37f","bcfbca844ac355f1"],"x":335,"y":244.5,"w":750,"h":180.5},{"id":"1f8c6672810d16a9","type":"inject","z":"722b6181086e9abe","g":"073dc5ce78a099fd","name":"inject","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"hello world","payloadType":"str","x":431,"y":384,"wires":[["396454d0f6bf89d3","cf0d6004728de37f"]]},{"id":"8946f3e553db91b6","type":"debug","z":"722b6181086e9abe","g":"073dc5ce78a099fd","name":"output","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":969,"y":384,"wires":[]},{"id":"396454d0f6bf89d3","type":"function","z":"722b6181086e9abe","g":"073dc5ce78a099fd","name":"functionality","func":"msg.payload = msg.payload + \", hello Node-RED\";\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":702,"y":384,"wires":[["8946f3e553db91b6"]]},{"id":"cf0d6004728de37f","type":"function","z":"722b6181086e9abe","g":"073dc5ce78a099fd","name":"functionality 2","func":"msg.payload = \"New Payload\";\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":712,"y":285.5,"wires":[["bcfbca844ac355f1"]]},{"id":"bcfbca844ac355f1","type":"debug","z":"722b6181086e9abe","g":"073dc5ce78a099fd","name":"output 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":979,"y":285.5,"wires":[]}]