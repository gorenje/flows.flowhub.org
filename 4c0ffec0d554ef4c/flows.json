[{"id":"4c0ffec0d554ef4c","type":"tab","label":"[art] Bar graph clock","disabled":false,"info":"### Aim \n\nCreate a bar graph that is a clock.\n\n![img](https://cdn.openmindmap.org/content/1698933764448_bargraphclock4.gif)\n\nTo view the clock, open `http://rednodehost:1880/ui` - there is an tab called `Experiment`.\n\n### Description\n\nEven though this might seem a rather silly thing to be doing, at the same time, it does demonstrate some neat features of Node-RED:\n\n1. It is very simple to generate repetitive messages using <a class=\"ahl-node-only\" data-ids=\"6c33cc3093de90c0\">inject</a> nodes. These can be setup to trigger in intervals, in this case every second.\n\n2. Data can be easily duplicated and used by multiple nodes. The output of the <a calss=\"ahl-node-only\" data-ids=\"d2722fe64be7a74d\">function 23</a> node is used by two subsequent graph nodes. Just connect nodes and Node-RED take care of the data duplication.\n\n3. Dashboard graphs are easily updated with new data, just send a new message. Hence the graph can be \"animated\".\n\n4. Node-RED has an inbuilt dashboard for easily creating summaries of data streams.\n\nThese and many more features of Node-RED make it a brilliant tool for experiment but also doing serious stuff (like creating this website).\n\n","env":[]},{"id":"818fb4524691203c","type":"ui_chart","z":"4c0ffec0d554ef4c","name":"","group":"58fea2e7f9801976","order":0,"width":"12","height":"12","label":"clock - horizontal","chartType":"horizontalBar","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"hello","dot":false,"ymin":"0","ymax":"64","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1899,"y":950,"wires":[[]]},{"id":"d2722fe64be7a74d","type":"function","z":"4c0ffec0d554ef4c","name":"function 23","func":"let d = new Date();\n\nreturn {\n        ...msg,\n        payload: [{\n            \"series\": [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"],\n            \"data\": [\n                [parseInt(moment(d).format(\"YY\"))],\n                [parseInt(moment(d).format(\"M\"))],\n                [parseInt(moment(d).format(\"D\"))],\n                [moment(d).hour()],\n                [moment(d).minute()],\n                [moment(d).second()],\n            ],\n            \"labels\": [\"Clock\"]\n        }]\n};\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"moment","module":"moment"}],"x":1401,"y":1076,"wires":[["818fb4524691203c","671afbbfb388e68b"]]},{"id":"6c33cc3093de90c0","type":"inject","z":"4c0ffec0d554ef4c","name":"","props":[],"repeat":"1","crontab":"","once":true,"onceDelay":"0.5","topic":"","x":986,"y":1296,"wires":[["d2722fe64be7a74d"]]},{"id":"671afbbfb388e68b","type":"ui_chart","z":"4c0ffec0d554ef4c","name":"","group":"58fea2e7f9801976","order":4,"width":"11","height":"13","label":"clock - vertical","chartType":"bar","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"hello","dot":false,"ymin":"0","ymax":"64","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#5cb47c","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1859,"y":1076,"wires":[[]]},{"id":"58fea2e7f9801976","type":"ui_group","name":"Clock","tab":"331b7a4596c7a92a","order":1,"disp":true,"width":"12","collapse":false,"className":""},{"id":"331b7a4596c7a92a","type":"ui_tab","name":"Experiment","icon":"dashboard","disabled":false,"hidden":false}]