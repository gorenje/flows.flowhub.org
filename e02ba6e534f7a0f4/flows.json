[{"id":"e02ba6e534f7a0f4","type":"tab","label":"[Introspection] TriggerImport: Convert RSS to Flow tab","disabled":false,"info":"::: aim\n\nProvide an example of the TriggerImport node that can be used to import dynamically generated flows.\n\nDemonstrate by converting an RSS feed to a Node-RED flow tab.\n\n:::\n\n::: requirements\n\nThis requirements the following Node-RED nodes:\n\n- [introspection](https://flows.nodered.org/node/@gregoriusrippenstein/node-red-contrib-introspection)\n\n:::\n\n::: explanation\n\nThe flow retrieves an RSS feed and for each entry, it generates a node in a new flow tab.\n\nThe node generated is a comment node with a link in the info box.\n\n:::\n","env":[]},{"id":"f3bdcd54a0aa8585","type":"inject","z":"e02ba6e534f7a0f4","name":"set RSS url","props":[{"p":"url","v":"https://flows.flowhub.org/feed.xml","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":250,"y":279,"wires":[["c2d4ce3e6e7c2e31"]]},{"id":"c2d4ce3e6e7c2e31","type":"http request","z":"e02ba6e534f7a0f4","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"","persist":false,"insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":405,"y":362,"wires":[["f210b63040eeb212"]]},{"id":"f210b63040eeb212","type":"xml","z":"e02ba6e534f7a0f4","name":"parse feed.xml","property":"payload","attr":"","chr":"","x":573,"y":437,"wires":[["3d604af7f2cb8912"]]},{"id":"e7289b9433d25283","type":"split","z":"e02ba6e534f7a0f4","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1082,"y":546,"wires":[["77a3c9b5811260e2"]]},{"id":"3d604af7f2cb8912","type":"change","z":"e02ba6e534f7a0f4","name":"set payload and define fake tab Z id","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.feed.entry","tot":"msg"},{"t":"set","p":"tab_id_z","pt":"msg","to":"$substring($formatBase($random()*10000, 16) & $formatBase($random()*10000, 16) & $formatBase($random()*10000, 16) & $formatBase($random()*10000, 16) & $formatBase($random()*10000, 16) &\t$formatBase($random()*10000, 16) &\t$formatBase($random()*10000, 16) &\t$formatBase($random()*10000, 16) &\t$formatBase($random()*10000, 16), 0, $length(\"611c047e656989ae\"))","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":840,"y":497,"wires":[["e7289b9433d25283"]]},{"id":"77a3c9b5811260e2","type":"function","z":"e02ba6e534f7a0f4","name":"convert xml object to flow object","func":"msg.payload = {\n    \"id\": msg.payload.id[0].match(/.{16}$/)[0],\n    \"type\": \"comment\",\n    \"z\": msg.tab_id_z,\n    \"name\": msg.payload.title[0][\"_\"],\n    \"info\": msg.payload.id[0],\n    \"sumPass\": false,\n    \"sumPassPrio\": 0,\n    \"sumPassNodeId\": \"\",\n    \"createdAt\": new Date(),\n    \"updatedAt\": new Date(),\n    \"x\": 801 * Math.random(),\n    \"y\": 699 * Math.random(),\n    \"wires\": [\n        []\n    ]\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1121,"y":622,"wires":[["9de0d672c6fbccb8"]]},{"id":"9de0d672c6fbccb8","type":"join","z":"e02ba6e534f7a0f4","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","reduceRight":false,"x":1089,"y":693,"wires":[["14a1e43f96d750a4"]]},{"id":"14a1e43f96d750a4","type":"TriggerImport","z":"e02ba6e534f7a0f4","name":"","x":1700,"y":687,"wires":[[]]}]